var searchModuleIndex = ["arrays","benchmark","bitfield","builtin","cli","clipboard","clipboard.dummy","clipboard.x11","context","crypto","crypto.aes","crypto.cipher","crypto.hmac","crypto.internal.subtle","crypto.md5","crypto.rand","crypto.rc4","crypto.sha1","crypto.sha256","crypto.sha512","darwin","dl","encoding.base64","encoding.binary","encoding.csv","encoding.utf8","encoding.utf8.east_asian","eventbus","flag","fontstash","gg","gg.m4","glm","gx","hash","hash.crc32","hash.fnv1a","io","io.util","json","log","math","math.big","math.bits","math.complex","math.factorial","math.fractions","math.mathutil","math.stats","math.util","mssql","mysql","net","net.ftp","net.html","net.http","net.http.chunked","net.openssl","net.smtp","net.unix","net.urllib","net.websocket","os","os.cmdline","os.notify","pg","picoev","picohttpparser","rand","rand.constants","rand.dist","rand.mt19937","rand.musl","rand.pcg32","rand.seed","rand.splitmix64","rand.sys","rand.util","rand.wyrand","readline","regex","runtime","semver","sokol","sokol.audio","sokol.c","sokol.f","sokol.gfx","sokol.sapp","sokol.sfons","sokol.sgl","sqlite","stbi","strconv","strings","strings.textscanner","sync","sync.atomic2","sync.pool","szip","term","term.ui","time","time.misc","v.ast","v.ast.walker","v.builder","v.cflag","v.checker","v.depgraph","v.doc","v.embed_file","v.errors","v.eval","v.fmt","v.gen.c","v.gen.js","v.gen.js.sourcemap","v.gen.js.sourcemap.vlq","v.gen.native","v.live","v.live.executable","v.live.sharedlib","v.markused","v.parser","v.pkgconfig","v.pref","v.scanner","v.token","v.util","v.util.diff","v.util.recompilation","v.util.vtest","v.vcache","v.vet","v.vmod","vweb","vweb.assets","vweb.sse","x.json2","x.ttf","x.websocket",];
var searchIndex = ["min","max","idx_min","idx_max","merge","group","shuffle","Benchmark","set_total_expected_steps","stop","step","fail","ok","skip","fail_many","ok_many","neither_fail_nor_ok","measure","step_message_with_label_and_duration","step_message_with_label","step_message","step_message_ok","step_message_fail","step_message_skip","total_message","total_duration","new_benchmark","new_benchmark_no_cstep","new_benchmark_pointer","start","BitField","str","free","get_bit","set_bit","clear_bit","extract","insert","extract_lowest_bits_first","insert_lowest_bits_first","set_all","clear_all","toggle_bit","get_size","clone","cmp","==","pop_count","pos","slice","reverse","resize","rotate","from_bytes","from_bytes_lowest_bits_first","from_str","new","bf_and","bf_not","bf_or","bf_xor","join","hamming","array","repeat","repeat_to_depth","sort_with_compare","insert","insert_many","prepend","prepend_many","delete","delete_many","clear","trim","first","last","pop","delete_last","clone","clone_to_depth","push_many","reverse_in_place","reverse","free","grow_cap","grow_len","pointers","[]string","eq","free","index","join","join_lines","sort","sort_by_len","sort_ignore_case","str","[]byte","clone","hex","bytestr","copy","[]int","sort","reduce","voidptr","vbytes","str","byte","ascii_str","hex","is_bin_digit","is_capital","is_digit","is_hex_digit","is_letter","is_oct_digit","is_space","str","str","str_escaped","vbytes","vbytes","vstring","vstring","vstring_literal","vstring_literal","vstring_literal_with_len","vstring_literal_with_len","vstring_with_len","vstring_with_len","exit","panic_optional_not_set","panic","eprintln","eprint","print","println","malloc","malloc_noscan","v_realloc","realloc_data","vcalloc","vcalloc_noscan","free","memdup","memdup_noscan","isnil","is_atty","print_backtrace","VAssertMetaInfo","MethodArgs","FunctionData","FieldData","StructAttribute","gc_check_leaks","SymbolInfo","SymbolInfoContainer","Line64","proc_pidpath","ChanState","chan","close","try_pop","try_push","f64","str","strg","strsci","strlong","eq_epsilon","float literal","str","f32","str","strg","strsci","strlong","eq_epsilon","f32_abs","f32_max","f32_min","f64_max","ptr_str","size_t","str","char","str","vstring","vstring","vstring_literal","vstring_literal","vstring_literal_with_len","vstring_literal_with_len","vstring_with_len","vstring_with_len","i8","str","hex","i16","str","hex","u16","str","hex","int","str","hex","hex2","u32","str","hex","int literal","str","hex","i64","str","hex","u64","str","hex","hex_full","bool","str","map","move","delete","clone","free","IError","str","free","Error","free","error","error_with_code","None__","free","rune","str","[]rune","string","SortedMap","delete","keys","free","print","string","after","after_char","all_after","all_after_last","all_before","all_before_last","before","bool","bytes","capitalize","clone","contains","contains_any","contains_any_substr","count","ends_with","f32","f64","fields","find_between","free","hash","i16","i64","i8","index","index_after","index_any","index_byte","int","is_capital","is_lower","is_title","is_upper","last_index","last_index_byte","limit","repeat","replace","replace_each","replace_once","reverse","runes","split","split_into_lines","split_nth","starts_with","str","strip_margin","strip_margin_custom","substr","title","to_lower","to_upper","to_wide","trim","trim_left","trim_prefix","trim_right","trim_space","trim_suffix","u16","u32","u64","utf32_code","vstrlen","tos","tos_clone","tos2","tos3","tos4","tos5","tos_lit","cstring_to_vstring","compare_strings","StrIntpType","str","StrIntpMem","get_str_intp_u64_format","get_str_intp_u32_format","StrIntpCgenData","StrIntpData","str_intp","str_intp_sq","str_intp_rune","str_intp_g32","str_intp_g64","str_intp_sub","string_from_wide","string_from_wide2","utf8_getchar","utf8_char_len","utf32_to_str","utf32_to_str_no_malloc","utf8_str_len","utf8_str_visible_length","FnCommandCallback","str","Command","str","is_root","root","full_name","add_commands","add_command","setup","add_flags","add_flag","parse","execute_help","FlagType","Flag","get_bool","get_int","get_ints","get_float","get_floats","get_string","get_strings","[]Flag","get_all_found","get_bool","get_int","get_ints","get_float","get_floats","get_string","get_strings","new","Clipboard","check_availability","check_ownership","clear","clear_all","copy","destroy","free","get_text","has_ownership","is_available","paste","set_text","new_primary","Clipboard","set_text","get_text","clear","free","has_ownership","check_availability","new_clipboard","new_primary","Clipboard","check_availability","free","clear","has_ownership","set_text","get_text","new_clipboard","new_primary","Context","background","todo","Canceler","cancel","CancelContext","deadline","done","err","value","str","with_cancel","TimerContext","deadline","done","err","value","cancel","str","with_deadline","with_timeout","EmptyContext","deadline","done","err","value","str","ValueContext","deadline","done","err","value","str","with_value","Hash","new_cipher","AesCipher","block_size","encrypt","decrypt","new_cbc","AesCbc","block_size","encrypt_blocks","decrypt_blocks","xor_bytes","safe_xor_bytes","xor_words","new","equal","any_overlap","inexact_overlap","constant_time_byte_eq","constant_time_eq","constant_time_select","constant_time_compare","constant_time_copy","constant_time_less_or_eq","new","Digest","write","sum","checksum","size","block_size","sum","hexhash","read","int_u64","new_cipher","Cipher","reset","xor_key_stream","new","Digest","write","sum","size","block_size","sum","hexhash","new","new224","Digest","sum","size","block_size","sum","sum256","sum224","hexhash","hexhash_224","new","sum512","sum384","sum512_224","sum512_256","Digest","size","block_size","hexhash","hexhash_384","hexhash_512_224","hexhash_512_256","nsstring","resource_path","get_shared_library_extension","get_libname","open_opt","sym_opt","open","close","sym","dlerror","decode","decode_str","encode","encode_str","url_decode","url_decode_str","url_encode","url_encode_str","decode_in_buffer","encode_in_buffer","little_endian_u16","little_endian_put_u16","little_endian_u32","little_endian_put_u32","little_endian_u64","little_endian_put_u64","big_endian_u16","big_endian_put_u16","big_endian_u32","big_endian_put_u32","big_endian_u64","big_endian_put_u64","new_reader","Reader","read","new_writer","Writer","write","str","validate_str","validate","len","char_len","get_uchar","raw_index","reverse","to_upper","to_lower","is_punct","is_uchar_punct","is_global_punct","is_uchar_global_punct","EastAsianWidthProperty","display_width","east_asian_width_property_at","EventHandlerFn","Publisher","Subscriber","subscribe","subscribe_method","unsubscribe_method","unsubscribe_receiver","subscribe_once","is_subscribed","is_subscribed_method","unsubscribe","EventBus","publish","clear_all","has_subscriber","new","Flag","str","[]Flag","str","FlagParser","usage_example","footer","application","version","description","skip_executable","allow_unknown_args","bool_opt","bool","int_multi","int_opt","int","float_multi","float_opt","float","string_multi","string_opt","string","limit_free_args_to_at_least","limit_free_args_to_exactly","limit_free_args","arguments_description","usage","finalize","remaining_parameters","new_flag_parser","create_internal","delete_internal","C.FONScontext","add_fallback_font","add_font_mem","clear_state","draw_debug","draw_text","expand_atlas","get_atlas_size","get_font_by_name","get_texture_data","line_bounds","pop_state","push_state","reset_atlas","set_align","set_blur","set_color","set_error_callback","set_font","set_size","set_spacing","text_bounds","text_iter_init","text_iter_next","validate_texture","vert_metrics","FonsFlags","FonsAlign","FonsErrorCode","C.FONSparams","C.FONSquad","C.FONStextIter","C.FONSfont","MouseButton","MouseButtons","Modifier","PenLineType","KeyCode","FNCb","FNEvent","FNFail","FNKeyDown","FNKeyUp","FNMove","FNClick","FNUnClick","FNChar","Event","Config","PenConfig","Context","begin","cache_image","create_image","create_image_from_byte_array","create_image_from_memory","create_image_with_size","draw_arc","draw_arc_line","draw_circle","draw_circle_line","draw_circle_with_segments","draw_convex_poly","draw_empty_poly","draw_empty_rect","draw_empty_rounded_rect","draw_empty_square","draw_image","draw_image_3d","draw_image_by_id","draw_image_flipped","draw_image_part","draw_image_with_config","draw_line","draw_line_with_config","draw_rect","draw_rounded_rect","draw_square","draw_text","draw_text_def","draw_triangle","end","get_cached_image_by_idx","new_streaming_image","quit","refresh_ui","resize","run","set_bg_color","set_cfg","set_pixel","text_height","text_size","text_width","update_pixel_data","Size","new_context","screen_size","window_size","window_size_real_pixels","dpi_scale","high_dpi","Image","init_sokol_image","update_pixel_data","DrawImageConfig","Rect","FT","flush","system_font_path","rad","deg","ortho","perspective","look_at","calc_tr_matrices","Mat4","str","clean","sum_all","is_equal","get_e","get_f","set_e","set_f","copy","set_trace","get_trace","set_f32","set_row","get_row","set_col","get_col","swap_col","swap_row","transpose","mul_scalar","+","-","*","inverse","translate","zero_m4","unit_m4","set_m4","add","sub","mul","mul_vec","det","rotate","scale","Vec4","str","clean","copy","mul_scalar","inv","normalize","normalize3","mod","mod3","sum","+","-","*","%","mul_vec4","vec3","zero_v4","one_v4","blank_v4","set_v4","Mat4","str","vec3","Vec3","str","Vec2","str","translate","ortho","ortho_zo","scale","mult","rotate","rotate_z","identity","identity2","identity3","Color","+","-","*","/","eq","str","rgba8","bgra8","abgr8","hex","rgb","rgba","color_from_string","Image","is_empty","HorizontalAlign","VerticalAlign","TextCfg","wyhash_c","wyhash64_c","sum64_string","sum64","wymum","Crc32","checksum","new","sum","sum32_string","sum32","sum64_string","sum64","BufferedReaderConfig","new_buffered_reader","BufferedReader","read","free","end_of_stream","read_line","cp","new_multi_writer","MultiWriter","write","Reader","make_reader","ReadAllConfig","read_all","read_any","ReaderWriter","ReaderWriterImpl","read","write","make_readerwriter","Writer","RandomWriter","TempFileOptions","temp_file","TempDirOptions","temp_dir","decode","encode","encode_pretty","Level","LogTarget","Log","set_level","set_output_level","set_full_logpath","set_output_label","set_output_path","log_to_console_too","flush","close","send_output","fatal","error","warn","info","debug","inf","nan","is_nan","is_inf","abs","acos","asin","atan","atan2","cbrt","ceil","cos","cosf","cosh","exp","erf","erfc","exp2","floor","fmod","gamma","hypot","log","log2","log10","log_gamma","log_n","pow","powf","round","sin","sinf","sinh","sqrt","sqrtf","tan","tanf","tanh","trunc","aprox_sin","aprox_cos","copysign","degrees","digits","fabs","gcd","lcm","max","min","sign","signi","radians","signbit","f32_bits","f32_from_bits","f64_bits","f64_from_bits","new","from_int","from_u64","from_hex_string","from_string","Number","int","str","hexstr","+","-","*","/","%","is_zero","inc","dec","isqrt","lshift","rshift","clone","bytes","bytes_trimmed","divmod","cmp","pow","b_and","b_or","b_xor","factorial","fact","leading_zeros_8","leading_zeros_16","leading_zeros_32","leading_zeros_64","trailing_zeros_8","trailing_zeros_16","trailing_zeros_32","trailing_zeros_64","ones_count_8","ones_count_16","ones_count_32","ones_count_64","rotate_left_8","rotate_left_16","rotate_left_32","rotate_left_64","reverse_8","reverse_16","reverse_32","reverse_64","reverse_bytes_16","reverse_bytes_32","reverse_bytes_64","len_8","len_16","len_32","len_64","add_32","add_64","sub_32","sub_64","mul_32","mul_64","div_32","div_64","rem_32","rem_64","Complex","str","abs","mod","angle","+","-","*","/","add","subtract","multiply","divide","conjugate","addinv","mulinv","pow","root","exp","ln","log","arg","cpow","sin","cos","tan","cot","sec","csc","asin","acos","atan","acot","asec","acsc","sinh","cosh","tanh","coth","sech","csch","asinh","acosh","atanh","acoth","acsch","equals","complex","factorial","log_factorial","approximate","approximate_with_eps","fraction","Fraction","str","+","-","*","/","negate","reciprocal","reduce","f64","equals","ge","gt","le","lt","min","max","abs","freq","mean","geometric_mean","harmonic_mean","median","mode","rms","population_variance","sample_variance","population_stddev","sample_stddev","mean_absdev","min","max","range","imin","imax","iabs","umin","umax","uabs","fmin_32","fmax_32","fabs_32","fmin_64","fmax_64","fabs_64","Config","get_conn_str","Connection","connect","close","query","Row","Result","FieldType","str","ConnectionFlag","Connection","connect","query","real_query","select_db","change_user","affected_rows","autocommit","tables","escape_string","set_option","get_option","refresh","reset","ping","close","info","get_host_info","get_server_info","get_server_version","dump_debug_info","get_client_info","get_client_version","debug","Result","fetch_row","n_rows","n_fields","rows","maps","fields","free","Row","Field","str","SocketType","AddrFamily","C.fd_set","Addr","family","resolve_addrs","resolve_addrs_fuzzy","resolve_ipaddrs","addr_from_socket_handle","socket_error","wrap_error","WsaError","wsa_error","SocketOption","TcpConn","addr","close","peer_addr","peer_ip","read","read_deadline","read_line","read_ptr","read_timeout","set_read_deadline","set_read_timeout","set_write_deadline","set_write_timeout","str","wait_for_read","wait_for_write","write","write_deadline","write_ptr","write_str","write_string","write_timeout","dial_tcp","TcpListener","accept","accept_deadline","set_accept_deadline","accept_timeout","set_accept_timeout","wait_for_accept","close","addr","listen_tcp","TcpSocket","set_option_bool","set_dualstack","set_option_int","address","UdpConn","write_ptr","write","write_str","write_string","write_to_ptr","write_to","write_to_string","read","read_deadline","set_read_deadline","write_deadline","set_write_deadline","read_timeout","set_read_timeout","write_timeout","set_write_timeout","wait_for_read","wait_for_write","str","close","dial_udp","listen_udp","UdpSocket","set_option_bool","set_dualstack","validate_port","split_address","new","FTP","connect","login","close","pwd","cd","dir","get","DocumentObjectModel","get_tag_by_attribute_value","get_tag","get_tag_by_attribute","get_root","get_tags","parse","parse_file","Parser","add_code_tag","split_parse","parse_html","finalize","get_dom","Tag","text","str","Cookie","str","SameSite","read_set_cookies","read_cookies","sanitize_cookie_value","is_cookie_domain_name","download_file","CommonHeader","str","Header","free","add","add_custom","add_map","add_custom_map","set","set_custom","delete","delete_custom","coerce","contains","contains_custom","get","get_custom","starting_with","values","custom_values","keys","render","join","str","HeaderConfig","new_header","new_header_from_map","new_custom_header_from_map","HeaderCoerceConfig","HeaderQueryConfig","HeaderRenderConfig","FetchConfig","new_request","get","post","post_json","post_form","put","patch","head","delete","fetch","get_text","url_encode_form_data","unescape_url","escape_url","unescape","escape","Method","str","method_from_str","Request","add_header","add_custom_header","do","referer","parse_request","Response","bytes","bytestr","parse_response","Server","listen_and_serve","Status","str","int","is_valid","is_error","is_success","status_from_int","Version","str","version_from_str","decode","C.SSL","SSL_CTX","SSL","SSL_METHOD","OPENSSL_INIT_SETTINGS","ssl_error","SSLError","SSLConn","shutdown","connect","socket_read_into_ptr","read_into","write","new_ssl_conn","BodyType","Client","reconnect","send","quit","Mail","new_client","listen_stream","connect_stream","StreamListener","accept","accept_deadline","set_accept_deadline","accept_timeout","set_accept_timeout","wait_for_accept","close","StreamConn","close","write_ptr","write","write_str","write_string","read_ptr","read","read_deadline","set_read_deadline","write_deadline","set_write_deadline","read_timeout","set_read_timeout","write_timeout","set_write_timeout","wait_for_read","wait_for_write","str","query_unescape","path_unescape","query_escape","path_escape","URL","set_path","escaped_path","str","is_abs","parse","resolve_reference","query","request_uri","hostname","port","user","parse","parse_query","Values","del","encode","get","get_all","set","add","valid_userinfo","ishex","new_values","Value","all","AcceptClientFn","SocketMessageFn","SocketMessageFn2","SocketErrorFn","SocketErrorFn2","SocketOpenFn","SocketOpenFn2","SocketCloseFn","SocketCloseFn2","Server","listen","on_close","on_close_ref","on_connect","on_message","on_message_ref","set_ping_interval","free","Client","close","connect","free","listen","on_close","on_close_ref","on_error","on_error_ref","on_message","on_message_ref","on_open","on_open_ref","parse_frame_header","ping","pong","read_next_message","validate_frame","write","write_ptr","write_str","write_string","Uri","str","State","Message","free","OPCode","new_client","new_server","args_after","args_before","getenv","setenv","unsetenv","environ","fd_close","fd_write","fd_slurp","fd_read","File","close","flush","read","read_bytes","read_bytes_at","read_bytes_into","read_bytes_into_newline","read_from","read_raw","read_raw_at","read_struct","read_struct_at","write","write_full_buffer","write_ptr","write_ptr_at","write_raw","write_raw_at","write_string","write_struct","write_struct_at","write_to","writeln","open_file","open","create","stdin","stdout","stderr","ErrFileNotOpened","ErrSizeOfTypeIs0","inode","Result","free","cp_all","mv_by_cp","read_lines","sigint_to_signal_name","rmdir_all","is_dir_empty","file_ext","dir","base","file_name","input_opt","input","get_line","get_lines","get_lines_joined","get_raw_lines_joined","user_os","home_dir","write_file","write_file_array","find_abs_path_of_executable","exists_in_system_path","is_file","is_abs_path","join_path","walk_ext","walk","log","mkdir_all","cache_dir","temp_dir","vmodules_dir","vmodules_paths","resource_abs_path","Uname","execute_or_panic","execute_or_exit","is_atty","glob","read_bytes","read_file","truncate","file_size","mv","cp","vfopen","fileno","posix_get_error_msg","system","exists","is_executable","is_writable","is_readable","rm","rmdir","get_raw_line","get_raw_stdin","read_file_array","on_segfault","executable","is_dir","is_link","chdir","getwd","real_path","fork","wait","file_last_mod_unix","flush","chmod","chown","open_append","execvp","execve","HANDLE","HMODULE","utime","ls","mkdir","get_file_handle","get_module_filename","get_error_msg","execute","symlink","link","ExceptionRecord","ContextRecord","ExceptionPointers","VectoredExceptionHandler","add_vectored_exception_handler","debugger_present","uname","hostname","loginname","is_writable_folder","getpid","getppid","getuid","geteuid","getgid","getegid","posix_set_permission_bit","ProcessState","Process","set_args","set_environment","run","signal_kill","signal_pgkill","signal_stop","signal_continue","wait","close","free","is_alive","set_redirect_stdio","stdin_write","stdout_slurp","stderr_slurp","stdout_read","stderr_read","new_process","WProcess","Signal","signal_opt","options","option","options_before","options_after","only_non_options","only_options","FdNotifier","FdEvent","FdEventType","FdConfigFlags","new","DB","close","q_int","q_string","q_strings","exec","exec_one","exec_param_many","exec_param2","exec_param","copy_expert","Row","Config","connect","Config","new","Picoev","serve","cmp","cmpn","Request","parse_request","parse_request_path","parse_request_path_pipeline","Response","write_string","http_ok","header","header_date","header_server","content_type","html","plain","json","body","http_404","http_405","http_500","raw","end","PRNGConfigStruct","PRNG","new_default","get_current_rng","set_rng","seed","u32","u64","u32n","u64n","u32_in_range","u64_in_range","int","intn","byte","int_in_range","int31","i64","i64n","i64_in_range","int63","f32","f64","f32n","f64n","f32_in_range","f64_in_range","string_from_set","string","hex","ascii","uuid_v4","ulid","ulid_at_millisecond","bernoulli","binomial","NormalConfigStruct","normal_pair","normal","exponential","MT19937RNG","seed","u32","u64","int","i64","int31","int63","u32n","u64n","u32_in_range","u64_in_range","intn","i64n","int_in_range","i64_in_range","f32","f64","f32n","f64n","f32_in_range","f64_in_range","MuslRNG","seed","u32","u64","u32n","u64n","u32_in_range","u64_in_range","int","i64","int31","int63","intn","i64n","int_in_range","i64_in_range","f32","f64","f32n","f64n","f32_in_range","f64_in_range","PCG32RNG","seed","u32","u64","u32n","u64n","u32_in_range","u64_in_range","int","i64","int31","int63","intn","i64n","int_in_range","i64_in_range","f32","f64","f32n","f64n","f32_in_range","f64_in_range","time_seed_array","time_seed_32","time_seed_64","SplitMix64RNG","seed","u32","u64","u32n","u64n","u32_in_range","u64_in_range","int","i64","int31","int63","intn","i64n","int_in_range","i64_in_range","f32","f64","f32n","f64n","f32_in_range","f64_in_range","SysRNG","seed","default_rand","u32","u64","u32n","u64n","u32_in_range","u64_in_range","int","i64","int31","int63","intn","i64n","int_in_range","i64_in_range","f32","f64","f32n","f64n","f32_in_range","f64_in_range","sample_nr","sample_r","shuffle","WyRandRNG","seed","u32","u64","u32n","u64n","u32_in_range","u64_in_range","int","i64","int31","int63","intn","i64n","int_in_range","i64_in_range","f32","f64","f32n","f64n","f32_in_range","f64_in_range","Readline","read_line_utf8","read_line","read_line_utf8","read_line","RE","compile_opt","find","find_all","find_all_str","find_from","get_code","get_group_bounds_by_id","get_group_bounds_by_name","get_group_by_id","get_group_by_name","get_group_list","get_query","match_base","match_string","replace","replace_by_fn","replace_simple","FnValidator","FnLog","new","regex_opt","regex_base","Re_group","FnReplace","nr_jobs","is_32bit","is_64bit","is_little_endian","is_big_endian","nr_cpus","Version","increment","satisfies","eq","gt","lt","ge","le","Increment","from","build","coerce","is_valid","FNStreamingCB","str","FnStreamingCBWithUserData","str","C.saudio_desc","setup","shutdown","is_valid","user_data","query","sample_rate","buffer_frames","channels","expect","push","fclamp","min","max","Backend","PixelFormat","ResourceState","Usage","BufferType","IndexType","ImageType","CubeFace","ShaderStage","PrimitiveType","Filter","Wrap","BorderColor","VertexFormat","VertexStep","UniformType","CullMode","FaceWinding","CompareFunc","StencilOp","BlendFactor","BlendOp","ColorMask","Action","setup","shutdown","reset_state_cache","make_buffer","make_image","make_shader","make_pipeline","make_pass","destroy_buffer","destroy_image","destroy_shader","destroy_pipeline","destroy_pass","update_buffer","update_image","append_buffer","query_buffer_overflow","begin_default_pass","begin_pass","apply_viewport","apply_scissor_rect","apply_pipeline","apply_bindings","apply_uniforms","draw","end_pass","commit","query_desc","query_backend","query_features","query_limits","query_pixelformat","query_buffer_state","query_image_state","query_shader_state","query_pipeline_state","query_pass_state","query_buffer_info","query_image_info","query_shader_info","query_pipeline_info","query_pass_info","query_buffer_defaults","query_image_defaults","query_shader_defaults","query_pipeline_defaults","query_pass_defaults","setup_context","activate_context","discard_context","C.sg_desc","C.sg_context_desc","C.sg_gl_context_desc","C.sg_metal_context_desc","C.sg_d3d11_context_desc","C.sg_color_state","C.sg_pipeline_desc","C.sg_pipeline_info","C.sg_pipeline","free","C.sg_bindings","set_vert_image","set_frag_image","update_vert_buffer","append_vert_buffer","update_index_buffer","append_index_buffer","C.sg_shader_desc","set_vert_src","set_frag_src","set_vert_image","set_frag_image","set_vert_uniform_block_size","set_frag_uniform_block_size","set_vert_uniform","set_frag_uniform","make_shader","C.sg_shader_attr_desc","C.sg_shader_stage_desc","set_image","C.sg_shader_uniform_block_desc","C.sg_shader_uniform_desc","C.sg_shader_image_desc","C.sg_shader_info","C.sg_context","C.sg_range","C.sg_color","C.sg_shader","free","C.sg_pass_desc","C.sg_pass_info","C.sg_pass_action","C.sg_pass","free","C.sg_buffer_desc","C.sg_buffer_info","C.sg_buffer","free","DepthLayers","C.sg_image_desc","C.sg_image_info","C.sg_image","free","C.sg_image_data","C.sg_features","C.sg_limits","C.sg_layout_desc","C.sg_buffer_layout_desc","C.sg_vertex_attr_desc","C.sg_stencil_state","C.sg_depth_state","C.sg_stencil_face_state","C.sg_blend_state","C.sg_color_attachment_action","C.sg_depth_attachment_action","C.sg_stencil_attachment_action","C.sg_pixelformat_info","C.sg_pass_attachment_desc","create_clear_pass","EventType","MouseButton","Modifier","KeyCode","create_desc","isvalid","width","height","high_dpi","dpi_scale","show_keyboard","keyboard_shown","show_mouse","mouse_shown","lock_mouse","mouse_locked","userdata","query_desc","request_quit","cancel_quit","quit","consume_event","frame_count","set_clipboard_string","get_clipboard_string","run","gles2","html5_ask_leave_site","metal_get_device","metal_get_renderpass_descriptor","metal_get_drawable","macos_get_window","ios_get_window","d3d11_get_device","d3d11_get_device_context","d3d11_get_render_target_view","d3d11_get_depth_stencil_view","win32_get_hwnd","android_get_native_activity","C.sapp_desc","Event","C.sapp_event","str","C.sapp_touchpoint","create","destroy","rgba","flush","setup","shutdown","error","defaults","rad","deg","make_pipeline","destroy_pipeline","viewport","scissor_rect","enable_texture","disable_texture","texture","default_pipeline","load_pipeline","push_pipeline","pop_pipeline","matrix_mode_modelview","matrix_mode_projection","matrix_mode_texture","load_identity","load_matrix","load_transpose_matrix","mult_matrix","mult_transpose_matrix","rotate","scale","translate","frustum","ortho","perspective","lookat","push_matrix","pop_matrix","t2f","c3f","c4f","c3b","c4b","c1i","begin_points","begin_lines","begin_line_strip","begin_triangles","begin_triangle_strip","begin_quads","v2f","v3f","v2f_t2f","v3f_t2f","v2f_c3f","v2f_c3b","v2f_c4f","v2f_c4b","v2f_c1i","v3f_c3f","v3f_c3b","v3f_c4f","v3f_c4b","v3f_c1i","v2f_t2f_c3f","v2f_t2f_c3b","v2f_t2f_c4f","v2f_t2f_c4b","v2f_t2f_c1i","v3f_t2f_c3f","v3f_t2f_c3b","v3f_t2f_c4f","v3f_t2f_c4b","v3f_t2f_c1i","end","draw","SglError","C.sgl_pipeline","C.sgl_desc_t","DB","str","close","last_insert_rowid","q_int","q_string","exec","exec_one","exec_none","insert","create_table","Row","connect","Image","free","load","load_from_memory","set_flip_vertically_on_load","atof64","atof_quick","byte_to_lower","common_parse_uint","common_parse_uint2","parse_uint","common_parse_int","parse_int","atoi","Dec32","get_string_32","f32_to_str","f32_to_str_pad","f64_to_str","f64_to_str_pad","Align_text","BF_param","format_str","format_str_sb","format_dec_sb","f64_to_str_lnd1","format_fl","format_es","remove_tail_zeros","ftoa_64","ftoa_long_64","ftoa_32","ftoa_long_32","format_int","format_uint","PrepNumber","Float64u","Float32u","decimal_len_32","decimal_len_64","f32_to_str_l","f32_to_str_l_no_dot","f64_to_str_l","f64_to_str_l_no_dot","fxx_to_str_l_parse","fxx_to_str_l_parse_no_dot","dec_digits","v_printf","v_sprintf","format_fl_old","format_es_old","remove_tail_zeros_old","format_dec_old","Builder","write_ptr","write_b","write","byte_at","write_string","go_back","cut_last","cut_to","go_back_to","writeln","last_n","after","str","free","new_builder","levenshtein_distance","levenshtein_distance_percentage","dice_coefficient","repeat","repeat_string","TextScanner","free","remaining","next","skip","skip_n","peek","peek_n","back","back_n","peek_back","peek_back_n","current","reset","goto_end","new","new_channel","Channel","auto_str","close","len","closed","push","try_push","pop","try_pop","channel_select","Mutex","init","@lock","unlock","destroy","RwMutex","init","@rlock","@lock","runlock","unlock","new_mutex","new_rwmutex","new_semaphore","new_semaphore_init","Semaphore","init","post","wait","try_wait","timed_wait","destroy","new_waitgroup","WaitGroup","init","add","done","wait","add_u64","sub_u64","add_i64","sub_i64","store_u64","load_u64","store_i64","load_i64","PoolProcessor","set_max_jobs","work_on_items","work_on_pointers","get_item","get_result","get_results","set_shared_context","get_shared_context","set_thread_context","get_thread_context","ThreadCB","PoolProcessorConfig","new_pool_processor","CompressionLevel","OpenMode","open","Zip","close","open_entry","close_entry","name","index","is_dir","size","crc32","write_entry","create_entry","read_entry","extract_entry","total","extract_zip_to_dir","zip_files","format","format_rgb","rgb","bg_rgb","hex","bg_hex","bg_black","bright_bg_black","bg_blue","bright_bg_blue","bg_cyan","bright_bg_cyan","bg_green","bright_bg_green","bg_magenta","bright_bg_magenta","bg_red","bright_bg_red","bg_white","bright_bg_white","bg_yellow","bright_bg_yellow","black","bright_black","blue","bright_blue","bold","cyan","bright_cyan","dim","green","bright_green","gray","hidden","italic","inverse","magenta","bright_magenta","reset","red","bright_red","strikethrough","underline","white","bright_white","yellow","bright_yellow","set_cursor_position","move","cursor_up","cursor_down","cursor_forward","cursor_back","erase_display","erase_toend","erase_tobeg","erase_clear","erase_del_clear","erase_line","erase_line_toend","erase_line_tobeg","erase_line_clear","show_cursor","hide_cursor","clear_previous_line","Coord","can_show_color_on_stdout","can_show_color_on_stderr","failed","ok_message","fail_message","warn_message","colorize","strip_ansi","h_divider","header_left","header","get_terminal_size","get_cursor_position","set_terminal_title","clear","KeyCode","Direction","MouseButton","EventType","Modifiers","Event","Context","bold","clear","draw_dashed_line","draw_empty_dashed_rect","draw_empty_rect","draw_line","draw_point","draw_rect","draw_text","flush","hide_cursor","horizontal_separator","reset","reset_bg_color","reset_color","run","set_bg_color","set_color","set_cursor_position","set_window_title","show_cursor","write","Config","init","Color","hex","Time","-","<","==","add","add_days","add_seconds","clean","clean12","day_of_week","ddmmy","format","format_ss","format_ss_micro","format_ss_milli","get_fmt_date_str","get_fmt_str","get_fmt_time_str","hhmm","hhmm12","hhmmss","local","long_weekday_str","md","relative","relative_short","smonth","str","unix_time","unix_time_milli","utc_string","weekday_str","ymmdd","parse","parse_rfc2822","parse_iso8601","StopWatchOptions","StopWatch","start","restart","stop","pause","elapsed","new_stopwatch","FormatTime","FormatDate","FormatDelimiter","C.timeval","now","utc","new_time","day_of_week","ticks","sleep_ms","usleep","is_leap_year","days_in_month","Duration","microseconds","milliseconds","minutes","nanoseconds","seconds","sys_milliseconds","hours","offset","sys_mono_now","SystemTime","unix_time","darwin_now","linux_now","solaris_now","darwin_utc","linux_utc","solaris_utc","wait","sleep","unix","unix2","random","TypeDecl","Expr","is_blank_ident","is_expr","is_lit","is_lockable","is_lvalue","position","str","is_auto_deref_var","Stmt","str","check_c_expr","ScopeObject","is_simple_define_const","Node","position","children","TypeNode","EmptyExpr","empty_expr","EmptyStmt","empty_stmt","EmptyNode","empty_node","Block","ExprStmt","IntegerLiteral","FloatLiteral","StringLiteral","StringInterLiteral","get_fspec_braces","CharLiteral","BoolLiteral","SelectorExpr","root_ident","Module","StructField","equals","ConstField","is_simple_define_const","comptime_expr_value","ConstDecl","StructDecl","Embed","InterfaceEmbedding","InterfaceDecl","StructInitField","StructInitEmbed","StructInit","Import","ImportSymbol","AnonFn","FnDecl","new_method_with_receiver_type","stringify","modname","BranchStmt","str","CallExpr","CallArg","str","Return","Var","ScopeStructField","GlobalField","GlobalDecl","EmbeddedFile","File","free","IdentFn","IdentVar","IdentInfo","IdentKind","Ident","var_info","InfixExpr","PostfixExpr","PrefixExpr","IndexExpr","recursive_mapset_is_setter","IfExpr","IfBranch","UnsafeExpr","LockExpr","MatchExpr","MatchBranch","SelectExpr","SelectBranch","CompForKind","str","CompFor","ForStmt","ForInStmt","ForCStmt","HashStmt","AssignStmt","AsCast","EnumVal","EnumField","EnumDecl","AliasTypeDecl","SumTypeDecl","FnTypeDecl","DeferStmt","ParExpr","GoExpr","GotoLabel","GotoStmt","ArrayInit","ArrayDecompose","ChanInit","MapInit","RangeExpr","CastExpr","AsmStmt","AsmTemplate","AsmArg","AsmRegister","AsmDisp","AsmAlias","AsmAddressing","AddressingMode","AsmClobbered","AsmIO","AssertStmt","IfGuardExpr","OrKind","OrExpr","Assoc","SizeOf","IsRefType","OffsetOf","Likely","TypeOf","DumpExpr","Comment","ConcatExpr","AtExpr","ComptimeSelector","ComptimeCall","None","SqlStmtKind","SqlStmt","SqlStmtLine","SqlExpr","NodeError","CTempVar","all_registers","AttrKind","Attr","debug","str","[]Attr","contains","find_comptime_define","Table","add_placeholder_type","array_cname","array_fixed_cname","array_fixed_name","array_name","bitsize_to_type","chan_cname","chan_name","complete_interface_check","does_type_implement_interface","find_field","find_field_with_embeds","find_fn","find_or_register_array","find_or_register_array_fixed","find_or_register_array_with_dims","find_or_register_chan","find_or_register_fn_type","find_or_register_map","find_or_register_multi_return","find_or_register_thread","find_type","find_type_idx","fn_signature","fn_signature_using_aliases","fn_type_signature","fn_type_source_signature","free","get_final_type_symbol","get_type_name","get_type_symbol","has_deep_child_no_ref","is_same_method","known_fn","known_type","known_type_idx","known_type_names","map_cname","map_name","mktyp","panic","parse_cflag","register_aggregate_method","register_builtin_type_symbols","register_fn","register_fn_concrete_types","register_interface","register_type_symbol","resolve_common_sumtype_fields","resolve_generic_to_concrete","struct_has_field","sumtype_has_variant","thread_cname","thread_name","type_find_method","type_has_method","type_kind","type_to_code","type_to_str","type_to_str_using_aliases","unalias_num_type","value_type","ComptTimeConstValue","i64","int","string","f64","u64","byte","empty_comptime_const_expr","resolve_init","Scope","free","find_with_scope","find","find_struct_field","is_known","find_var","find_const","known_var","update_var_type","register_struct_field","register","outermost","innermost","contains","show","str","args2str","FnPanicHandler","Fn","new_method_with_receiver_type","Param","new_table","set_global_table","TypeSymbol","array_fixed_info","array_info","chan_info","dbg","debug","embed_name","enum_info","find_field","find_method","find_method_with_generic_parent","has_method","is_builtin","is_float","is_heap","is_int","is_number","is_pointer","is_primitive","is_string","map_info","mr_info","register_method","str","str_method_info","struct_info","sumtype_info","thread_info","Type","atomic_typename","share","idx","is_void","is_full","nr_muls","is_ptr","is_any_kind_of_pointer","set_nr_muls","to_ptr","deref","set_flag","clear_flag","clear_flags","has_flag","str","debug","derive","derive_add_muls","is_pointer","is_float","is_int","is_int_valptr","is_float_valptr","is_pure_int","is_pure_float","is_signed","is_unsigned","is_int_literal","is_number","is_string","is_bool","TypeInfo","Language","pref_arch_to_table_language","TypeFlag","ShareType","str","sharetype_from_flags","new_type","new_type_ptr","merge_types","MultiReturn","FnType","Kind","str","[]Kind","str","Struct","find_field","get_field","GenericStructInst","Interface","find_field","find_method","has_method","defines_method","Enum","Alias","Aggregate","Array","ArrayFixed","Chan","Thread","Map","SumType","find_field","FnSignatureOpts","Visitor","InspectorFn","Inspector","visit","inspect","walk","Builder","build_c","build_js","build_native","cc_msvc","compile_c","compile_js","compile_native","find_module_path","front_and_middle_stages","front_stages","gen_c","gen_js","get_builtin_files","get_user_files","import_graph","info","log","middle_stages","parse_imports","resolve_deps","v_files_from_dir","new_builder","compile","msvc_string_flags","CFlag","str","eval","format","[]CFlag","c_options_before_target_msvc","c_options_after_target_msvc","c_options_before_target","c_options_after_target","c_options_without_object_files","c_options_only_object_files","defines_others_libs","Checker","add_error_detail","alias_type_decl","array_init","assign_stmt","call_expr","cast_expr","chan_init","change_current_file","check","check2","check_basic","check_dup_keys","check_expected","check_expected_arg_count","check_expected_call_arg","check_expr_opt_call","check_files","check_matching_function_symbols","check_or_expr","check_scope_vars","check_types","concat_expr","const_decl","ensure_sumtype_array_has_default_value","enum_decl","enum_val","error","expand_iface_embeds","expr","fail_if_unreadable","find_unreachable_statements_after_noreturn_calls","fn_call","fn_type_decl","generic_insts_to_concrete","get_base_name","get_default_fmt","ident","if_expr","index_expr","infer_fn_generic_types","infix_expr","int_lit","interface_decl","lock_expr","map_init","mark_as_referenced","match_expr","method_call","note","offset_of","postfix_expr","prefix_expr","promote","return_stmt","select_expr","selector_expr","string_inter_lit","string_lit","struct_decl","struct_init","sum_type_decl","symmetric_check","type_decl","unsafe_expr","unwrap_generic","warn","new_checker","OrderedDepMap","set","add","get","delete","apply_diff","size","new_dep_graph","DepGraph","add","resolve","last_node","display","display_cycles","DocComment","is_example","example","SymbolKind","str","Platform","platform_from_string","platform_from_filename","Doc","expr_typ_to_string","file_ast","file_ast_with_pos","file_asts","generate","stmt","stmt_name","stmt_pub","stmt_signature","type_to_str","DocNode","merge_comments","merge_comments_without_examples","examples","new_vdoc_preferences","new","generate","generate_with_pos","lookup_module_with_path","lookup_module","generate_from_mod","[]DocNode","find","sort_by_name","sort_by_kind","map[string]DocNode","arr","merge_comments","ast_comment_to_doc_comment","ast_comments_to_doc_comments","merge_doc_comments","EmbedFileData","str","free","to_string","to_bytes","data","EmbedFileIndexEntry","find_index_entry_by_path","Reporter","Error","Warning","Notice","Object","str","Eval","eval","Var","Fmt","alias_type_decl","array_decompose","array_init","as_cast","assert_stmt","assign_stmt","assoc","at_expr","attrs","block","branch_stmt","call_args","call_expr","cast_expr","chan_init","comment","comments","comments_after_last_field","comments_before_field","comp_for","comptime_call","comptime_selector","concat_expr","const_decl","defer_stmt","dump_expr","enum_decl","enum_val","expr","expr_stmt","fn_decl","fn_type_decl","for_c_stmt","for_in_stmt","for_stmt","global_decl","go_expr","goto_label","goto_stmt","hash_stmt","ident","if_expr","if_guard_expr","imp_stmt_str","import_comments","imports","index_expr","infix_expr","interface_decl","is_ref_type","likely","lock_expr","map_init","mark_import_as_used","mark_types_import_as_used","match_expr","mod","no_cur_mod","node_str","offset_of","or_expr","par_expr","postfix_expr","prefix_expr","prefix_expr_cast_expr","process_file_imports","range_expr","remove_new_line","return_stmt","select_expr","selector_expr","set_current_module_name","short_module","single_line_attrs","size_of","sql_expr","sql_stmt","sql_stmt_line","stmt","stmts","string_inter_literal","string_literal","struct_decl","struct_init","sum_type_decl","type_decl","type_expr","type_of","unsafe_expr","wrap_infix","wrap_long_line","write","writeln","AttrsOptions","CommentsLevel","CommentsOptions","fmt","RemoveNewLineConfig","StrIntpType","type_to_str","data_str","gen","Gen","contains_ptr","current_tmp_var","finish","gen_c_android_sokol_main","gen_c_main","gen_c_main_footer","gen_c_main_for_tests","gen_failing_error_propagation_for_test_fn","gen_failing_return_error_for_test_fn","gen_vprint_profile_stats","get_array_depth","hashes","init","new_tmp_declaration_name","new_tmp_var","reset_tmp_count","write","write_alias_typesymbol_declaration","write_fn_typesymbol_declaration","write_interface_typedef","write_interface_typesymbol_declaration","write_multi_return_types","write_tests_definitions","write_typedef_types","write_typeof_functions","writeln","get_guarded_include_text","ProfileCounterMeta","JsGen","dec_indent","enter_namespace","escape_namespace","find_class_methods","gen_indent","hashes","inc_indent","init","new_tmp_var","push_pub_var","typ","write","writeln","gen","SourcePosition","new_sourcemap","SourceMap","add_mapping","add_mapping_list","set_source_content","to_json","generate_empty_map","Generator","add_map","decode","encode","Amd64","gen_exit","allocate_var","Gen","add","add8","allocate_array","allocate_string","allocate_var","call_fn","call_fn_arm64","cld_repne_scasb","create_executable","error_with_pos","fn_decl_arm64","gen_amd64_exit","gen_arm64_exit","gen_exit","gen_loop_end","gen_loop_start","gen_print","gen_print_from_expr","gen_print_reg","generate_elf_footer","generate_elf_header","generate_footer","generate_header","generate_macho_footer","generate_macho_header","generate_macho_object_header","inline_strlen","pop","pos","push","register_function_address","ret","save_main_fn_addr","stmts","sub","sub32","sub8","xor","zeroes","Arm64","allocate_var","gen_exit","gen","FNLinkLiveSymbols","FNLiveReloadCB","LiveReloadInfo","info","new_live_reload_info","start_reloader","mark_used","Walker","mark_fn_as_used","mark_const_as_used","mark_root_fns","mark_exported_fns","stmt","fn_decl","call_expr","fn_by_name","struct_fields","const_fields","or_block","Parser","call_args","call_expr","check_comment","check_expr","check_for_impure_v","close_scope","comment","comment_stmt","compile_template_file","eat_comments","error","error_with_error","error_with_pos","expr","expr_with_left","free","init_parse_fns","known_import","mark_var_as_used","name_expr","note","note_with_pos","open_scope","parse","parse_any_type","parse_array_type","parse_block","parse_block_no_scope","parse_chan_type","parse_enum_or_struct_type","parse_fn_type","parse_generic_struct_inst_type","parse_generic_template_type","parse_ident","parse_language","parse_map_type","parse_multi_return_type","parse_thread_type","parse_type","parse_type_with_mut","peek_token","read_first_token","set_path","stmt","top_stmt","vet_error","warn","warn_with_pos","parse_stmt","parse_comptime","parse_text","parse_file","parse_vet_file","parse_files","main","Main","run","Options","PkgConfig","atleast","extend","atleast","load","list","new_preferences","Preferences","should_compile_asm","should_compile_c","should_compile_filtered_files","should_compile_js","should_compile_native","vrun_elog","fill_with_defaults","default_tcc_compiler","default_c_compiler","vexe_path","OS","str","os_from_string","get_host_os","BuildMode","AssertFailureMode","GarbageCollectionMode","OutputMode","ColorOutput","Backend","is_js","CompilerType","Arch","parse_args","arch_from_string","backend_from_string","cc_from_string","get_host_arch","Scanner","free","set_is_inside_toplevel_statement","set_current_tidx","scan_all_tokens_in_buffer","scan_remaining_text","scan","buffer_scan","peek_token","note","warn","error","codegen","CommentsMode","new_scanner_file","new_scanner","verror","Position","str","extend","extend_with_last_line","update_last_line","Token","is_scalar","is_unary","position","precedence","str","can_start_type","Kind","is_assign","str","is_relational","is_start_of_type","is_prefix","is_infix","AtKind","is_key","is_decl","Precedence","build_precedences","find_working_diff_command","color_compare_files","color_compare_strings","EManager","set_support_color","new_error_manager","bold","formatted_error","source_context","verror","vlines_escape_path","qualify_import","qualify_module","mod_path_to_full_name","smart_quote","is_name_char","is_func_char","contains_capital","good_type_name","is_generic_type_name","cescaped_path","new_suggestion","Suggestion","add","add_many","sort","say","short_module_name","Timers","start","measure","measure_cumulative","measure_pause","measure_resume","message","show","show_if_exists","show_remaining","dump_all","new_timers","get_timers","timing_start","timing_measure","timing_measure_cumulative","timing_set_should_print","tabs","vhash","full_hash","full_v_version","githash","set_vroot_folder","resolve_vmodroot","resolve_env_value","launch_tool","should_recompile_tool","quote_path","args_quote_paths","path_of_executable","read_file","skip_bom","replace_op","join_env_vflags_and_os_args","check_module_is_installed","ensure_modules_for_all_tools_are_installed","strip_mod_name","strip_main_name","no_dots","no_cur_mod","prepare_tool_when_needed","recompile_file","get_vtmp_folder","should_bundle_module","find_all_v_files","pretty_print","find_working_diff_command","color_compare_files","color_compare_strings","disabling_file","must_be_enabled","FilterVTestConfig","filter_vtest_only","CacheManager","set_temporary_options","key2cpath","postfix_with_key2cpath","exists","save","load","new_cache_manager","dlog","ErrorKind","FixKind","ErrorType","Error","Manifest","from_file","decode","ModFileAndFolder","ModFileCacher","debug","get_by_file","get_by_folder","new_mod_file_cacher","get_cache","Context","init_server","before_request","send_response_to_client","html","text","json","ok","server_error","redirect","not_found","set_cookie","set_cookie_old","set_content_type","set_cookie_with_expire_date","get_cookie","set_status","add_header","get_header","handle_static","mount_static_folder_at","serve_static","ip","error","Cookie","Result","run","not_found","RawHtml","new_manager","AssetManager","add_css","add_js","combine_css","combine_js","include_css","include_js","minify_css","minify_js","SSEConnection","start","send_message","SSEMessage","new_connection","Any","arr","as_map","bool","f32","f64","i64","int","json_str","str","u64","Null","map[string]Any","str","[]Any","str","Serializable","raw_decode","fast_raw_decode","decode","encode","Text_align","Style","BitMap","aline","box","clear","clear_filler","draw_glyph","draw_text","draw_text_block","exec_filler","fline","get_bbox","get_chars_bbox","get_raw_bytes","init_filler","line","plot","quadratic","save_as_ppm","save_raw_data","set_pos","set_rotation","color_multiply_alpha","color_multiply","TTF_render_Sokol","format_texture","create_text","create_text_block","create_texture","destroy_texture","update_text_texture","draw_text_bmp","Text_block","TTF_File","init","get_horizontal_metrics","read_glyph_dim","read_glyph","get_info_string","Point","Glyph","AcceptClientFn","SocketMessageFn","SocketMessageFn2","SocketErrorFn","SocketErrorFn2","SocketOpenFn","SocketOpenFn2","SocketCloseFn","SocketCloseFn2","Server","listen","on_close","on_close_ref","on_connect","on_message","on_message_ref","set_ping_interval","free","Client","close","connect","free","listen","on_close","on_close_ref","on_error","on_error_ref","on_message","on_message_ref","on_open","on_open_ref","parse_frame_header","ping","pong","read_next_message","validate_frame","write","write_ptr","write_str","write_string","Uri","str","State","Message","free","OPCode","new_client","new_server",];
var searchModuleData = [[" ","arrays.html"],["Example usage of this module:","benchmark.html"],["# Quickstart","bitfield.html"],[" ","builtin.html"],["Usage example:","cli.html"],[" ","clipboard.html"],[" ","clipboard.dummy.html"],[" ","clipboard.x11.html"],["# Context","context.html"],[" ","crypto.html"],[" ","crypto.aes.html"],[" ","crypto.cipher.html"],[" ","crypto.hmac.html"],[" ","crypto.internal.subtle.html"],[" ","crypto.md5.html"],[" ","crypto.rand.html"],[" ","crypto.rc4.html"],[" ","crypto.sha1.html"],[" ","crypto.sha256.html"],[" ","crypto.sha512.html"],[" ","darwin.html"],[" ","dl.html"],[" ","encoding.base64.html"],[" ","encoding.binary.html"],["## Reader example","encoding.csv.html"],[" ","encoding.utf8.html"],[" ","encoding.utf8.east_asian.html"],["# Event Bus","eventbus.html"],["The `flag` module helps command-line flag parsing.","flag.html"],[" ","fontstash.html"],[" ","gg.html"],[" ","gg.m4.html"],[" ","glm.html"],[" ","gx.html"],[" ","hash.html"],[" ","hash.crc32.html"],[" ","hash.fnv1a.html"],[" ","io.html"],[" ","io.util.html"],[" ","json.html"],[" ","log.html"],[" ","math.html"],[" ","math.big.html"],[" ","math.bits.html"],[" ","math.complex.html"],[" ","math.factorial.html"],[" ","math.fractions.html"],[" ","math.mathutil.html"],[" ","math.stats.html"],[" ","math.util.html"],["# SQL Server ODBC","mssql.html"],["For Linux, you need to install `MySQL development` package and `pkg-config`.","mysql.html"],[" ","net.html"],[" ","net.ftp.html"],["net/http is an HTML written in pure V.","net.html.html"],[" ","net.http.html"],[" ","net.http.chunked.html"],[" ","net.openssl.html"],[" ","net.smtp.html"],[" ","net.unix.html"],[" ","net.urllib.html"],[" ","net.websocket.html"],[" ","os.html"],[" ","os.cmdline.html"],[" ","os.notify.html"],["Before you can use this module, you must first have PostgreSQL installed on","pg.html"],[" ","picoev.html"],[" ","picohttpparser.html"],["# Quickstart","rand.html"],[" ","rand.constants.html"],["# Non-Uniform Distribution Functions","rand.dist.html"],[" ","rand.mt19937.html"],[" ","rand.musl.html"],[" ","rand.pcg32.html"],[" ","rand.seed.html"],[" ","rand.splitmix64.html"],[" ","rand.sys.html"],[" ","rand.util.html"],[" ","rand.wyrand.html"],["# Readline","readline.html"],["# V RegEx (Regular expression) 1.0 alpha","regex.html"],[" ","runtime.html"],["# semver","semver.html"],[" ","sokol.html"],[" ","sokol.audio.html"],[" ","sokol.c.html"],[" ","sokol.f.html"],[" ","sokol.gfx.html"],[" ","sokol.sapp.html"],[" ","sokol.sfons.html"],[" ","sokol.sgl.html"],["# Install SQLite Dependency","sqlite.html"],[" ","stbi.html"],[" ","strconv.html"],[" ","strings.html"],[" ","strings.textscanner.html"],[" ","sync.html"],[" ","sync.atomic2.html"],["","sync.pool.html"],[" ","szip.html"],["# Quickstart","term.html"],["## `term.ui`","term.ui.html"],[" ","time.html"],[" ","time.misc.html"],[" ","v.ast.html"],[" ","v.ast.walker.html"],[" ","v.builder.html"],[" ","v.cflag.html"],[" ","v.checker.html"],[" ","v.depgraph.html"],[" ","v.doc.html"],[" ","v.embed_file.html"],[" ","v.errors.html"],[" ","v.eval.html"],[" ","v.fmt.html"],[" ","v.gen.c.html"],[" ","v.gen.js.html"],[" ","v.gen.js.sourcemap.html"],[" ","v.gen.js.sourcemap.vlq.html"],[" ","v.gen.native.html"],[" ","v.live.html"],[" ","v.live.executable.html"],[" ","v.live.sharedlib.html"],[" ","v.markused.html"],[" ","v.parser.html"],["v.pkgconfig","v.pkgconfig.html"],[" ","v.pref.html"],[" ","v.scanner.html"],[" ","v.token.html"],[" ","v.util.html"],[" ","v.util.diff.html"],[" ","v.util.recompilation.html"],[" ","v.util.vtest.html"],[" ","v.vcache.html"],[" ","v.vet.html"],[" ","v.vmod.html"],["# vweb - the V Web Server #","vweb.html"],[" ","vweb.assets.html"],[" ","vweb.sse.html"],["> The name `json2` was chosen to avoid any unwanted potential conflicts with the","x.json2.html"],["# TTF font utility","x.ttf.html"],[" ","x.websocket.html"],];
var searchData = [["arrays"," Common arrays functions:  - min / max - return the value of the minumum / maxim","arrays.html#min","fn "],["arrays"," max returns the maximum ","arrays.html#max","fn "],["arrays"," idx_min returns the index of the first minimum ","arrays.html#idx_min","fn "],["arrays"," idx_max returns the index of the first maximum ","arrays.html#idx_max","fn "],["arrays"," merge two sorted arrays (ascending) and maintain sorted order ","arrays.html#merge","fn "],["arrays"," group n arrays into a single array of arrays with n elements ","arrays.html#group","fn "],["arrays","","arrays.html#shuffle","fn "],["benchmark","","benchmark.html#Benchmark","struct "],["benchmark"," set_total_expected_steps sets the the total amount of steps the benchmark is ex","benchmark.html#Benchmark.set_total_expected_steps","fn (Benchmark)"],["benchmark"," stop stops the internal benchmark timer. ","benchmark.html#Benchmark.stop","fn (Benchmark)"],["benchmark"," step increases the step count by 1 and restarts the internal timer. ","benchmark.html#Benchmark.step","fn (Benchmark)"],["benchmark"," fail increases the fail count by 1 and stops the internal timer. ","benchmark.html#Benchmark.fail","fn (Benchmark)"],["benchmark"," ok increases the ok count by 1 and stops the internal timer. ","benchmark.html#Benchmark.ok","fn (Benchmark)"],["benchmark"," skip increases the skip count by 1 and stops the internal timer. ","benchmark.html#Benchmark.skip","fn (Benchmark)"],["benchmark"," fail_many increases the fail count by `n` and stops the internal timer. ","benchmark.html#Benchmark.fail_many","fn (Benchmark)"],["benchmark"," ok_many increases the ok count by `n` and stops the internal timer. ","benchmark.html#Benchmark.ok_many","fn (Benchmark)"],["benchmark"," neither_fail_nor_ok stops the internal timer. ","benchmark.html#Benchmark.neither_fail_nor_ok","fn (Benchmark)"],["benchmark"," measure prints the current time spent doing `label`, since the benchmark was st","benchmark.html#Benchmark.measure","fn (Benchmark)"],["benchmark"," step_message_with_label_and_duration returns a string describing the current st","benchmark.html#Benchmark.step_message_with_label_and_duration","fn (Benchmark)"],["benchmark"," step_message_with_label returns a string describing the current step using curr","benchmark.html#Benchmark.step_message_with_label","fn (Benchmark)"],["benchmark"," step_message returns a string describing the current step. ","benchmark.html#Benchmark.step_message","fn (Benchmark)"],["benchmark"," step_message_ok returns a string describing the current step with an standard ","benchmark.html#Benchmark.step_message_ok","fn (Benchmark)"],["benchmark"," step_message_fail returns a string describing the current step with an standard","benchmark.html#Benchmark.step_message_fail","fn (Benchmark)"],["benchmark"," step_message_skip returns a string describing the current step with an standard","benchmark.html#Benchmark.step_message_skip","fn (Benchmark)"],["benchmark"," total_message returns a string with total summary of the benchmark run. ","benchmark.html#Benchmark.total_message","fn (Benchmark)"],["benchmark"," total_duration returns the duration in ms. ","benchmark.html#Benchmark.total_duration","fn (Benchmark)"],["benchmark"," new_benchmark returns a `Benchmark` instance on the stack. ","benchmark.html#new_benchmark","fn "],["benchmark"," new_benchmark_no_cstep returns a new `Benchmark` instance with step counting di","benchmark.html#new_benchmark_no_cstep","fn "],["benchmark"," new_benchmark_pointer returns a new `Benchmark` instance allocated on the heap.","benchmark.html#new_benchmark_pointer","fn "],["benchmark"," start returns a new, running, instance of `Benchmark`.  This is a shorthand for","benchmark.html#start","fn "],["bitfield","","bitfield.html#BitField","struct "],["bitfield"," str converts the bit array to a string of characters ('0' and '1') and  return ","bitfield.html#BitField.str","fn (BitField)"],["bitfield"," frees the memory allocated for the bitfield instance ","bitfield.html#BitField.free","fn (BitField)"],["bitfield"," get_bit returns the value (0 or 1) of bit number 'bit_nr' (count from 0). ","bitfield.html#BitField.get_bit","fn (BitField)"],["bitfield"," set_bit sets bit number 'bit_nr' to 1 (count from 0). ","bitfield.html#BitField.set_bit","fn (BitField)"],["bitfield"," clear_bit clears (sets to zero) bit number 'bit_nr' (count from 0). ","bitfield.html#BitField.clear_bit","fn (BitField)"],["bitfield"," extract returns the value converted from a slice of bit numbers  from 'start' b","bitfield.html#BitField.extract","fn (BitField)"],["bitfield"," insert sets bit numbers from 'start' to 'len' length with  the value converted ","bitfield.html#BitField.insert","fn (BitField)"],["bitfield"," extract returns the value converted from a slice of bit numbers  from 'start' b","bitfield.html#BitField.extract_lowest_bits_first","fn (BitField)"],["bitfield"," insert sets bit numbers from 'start' to 'len' length with  the value converted ","bitfield.html#BitField.insert_lowest_bits_first","fn (BitField)"],["bitfield"," set_all sets all bits in the array to 1. ","bitfield.html#BitField.set_all","fn (BitField)"],["bitfield"," clear_all clears (sets to zero) all bits in the array. ","bitfield.html#BitField.clear_all","fn (BitField)"],["bitfield"," toggle_bit changes the value (from 0 to 1 or from 1 to 0) of bit  number 'bit_n","bitfield.html#BitField.toggle_bit","fn (BitField)"],["bitfield"," get_size returns the number of bits the array can hold. ","bitfield.html#BitField.get_size","fn (BitField)"],["bitfield"," clone creates a copy of a bit array. ","bitfield.html#BitField.clone","fn (BitField)"],["bitfield"," cmp compares two bit arrays bit by bit and returns 'true' if they are  identica","bitfield.html#BitField.cmp","fn (BitField)"],["bitfield","","bitfield.html#BitField.==","fn (BitField)"],["bitfield"," pop_count returns the number of set bits (ones) in the array. ","bitfield.html#BitField.pop_count","fn (BitField)"],["bitfield"," pos checks if the array contains a sub-array 'needle' and returns its  position","bitfield.html#BitField.pos","fn (BitField)"],["bitfield"," slice returns a sub-array of bits between 'start_bit_nr' (included) and  'end_b","bitfield.html#BitField.slice","fn (BitField)"],["bitfield"," reverse reverses the order of bits in the array (swap the first with the  last,","bitfield.html#BitField.reverse","fn (BitField)"],["bitfield"," resize changes the size of the bit array to 'new_size'. ","bitfield.html#BitField.resize","fn (BitField)"],["bitfield"," rotate circular-shifts the bits by 'offset' positions (move  'offset' bit to 0,","bitfield.html#BitField.rotate","fn (BitField)"],["bitfield"," from_bytes converts a byte array into a bitfield.  [0x0F, 0x01] => 0000 1111 00","bitfield.html#from_bytes","fn "],["bitfield"," from_bytes_lowest_bits_first converts a byte array into a bitfield  [0x0F, 0x01","bitfield.html#from_bytes_lowest_bits_first","fn "],["bitfield"," from_str converts a string of characters ('0' and '1') to a bit  array. Any cha","bitfield.html#from_str","fn "],["bitfield"," new creates an empty bit array of capable of storing 'size' bits. ","bitfield.html#new","fn "],["bitfield"," bf_and performs logical AND operation on every pair of bits from 'input1' and  ","bitfield.html#bf_and","fn "],["bitfield"," bf_not toggles all bits in a bit array and returns the result as a new array. ","bitfield.html#bf_not","fn "],["bitfield"," bf_or performs logical OR operation on every pair of bits from 'input1' and  'i","bitfield.html#bf_or","fn "],["bitfield"," bf_xor perform logical XOR operation on every pair of bits from 'input1' and  '","bitfield.html#bf_xor","fn "],["bitfield"," join concatenates two bit arrays and return the result as a new array. ","bitfield.html#join","fn "],["bitfield"," hamming computes the Hamming distance between two bit arrays. ","bitfield.html#hamming","fn "],["builtin"," array is a struct used for denoting array types in V ","builtin.html#array","struct "],["builtin"," repeat returns a new array with the given array elements repeated given times. ","builtin.html#array.repeat","fn (array)"],["builtin"," version of `repeat()` that handles multi dimensional arrays  `unsafe` to call d","builtin.html#array.repeat_to_depth","fn (array)"],["builtin"," sort_with_compare sorts array in-place using given `compare` function as compar","builtin.html#array.sort_with_compare","fn (array)"],["builtin"," insert inserts a value in the array at index `i` ","builtin.html#array.insert","fn (array)"],["builtin"," insert_many inserts many values into the array from index `i`. ","builtin.html#array.insert_many","fn (array)"],["builtin"," prepend prepends one value to the array. ","builtin.html#array.prepend","fn (array)"],["builtin"," prepend_many prepends another array to this array. ","builtin.html#array.prepend_many","fn (array)"],["builtin"," delete deletes array element at index `i`. ","builtin.html#array.delete","fn (array)"],["builtin"," delete_many deletes `size` elements beginning with index `i` ","builtin.html#array.delete_many","fn (array)"],["builtin"," clear clears the array without deallocating the allocated data. ","builtin.html#array.clear","fn (array)"],["builtin"," trim trims the array length to \"index\" without modifying the allocated data. ","builtin.html#array.trim","fn (array)"],["builtin"," first returns the first element of the array. ","builtin.html#array.first","fn (array)"],["builtin"," last returns the last element of the array. ","builtin.html#array.last","fn (array)"],["builtin"," pop returns the last element of the array, and removes it. ","builtin.html#array.pop","fn (array)"],["builtin"," delete_last efficiently deletes the last element of the array. ","builtin.html#array.delete_last","fn (array)"],["builtin"," clone returns an independent copy of a given array.  this will be overwritten b","builtin.html#array.clone","fn (array)"],["builtin"," recursively clone given array - `unsafe` when called directly because depth is ","builtin.html#array.clone_to_depth","fn (array)"],["builtin"," push_many implements the functionality for pushing another array.  `val` is arr","builtin.html#array.push_many","fn (array)"],["builtin"," reverse_in_place reverses existing array data, modifying original array. ","builtin.html#array.reverse_in_place","fn (array)"],["builtin"," reverse returns a new array with the elements of the original array in reverse ","builtin.html#array.reverse","fn (array)"],["builtin"," pub fn (a []int) free() {  free frees all memory occupied by the array. ","builtin.html#array.free","fn (array)"],["builtin"," grow_cap grows the array's capacity by `amount` elements. ","builtin.html#array.grow_cap","fn (array)"],["builtin"," grow_len ensures that an array has a.len + amount of length ","builtin.html#array.grow_len","fn (array)"],["builtin"," pointers returns a new array, where each element  is the address of the corresp","builtin.html#array.pointers","fn (array)"],["builtin","","builtin.html#[]string","type "],["builtin"," eq checks if the arrays have the same elements or not.  TODO: make it work with","builtin.html#[]string.eq","fn ([]string)"],["builtin","","builtin.html#[]string.free","fn ([]string)"],["builtin"," index returns the first index at which a given element can be found in the arra","builtin.html#[]string.index","fn ([]string)"],["builtin"," join joins a string array into a string using `sep` separator.  Example: assert","builtin.html#[]string.join","fn ([]string)"],["builtin"," join joins a string array into a string using a `\n` newline delimiter. ","builtin.html#[]string.join_lines","fn ([]string)"],["builtin"," sort sorts the string array. ","builtin.html#[]string.sort","fn ([]string)"],["builtin"," sort_by_len sorts the the string array by each string's `.len` length. ","builtin.html#[]string.sort_by_len","fn ([]string)"],["builtin"," sort_ignore_case sorts the string array using case insesitive comparing. ","builtin.html#[]string.sort_ignore_case","fn ([]string)"],["builtin"," str returns a string representation of the array of strings  => '[\"a\", \"b\",","builtin.html#[]string.str","fn ([]string)"],["builtin","","builtin.html#[]byte","type "],["builtin","","builtin.html#[]byte.clone","fn ([]byte)"],["builtin"," hex returns a string with the hexadecimal representation  of the byte elements ","builtin.html#[]byte.hex","fn ([]byte)"],["builtin"," TODO: remove this once runes are implemented ","builtin.html#[]byte.bytestr","fn ([]byte)"],["builtin"," copy copies the `src` byte array elements to the `dst` byte array.  The number ","builtin.html#copy","fn "],["builtin","","builtin.html#[]int","type "],["builtin"," sort sorts an array of int in place in ascending order. ","builtin.html#[]int.sort","fn ([]int)"],["builtin"," reduce executes a given reducer function on each element of the array,  resulti","builtin.html#[]int.reduce","fn ([]int)"],["builtin","","builtin.html#voidptr","type "],["builtin"," voidptr.vbytes() - makes a V []byte structure from a C style memory buffer. NB:","builtin.html#voidptr.vbytes","fn (voidptr)"],["builtin"," hex returns the value of the `voidptr` as a hexadecimal `string`.  Note that th","builtin.html#voidptr.str","fn (voidptr)"],["builtin","","builtin.html#byte","type "],["builtin"," ascii_str returns the contents of `byte` as a zero terminated ASCII `string` ch","builtin.html#byte.ascii_str","fn (byte)"],["builtin"," hex returns the value of the `byte` as a hexadecimal `string`.  Note that the o","builtin.html#byte.hex","fn (byte)"],["builtin"," is_bin_digit returns `true` if the byte is a binary digit (0 or 1) and `false` ","builtin.html#byte.is_bin_digit","fn (byte)"],["builtin"," Define this on byte as well, so that we can do `s[0].is_capital()` ","builtin.html#byte.is_capital","fn (byte)"],["builtin"," is_digit returns `true` if the byte is in range 0-9 and `false` otherwise.  Exa","builtin.html#byte.is_digit","fn (byte)"],["builtin"," is_hex_digit returns `true` if the byte is either in range 0-9, a-f or A-F and ","builtin.html#byte.is_hex_digit","fn (byte)"],["builtin"," is_letter returns `true` if the byte is in range a-z or A-Z and `false` otherwi","builtin.html#byte.is_letter","fn (byte)"],["builtin"," is_oct_digit returns `true` if the byte is in range 0-7 and `false` otherwise. ","builtin.html#byte.is_oct_digit","fn (byte)"],["builtin"," is_space returns `true` if the byte is a white space character.  The following ","builtin.html#byte.is_space","fn (byte)"],["builtin"," str returns the contents of `byte` as a zero terminated `string`.  Example: ass","builtin.html#byte.str","fn (byte)"],["builtin"," hex returns the value of the `byteptr` as a hexadecimal `string`.  Note that th","builtin.html#byte.str","fn (byte)"],["builtin"," str_escaped returns the contents of `byte` as an escaped `string`.  Example: as","builtin.html#byte.str_escaped","fn (byte)"],["builtin"," byteptr.vbytes() - makes a V []byte structure from a C style memory buffer. NB:","builtin.html#byte.vbytes","fn (byte)"],["builtin"," NB: this file will be removed soon   byteptr.vbytes() - makes a V []byte struct","builtin.html#byte.vbytes","fn (byte)"],["builtin"," vstring converts a C style string to a V string. NB: the string data is reused,","builtin.html#byte.vstring","fn (byte)"],["builtin"," vstring converts a C style string to a V string. NB: the string data is reused,","builtin.html#byte.vstring","fn (byte)"],["builtin"," vstring_literal converts a C style string to a V string.  NB: the string data i","builtin.html#byte.vstring_literal","fn (byte)"],["builtin"," vstring_literal converts a C style string to a V string.  NB: the string data i","builtin.html#byte.vstring_literal","fn (byte)"],["builtin"," vstring_with_len converts a C style string to a V string.  NB: the string data ","builtin.html#byte.vstring_literal_with_len","fn (byte)"],["builtin"," vstring_with_len converts a C style string to a V string.  NB: the string data ","builtin.html#byte.vstring_literal_with_len","fn (byte)"],["builtin"," vstring_with_len converts a C style string to a V string.  NB: the string data ","builtin.html#byte.vstring_with_len","fn (byte)"],["builtin"," vstring_with_len converts a C style string to a V string.  NB: the string data ","builtin.html#byte.vstring_with_len","fn (byte)"],["builtin"," exit terminates execution immediately and returns exit `code` to the shell. ","builtin.html#exit","fn "],["builtin","","builtin.html#panic_optional_not_set","fn "],["builtin"," panic prints a nice error message, then exits the process with exit code of 1. ","builtin.html#panic","fn "],["builtin"," eprintln prints a message with a line end, to stderr. Both stderr and stdout ar","builtin.html#eprintln","fn "],["builtin"," eprint prints a message to stderr. Both stderr and stdout are flushed. ","builtin.html#eprint","fn "],["builtin"," print prints a message to stdout. Unlike `println` stdout is not automatically ","builtin.html#print","fn "],["builtin"," println prints a message with a line end, to stdout. stdout is flushed. ","builtin.html#println","fn "],["builtin"," malloc dynamically allocates a `n` bytes block of memory on the heap.  malloc r","builtin.html#malloc","fn "],["builtin","","builtin.html#malloc_noscan","fn "],["builtin"," v_realloc resizes the memory block `b` with `n` bytes.  The `b byteptr` must be","builtin.html#v_realloc","fn "],["builtin"," realloc_data resizes the memory block pointed by `old_data` to `new_size`  byte","builtin.html#realloc_data","fn "],["builtin"," vcalloc dynamically allocates a zeroed `n` bytes block of memory on the heap.  ","builtin.html#vcalloc","fn "],["builtin"," special versions of the above that allocate memory which is not scanned  for po","builtin.html#vcalloc_noscan","fn "],["builtin"," free allows for manually freeing memory allocated at the address `ptr`. ","builtin.html#free","fn "],["builtin"," memdup dynamically allocates a `sz` bytes block of memory on the heap  memdup t","builtin.html#memdup","fn "],["builtin","","builtin.html#memdup_noscan","fn "],["builtin"," isnil returns true if an object is nil (only for C objects). ","builtin.html#isnil","fn "],["builtin","","builtin.html#is_atty","fn "],["builtin"," print_backtrace shows a backtrace of the current call stack on stdout ","builtin.html#print_backtrace","fn "],["builtin"," VAssertMetaInfo is used during assertions. An instance of it  is filled in by c","builtin.html#VAssertMetaInfo","struct "],["builtin"," MethodArgs holds type information for function and/or method arguments. ","builtin.html#MethodArgs","struct "],["builtin"," FunctionData holds information about a parsed function. ","builtin.html#FunctionData","struct "],["builtin"," FieldData holds information about a field. Fields reside on structs. ","builtin.html#FieldData","struct "],["builtin","","builtin.html#StructAttribute","struct "],["builtin","","builtin.html#gc_check_leaks","fn "],["builtin"," SymbolInfo is used by print_backtrace_skipping_top_frames_msvc ","builtin.html#SymbolInfo","struct "],["builtin","","builtin.html#SymbolInfoContainer","struct "],["builtin","","builtin.html#Line64","struct "],["builtin","","builtin.html#proc_pidpath","fn "],["builtin"," ChanState describes the result of an attempted channel transaction. ","builtin.html#ChanState","enum "],["builtin","","builtin.html#chan","type "],["builtin"," close closes the channel for further push transactions.  closed channels cannot","builtin.html#chan.close","fn (chan)"],["builtin"," try_pop returns `ChanState.success` if an object is popped from the channel.  t","builtin.html#chan.try_pop","fn (chan)"],["builtin"," try_push returns `ChanState.success` if the object is pushed to the channel.  t","builtin.html#chan.try_push","fn (chan)"],["builtin","","builtin.html#f64","type "],["builtin"," str return a `f64` as `string` in suitable notation. ","builtin.html#f64.str","fn (f64)"],["builtin"," strg return a `f64` as `string` in \"g\" printf format ","builtin.html#f64.strg","fn (f64)"],["builtin"," strsci returns the `f64` as a `string` in scientific notation with `digit_num` ","builtin.html#f64.strsci","fn (f64)"],["builtin"," strlong returns a decimal notation of the `f64` as a `string`.  Example: assert","builtin.html#f64.strlong","fn (f64)"],["builtin"," eq_epsilon returns true if the `f64` is equal to input `b`.  using an epsilon o","builtin.html#f64.eq_epsilon","fn (f64)"],["builtin","","builtin.html#float-literal","type "],["builtin"," str returns the value of the `float_literal` as a `string`. ","builtin.html#float-literal.str","fn (float literal)"],["builtin","","builtin.html#f32","type "],["builtin"," str returns a `f32` as `string` in suitable notation. ","builtin.html#f32.str","fn (f32)"],["builtin"," strg return a `f32` as `string` in \"g\" printf format ","builtin.html#f32.strg","fn (f32)"],["builtin"," strsci returns the `f32` as a `string` in scientific notation with `digit_num` ","builtin.html#f32.strsci","fn (f32)"],["builtin"," strlong returns a decimal notation of the `f32` as a `string`. ","builtin.html#f32.strlong","fn (f32)"],["builtin"," eq_epsilon returns true if the `f32` is equal to input `b`.  using an epsilon o","builtin.html#f32.eq_epsilon","fn (f32)"],["builtin"," f32_abs returns the absolute value of `a` as a `f32` value.  Example: assert f3","builtin.html#f32_abs","fn "],["builtin"," f32_max returns the largest `f32` of input `a` and `b`.  Example: assert f32_ma","builtin.html#f32_max","fn "],["builtin"," f32_min returns the smallest `f32` of input `a` and `b`.  Example: assert f32_m","builtin.html#f32_min","fn "],["builtin"," f64_max returns the largest `f64` of input `a` and `b`.  Example: assert f64_ma","builtin.html#f64_max","fn "],["builtin","  ----- value to string functions -----   ptr_str returns the address of `ptr` a","builtin.html#ptr_str","fn "],["builtin","","builtin.html#size_t","type "],["builtin","","builtin.html#size_t.str","fn (size_t)"],["builtin","","builtin.html#char","type "],["builtin","","builtin.html#char.str","fn (char)"],["builtin"," vstring converts C char* to V string.  NB: the string data is reused, NOT copie","builtin.html#char.vstring","fn (char)"],["builtin"," vstring converts C char* to V string.  NB: the string data is reused, NOT copie","builtin.html#char.vstring","fn (char)"],["builtin"," vstring_literal converts C char* to V string.  See also vstring_literal defined","builtin.html#char.vstring_literal","fn (char)"],["builtin"," vstring_literal converts C char* to V string.  See also vstring_literal defined","builtin.html#char.vstring_literal","fn (char)"],["builtin"," vstring_literal_with_len converts C char* to V string.  See also vstring_litera","builtin.html#char.vstring_literal_with_len","fn (char)"],["builtin"," vstring_literal_with_len converts C char* to V string.  See also vstring_litera","builtin.html#char.vstring_literal_with_len","fn (char)"],["builtin"," vstring_with_len converts C char* to V string.  NB: the string data is reused, ","builtin.html#char.vstring_with_len","fn (char)"],["builtin"," vstring_with_len converts C char* to V string.  NB: the string data is reused, ","builtin.html#char.vstring_with_len","fn (char)"],["builtin","","builtin.html#i8","type "],["builtin"," str returns the value of the `i8` as a `string`.  Example: assert i8(-2).str() ","builtin.html#i8.str","fn (i8)"],["builtin"," hex returns the value of the `i8` as a hexadecimal `string`.  Note that the out","builtin.html#i8.hex","fn (i8)"],["builtin","","builtin.html#i16","type "],["builtin"," str returns the value of the `i16` as a `string`.  Example: assert i16(-20).str","builtin.html#i16.str","fn (i16)"],["builtin"," hex returns the value of the `i16` as a hexadecimal `string`.  Note that the ou","builtin.html#i16.hex","fn (i16)"],["builtin","","builtin.html#u16","type "],["builtin"," str returns the value of the `u16` as a `string`.  Example: assert u16(20).str(","builtin.html#u16.str","fn (u16)"],["builtin"," hex returns the value of the `u16` as a hexadecimal `string`.  Note that the ou","builtin.html#u16.hex","fn (u16)"],["builtin","","builtin.html#int","type "],["builtin"," str returns the value of the `int` as a `string`.  Example: assert int(-2020).s","builtin.html#int.str","fn (int)"],["builtin"," hex returns the value of the `int` as a hexadecimal `string`.  Note that the ou","builtin.html#int.hex","fn (int)"],["builtin"," hex2 returns the value of the `int` as a `0x`-prefixed hexadecimal `string`.  N","builtin.html#int.hex2","fn (int)"],["builtin","","builtin.html#u32","type "],["builtin"," str returns the value of the `u32` as a `string`.  Example: assert u32(20000).s","builtin.html#u32.str","fn (u32)"],["builtin"," hex returns the value of the `u32` as a hexadecimal `string`.  Note that the ou","builtin.html#u32.hex","fn (u32)"],["builtin","","builtin.html#int-literal","type "],["builtin"," str returns the value of the `int_literal` as a `string`. ","builtin.html#int-literal.str","fn (int literal)"],["builtin"," hex returns the value of the `int_literal` as a hexadecimal `string`.  Note tha","builtin.html#int-literal.hex","fn (int literal)"],["builtin","","builtin.html#i64","type "],["builtin"," str returns the value of the `i64` as a `string`.  Example: assert i64(-200000)","builtin.html#i64.str","fn (i64)"],["builtin"," hex returns the value of the `i64` as a hexadecimal `string`.  Note that the ou","builtin.html#i64.hex","fn (i64)"],["builtin","","builtin.html#u64","type "],["builtin"," str returns the value of the `u64` as a `string`.  Example: assert u64(2000000)","builtin.html#u64.str","fn (u64)"],["builtin"," hex returns the value of the `u64` as a hexadecimal `string`.  Note that the ou","builtin.html#u64.hex","fn (u64)"],["builtin"," hex_full returns the value of the `u64` as a *full* 16-digit hexadecimal `strin","builtin.html#u64.hex_full","fn (u64)"],["builtin","","builtin.html#bool","type "],["builtin"," str returns the value of the `bool` as a `string`.  Example: assert (2 > 1).str","builtin.html#bool.str","fn (bool)"],["builtin"," map is the internal representation of a V `map` type. ","builtin.html#map","struct "],["builtin","","builtin.html#map.move","fn (map)"],["builtin"," Removes the mapping of a particular key from the map. ","builtin.html#map.delete","fn (map)"],["builtin"," clone returns a clone of the `map`. ","builtin.html#map.clone","fn (map)"],["builtin"," free releases all memory resources occupied by the `map`. ","builtin.html#map.free","fn (map)"],["builtin"," IError holds information about an error instance ","builtin.html#IError","interface "],["builtin","","builtin.html#IError.str","fn (IError)"],["builtin","","builtin.html#IError.free","fn (IError)"],["builtin"," Error is the default implementation of IError, that is returned by e.g. `error(","builtin.html#Error","struct "],["builtin","","builtin.html#Error.free","fn (Error)"],["builtin"," error returns a default error instance containing the error given in `message`.","builtin.html#error","fn "],["builtin"," error_with_code returns a default error instance containing the given `message`","builtin.html#error_with_code","fn "],["builtin","","builtin.html#None__","type "],["builtin","","builtin.html#None__.free","fn (None__)"],["builtin","","builtin.html#rune","type "],["builtin"," This was never working correctly, the issue is now  fixed however the type chec","builtin.html#rune.str","fn (rune)"],["builtin","","builtin.html#[]rune","type "],["builtin"," string converts a rune array to a string ","builtin.html#[]rune.string","fn ([]rune)"],["builtin","","builtin.html#SortedMap","struct "],["builtin","","builtin.html#SortedMap.delete","fn (SortedMap)"],["builtin","","builtin.html#SortedMap.keys","fn (SortedMap)"],["builtin","","builtin.html#SortedMap.free","fn (SortedMap)"],["builtin","","builtin.html#SortedMap.print","fn (SortedMap)"],["builtin","","builtin.html#string","struct "],["builtin"," after returns the contents after the last occurence of `sub` in the string.  If","builtin.html#string.after","fn (string)"],["builtin"," after_char returns the contents after the first occurence of `sub` character in","builtin.html#string.after_char","fn (string)"],["builtin"," all_after returns the contents after `sub` in the string.  If the substring is ","builtin.html#string.all_after","fn (string)"],["builtin"," all_after_last returns the contents after the last occurence of `sub` in the st","builtin.html#string.all_after_last","fn (string)"],["builtin"," all_before returns the contents before `sub` in the string.  If the substring i","builtin.html#string.all_before","fn (string)"],["builtin"," all_before_last returns the contents before the last occurence of `sub` in the ","builtin.html#string.all_before_last","fn (string)"],["builtin"," before returns the contents before `sub` in the string.  If the substring is no","builtin.html#string.before","fn (string)"],["builtin"," bool returns `true` if the string equals the word \"true\" it will return `fals","builtin.html#string.bool","fn (string)"],["builtin"," bytes returns the string converted to a byte array. ","builtin.html#string.bytes","fn (string)"],["builtin"," capitalize returns the string with the first character capitalized.  Example: a","builtin.html#string.capitalize","fn (string)"],["builtin"," clone returns a copy of the V string `a`. ","builtin.html#string.clone","fn (string)"],["builtin"," contains returns `true` if the string contains `substr`. ","builtin.html#string.contains","fn (string)"],["builtin"," contains_any returns `true` if the string contains any chars in `chars`. ","builtin.html#string.contains_any","fn (string)"],["builtin"," contains_any_substr returns `true` if the string contains any of the strings in","builtin.html#string.contains_any_substr","fn (string)"],["builtin"," count returns the number of occurrences of `substr` in the string.  count retur","builtin.html#string.count","fn (string)"],["builtin"," ends_with returns `true` if the string ends with `p`. ","builtin.html#string.ends_with","fn (string)"],["builtin"," f32 returns the value of the string as f32 `'1.0'.f32() == f32(1)`. ","builtin.html#string.f32","fn (string)"],["builtin"," f64 returns the value of the string as f64 `'1.0'.f64() == f64(1)`. ","builtin.html#string.f64","fn (string)"],["builtin"," fields returns a string array of the string split by `\t` and ` `  Example: ass","builtin.html#string.fields","fn (string)"],["builtin"," find_between returns the string found between `start` string and `end` string. ","builtin.html#string.find_between","fn (string)"],["builtin"," free allows for manually freeing the memory occupied by the string ","builtin.html#string.free","fn (string)"],["builtin"," hash returns an integer hash of the string. ","builtin.html#string.hash","fn (string)"],["builtin"," i16 returns the value of the string as i16 `'1'.i16() == i16(1)`. ","builtin.html#string.i16","fn (string)"],["builtin"," i64 returns the value of the string as i64 `'1'.i64() == i64(1)`. ","builtin.html#string.i64","fn (string)"],["builtin"," i8 returns the value of the string as i8 `'1'.i8() == i8(1)`. ","builtin.html#string.i8","fn (string)"],["builtin"," index returns the position of the first character of the input string.  It will","builtin.html#string.index","fn (string)"],["builtin"," index_after returns the position of the input string, starting search from `sta","builtin.html#string.index_after","fn (string)"],["builtin"," index_any returns the position of any of the characters in the input string - i","builtin.html#string.index_any","fn (string)"],["builtin"," index_byte returns the index of byte `c` if found in the string.  index_byte re","builtin.html#string.index_byte","fn (string)"],["builtin"," int returns the value of the string as an integer `'1'.int() == 1`. ","builtin.html#string.int","fn (string)"],["builtin"," is_capital returns `true` if the first character in the string is a capital let","builtin.html#string.is_capital","fn (string)"],["builtin"," is_lower returns `true` if all characters in the string is lowercase.  Example:","builtin.html#string.is_lower","fn (string)"],["builtin"," is_title returns true if all words of the string is capitalized.  Example: asse","builtin.html#string.is_title","fn (string)"],["builtin"," is_upper returns `true` if all characters in the string is uppercase.  Example:","builtin.html#string.is_upper","fn (string)"],["builtin"," last_index returns the position of the last occurence of the input string. ","builtin.html#string.last_index","fn (string)"],["builtin"," last_index_byte returns the index of the last occurence of byte `c` if found in","builtin.html#string.last_index_byte","fn (string)"],["builtin"," limit returns a portion of the string, starting at `0` and extending for a give","builtin.html#string.limit","fn (string)"],["builtin"," repeat returns a new string with `count` number of copies of the string it was ","builtin.html#string.repeat","fn (string)"],["builtin"," replace replaces all occurences of `rep` with the string passed in `with`. ","builtin.html#string.replace","fn (string)"],["builtin"," replace_each replaces all occurences of the string pairs given in `vals`.  Exam","builtin.html#string.replace_each","fn (string)"],["builtin"," replace_once replaces the first occurence of `rep` with the string passed in `w","builtin.html#string.replace_once","fn (string)"],["builtin"," reverse returns a reversed string.  Example: assert 'Hello V'.reverse() == 'V o","builtin.html#string.reverse","fn (string)"],["builtin","","builtin.html#string.runes","fn (string)"],["builtin"," split splits the string to an array by `delim`.  Example: assert 'A B C'.split(","builtin.html#string.split","fn (string)"],["builtin"," split_into_lines splits the string by newline characters.  newlines are strippe","builtin.html#string.split_into_lines","fn (string)"],["builtin"," split_nth splits the string based on the passed `delim` substring.  It returns ","builtin.html#string.split_nth","fn (string)"],["builtin"," starts_with returns `true` if the string starts with `p`. ","builtin.html#string.starts_with","fn (string)"],["builtin"," str returns a copy of the string ","builtin.html#string.str","fn (string)"],["builtin"," strip_margin allows multi-line strings to be formatted in a way that removes wh","builtin.html#string.strip_margin","fn (string)"],["builtin"," strip_margin_custom does the same as `strip_margin` but will use `del` as delim","builtin.html#string.strip_margin_custom","fn (string)"],["builtin"," substr returns the string between index positions `start` and `end`.  Example: ","builtin.html#string.substr","fn (string)"],["builtin"," title returns the string with each word capitalized.  Example: assert 'hello v ","builtin.html#string.title","fn (string)"],["builtin"," to_lower returns the string in all lowercase characters.  TODO only works with ","builtin.html#string.to_lower","fn (string)"],["builtin"," to_upper returns the string in all uppercase characters.  Example: assert 'Hell","builtin.html#string.to_upper","fn (string)"],["builtin","","builtin.html#string.to_wide","fn (string)"],["builtin"," trim strips any of the characters given in `cutset` from the start and end of t","builtin.html#string.trim","fn (string)"],["builtin"," trim_left strips any of the characters given in `cutset` from the left of the s","builtin.html#string.trim_left","fn (string)"],["builtin"," trim_prefix strips `str` from the start of the string.  Example: assert 'WorldH","builtin.html#string.trim_prefix","fn (string)"],["builtin"," trim_right strips any of the characters given in `cutset` from the right of the","builtin.html#string.trim_right","fn (string)"],["builtin"," trim_space strips any of ` `, `\n`, `\t`, `\v`, `\f`, `\r` from the start and e","builtin.html#string.trim_space","fn (string)"],["builtin"," trim_suffix strips `str` from the end of the string.  Example: assert 'Hello VW","builtin.html#string.trim_suffix","fn (string)"],["builtin"," u16 returns the value of the string as u16 `'1'.u16() == u16(1)`. ","builtin.html#string.u16","fn (string)"],["builtin"," u32 returns the value of the string as u32 `'1'.u32() == u32(1)`. ","builtin.html#string.u32","fn (string)"],["builtin"," u64 returns the value of the string as u64 `'1'.u64() == u64(1)`. ","builtin.html#string.u64","fn (string)"],["builtin"," Convert utf8 to utf32 ","builtin.html#string.utf32_code","fn (string)"],["builtin"," vstrlen returns the V length of the C string `s` (0 terminator is not counted).","builtin.html#vstrlen","fn "],["builtin"," tos converts a C string to a V string.  String data is reused, not copied. ","builtin.html#tos","fn "],["builtin"," tos_clone returns a copy of `s`. ","builtin.html#tos_clone","fn "],["builtin"," tos2 does the same as `tos`, but also calculates the length. Called by `string(","builtin.html#tos2","fn "],["builtin"," tos3 does the same as `tos2`, but for char*, to avoid warnings. ","builtin.html#tos3","fn "],["builtin"," tos4 does the same as `tos2`, but returns an empty string on nil ptr. ","builtin.html#tos4","fn "],["builtin"," tos5 does the same as `tos4`, but for char*, to avoid warnings. ","builtin.html#tos5","fn "],["builtin","","builtin.html#tos_lit","fn "],["builtin"," cstring_to_vstring creates a copy of cstr and turns it into a v string. ","builtin.html#cstring_to_vstring","fn "],["builtin"," compare_strings returns `-1` if `a < b`, `1` if `a > b` else `0`. ","builtin.html#compare_strings","fn "],["builtin","=============================================================================  E","builtin.html#StrIntpType","enum "],["builtin","","builtin.html#StrIntpType.str","fn (StrIntpType)"],["builtin","=============================================================================  U","builtin.html#StrIntpMem","struct "],["builtin","=========================================    u32/u64 bit compact format  ___    ","builtin.html#get_str_intp_u64_format","fn "],["builtin"," convert from data format to compact u32 ","builtin.html#get_str_intp_u32_format","fn "],["builtin","================================================================================","builtin.html#StrIntpCgenData","struct "],["builtin"," NOTE: LOW LEVEL struct  storing struct passed to V in the C code ","builtin.html#StrIntpData","struct "],["builtin"," interpolation function ","builtin.html#str_intp","fn "],["builtin","","builtin.html#str_intp_sq","fn "],["builtin","","builtin.html#str_intp_rune","fn "],["builtin","","builtin.html#str_intp_g32","fn "],["builtin","","builtin.html#str_intp_g64","fn "],["builtin"," replace %% with the in_str ","builtin.html#str_intp_sub","fn "],["builtin","","builtin.html#string_from_wide","fn "],["builtin","","builtin.html#string_from_wide2","fn "],["builtin"," Reads an utf8 character from standard input ","builtin.html#utf8_getchar","fn "],["builtin","","builtin.html#utf8_char_len","fn "],["builtin"," Convert utf32 to utf8  utf32 == Codepoint ","builtin.html#utf32_to_str","fn "],["builtin","","builtin.html#utf32_to_str_no_malloc","fn "],["builtin"," Calculate string length for in number of codepoints ","builtin.html#utf8_str_len","fn "],["builtin"," Calculate string length for formatting, i.e. number of \"characters\"  This is ","builtin.html#utf8_str_visible_length","fn "],["cli","","cli.html#FnCommandCallback","type "],["cli"," str returns the `string` representation of the callback. ","cli.html#FnCommandCallback.str","fn (FnCommandCallback)"],["cli"," Command is a structured representation of a single command  or chain of command","cli.html#Command","struct "],["cli"," str returns the `string` representation of the `Command`. ","cli.html#Command.str","fn (Command)"],["cli"," is_root returns `true` if this `Command` has no parents. ","cli.html#Command.is_root","fn (Command)"],["cli"," root returns the root `Command` of the command chain. ","cli.html#Command.root","fn (Command)"],["cli"," full_name returns the full `string` representation of all commands int the chai","cli.html#Command.full_name","fn (Command)"],["cli"," add_commands adds the `commands` array of `Command`s as sub-commands. ","cli.html#Command.add_commands","fn (Command)"],["cli"," add_command adds `command` as a sub-command of this `Command`. ","cli.html#Command.add_command","fn (Command)"],["cli"," setup ensures that all sub-commands of this `Command`  is linked as a chain. ","cli.html#Command.setup","fn (Command)"],["cli"," add_flags adds the array `flags` to this `Command`. ","cli.html#Command.add_flags","fn (Command)"],["cli"," add_flag adds `flag` to this `Command`. ","cli.html#Command.add_flag","fn (Command)"],["cli"," parse parses `args` into this structured `Command`. ","cli.html#Command.parse","fn (Command)"],["cli"," execute_help executes the callback registered  for the `-h`/`--help` flag optio","cli.html#Command.execute_help","fn (Command)"],["cli","","cli.html#FlagType","enum "],["cli"," Flag holds information for a command line flag.  (flags are also commonly refer","cli.html#Flag","struct "],["cli"," get_bool returns `true` if the flag is set.  get_bool returns an error if the `","cli.html#Flag.get_bool","fn (Flag)"],["cli"," get_int returns the `int` value argument of the flag.  get_int returns an error","cli.html#Flag.get_int","fn (Flag)"],["cli"," get_ints returns the array of `int` value argument of the flag specified in `na","cli.html#Flag.get_ints","fn (Flag)"],["cli"," get_float returns the `f64` value argument of the flag.  get_float returns an e","cli.html#Flag.get_float","fn (Flag)"],["cli"," get_floats returns the `f64` value argument of the flag.  get_floats returns an","cli.html#Flag.get_floats","fn (Flag)"],["cli"," get_string returns the `string` value argument of the flag.  get_string returns","cli.html#Flag.get_string","fn (Flag)"],["cli"," get_strings returns the array of `string` value argument of the flag.  get_stri","cli.html#Flag.get_strings","fn (Flag)"],["cli","","cli.html#[]Flag","type "],["cli"," get_all_found returns an array of all `Flag`s found in the command parameters ","cli.html#[]Flag.get_all_found","fn ([]Flag)"],["cli"," get_bool returns `true` if the flag specified in `name` is set.  get_bool retur","cli.html#[]Flag.get_bool","fn ([]Flag)"],["cli"," get_int returns the `int` value argument of the flag specified in `name`.  get_","cli.html#[]Flag.get_int","fn ([]Flag)"],["cli"," get_ints returns the array of `int` value argument of the flag specified in `na","cli.html#[]Flag.get_ints","fn ([]Flag)"],["cli"," get_float returns the `f64` value argument of the flag specified in `name`.  ge","cli.html#[]Flag.get_float","fn ([]Flag)"],["cli"," get_floats returns the array of `f64` value argument of the flag specified in `","cli.html#[]Flag.get_floats","fn ([]Flag)"],["cli"," get_string returns the `string` value argument of the flag specified in `name`.","cli.html#[]Flag.get_string","fn ([]Flag)"],["cli"," get_strings returns the `string` value argument of the flag specified in `name`","cli.html#[]Flag.get_strings","fn ([]Flag)"],["clipboard"," new returns a new `Clipboard` instance allocated on the heap.  The `Clipboard` ","clipboard.html#new","fn "],["clipboard","","clipboard.html#Clipboard","type "],["clipboard","","clipboard.html#Clipboard.check_availability","fn (Clipboard)"],["clipboard"," check_ownership returns `true` if the `Clipboard` has the content ownership. ","clipboard.html#Clipboard.check_ownership","fn (Clipboard)"],["clipboard","","clipboard.html#Clipboard.clear","fn (Clipboard)"],["clipboard"," clear_all clears the clipboard. ","clipboard.html#Clipboard.clear_all","fn (Clipboard)"],["clipboard"," copy copies `text` into the clipboard. ","clipboard.html#Clipboard.copy","fn (Clipboard)"],["clipboard"," destroy destroys the clipboard and free it's resources. ","clipboard.html#Clipboard.destroy","fn (Clipboard)"],["clipboard","","clipboard.html#Clipboard.free","fn (Clipboard)"],["clipboard","","clipboard.html#Clipboard.get_text","fn (Clipboard)"],["clipboard","","clipboard.html#Clipboard.has_ownership","fn (Clipboard)"],["clipboard"," is_available returns `true` if the clipboard is available for use. ","clipboard.html#Clipboard.is_available","fn (Clipboard)"],["clipboard"," paste returns current entry as a `string` from the clipboard. ","clipboard.html#Clipboard.paste","fn (Clipboard)"],["clipboard","","clipboard.html#Clipboard.set_text","fn (Clipboard)"],["clipboard"," new_primary returns a new X11 `PRIMARY` type `Clipboard` instance allocated on ","clipboard.html#new_primary","fn "],["clipboard.dummy","","clipboard.dummy.html#Clipboard","struct "],["clipboard.dummy","","clipboard.dummy.html#Clipboard.set_text","fn (Clipboard)"],["clipboard.dummy","","clipboard.dummy.html#Clipboard.get_text","fn (Clipboard)"],["clipboard.dummy","","clipboard.dummy.html#Clipboard.clear","fn (Clipboard)"],["clipboard.dummy","","clipboard.dummy.html#Clipboard.free","fn (Clipboard)"],["clipboard.dummy","","clipboard.dummy.html#Clipboard.has_ownership","fn (Clipboard)"],["clipboard.dummy","","clipboard.dummy.html#Clipboard.check_availability","fn (Clipboard)"],["clipboard.dummy"," new_clipboard returns a new `Clipboard` instance allocated on the heap.  The `C","clipboard.dummy.html#new_clipboard","fn "],["clipboard.dummy"," new_primary returns a new X11 `PRIMARY` type `Clipboard` instance allocated on ","clipboard.dummy.html#new_primary","fn "],["clipboard.x11","","clipboard.x11.html#Clipboard","struct "],["clipboard.x11","","clipboard.x11.html#Clipboard.check_availability","fn (Clipboard)"],["clipboard.x11","","clipboard.x11.html#Clipboard.free","fn (Clipboard)"],["clipboard.x11","","clipboard.x11.html#Clipboard.clear","fn (Clipboard)"],["clipboard.x11","","clipboard.x11.html#Clipboard.has_ownership","fn (Clipboard)"],["clipboard.x11"," set_text stores `text` in the system clipboard. ","clipboard.x11.html#Clipboard.set_text","fn (Clipboard)"],["clipboard.x11","","clipboard.x11.html#Clipboard.get_text","fn (Clipboard)"],["clipboard.x11"," new_clipboard returns a new `Clipboard` instance allocated on the heap.  The `C","clipboard.x11.html#new_clipboard","fn "],["clipboard.x11"," new_primary returns a new X11 `PRIMARY` type `Clipboard` instance allocated on ","clipboard.x11.html#new_primary","fn "],["context","","context.html#Context","interface "],["context"," background returns an empty Context. It is never canceled, has no  values, and ","context.html#background","fn "],["context"," todo returns an empty Context. Code should use todo when  it's unclear which Co","context.html#todo","fn "],["context","","context.html#Canceler","interface "],["context","","context.html#cancel","fn "],["context"," A CancelContext can be canceled. When canceled, it also cancels any children  t","context.html#CancelContext","struct "],["context","","context.html#CancelContext.deadline","fn (CancelContext)"],["context","","context.html#CancelContext.done","fn (CancelContext)"],["context","","context.html#CancelContext.err","fn (CancelContext)"],["context","","context.html#CancelContext.value","fn (CancelContext)"],["context","","context.html#CancelContext.str","fn (CancelContext)"],["context"," with_cancel returns a copy of parent with a new done channel. The returned  con","context.html#with_cancel","fn "],["context"," A TimerContext carries a timer and a deadline. It embeds a CancelContext to  im","context.html#TimerContext","struct "],["context","","context.html#TimerContext.deadline","fn (TimerContext)"],["context","","context.html#TimerContext.done","fn (TimerContext)"],["context","","context.html#TimerContext.err","fn (TimerContext)"],["context","","context.html#TimerContext.value","fn (TimerContext)"],["context","","context.html#TimerContext.cancel","fn (TimerContext)"],["context","","context.html#TimerContext.str","fn (TimerContext)"],["context"," with_deadline returns a copy of the parent context with the deadline adjusted  ","context.html#with_deadline","fn "],["context"," with_timeout returns with_deadline(parent, time.now().add(timeout)).   Cancelin","context.html#with_timeout","fn "],["context"," An EmptyContext is never canceled, has no values, and has no deadline. It is no","context.html#EmptyContext","type "],["context","","context.html#EmptyContext.deadline","fn (EmptyContext)"],["context","","context.html#EmptyContext.done","fn (EmptyContext)"],["context","","context.html#EmptyContext.err","fn (EmptyContext)"],["context","","context.html#EmptyContext.value","fn (EmptyContext)"],["context","","context.html#EmptyContext.str","fn (EmptyContext)"],["context"," A ValueContext carries a key-value pair. It implements Value for that key and  ","context.html#ValueContext","struct "],["context","","context.html#ValueContext.deadline","fn (ValueContext)"],["context","","context.html#ValueContext.done","fn (ValueContext)"],["context","","context.html#ValueContext.err","fn (ValueContext)"],["context","","context.html#ValueContext.value","fn (ValueContext)"],["context","","context.html#ValueContext.str","fn (ValueContext)"],["context"," with_value returns a copy of parent in which the value associated with key is  ","context.html#with_value","fn "],["crypto","","crypto.html#Hash","enum "],["crypto.aes"," new_cipher creates and returns a new `AesCipher`.  The key argument should be t","crypto.aes.html#new_cipher","fn "],["crypto.aes","","crypto.aes.html#AesCipher","type "],["crypto.aes"," block_size returns the block size of the checksum in bytes. ","crypto.aes.html#AesCipher.block_size","fn (AesCipher)"],["crypto.aes"," encrypt encrypts the blocks in `src` to `dst`.  Please note: `dst` and `src` ar","crypto.aes.html#AesCipher.encrypt","fn (AesCipher)"],["crypto.aes"," decrypt decrypts the blocks in `src` to `dst`.  Please note: `dst` and `src` ar","crypto.aes.html#AesCipher.decrypt","fn (AesCipher)"],["crypto.aes"," new_cbc returns a `AesCbc` which encrypts in cipher block chaining  mode, using","crypto.aes.html#new_cbc","fn "],["crypto.aes","","crypto.aes.html#AesCbc","type "],["crypto.aes"," block_size returns the block size of the checksum in bytes. ","crypto.aes.html#AesCbc.block_size","fn (AesCbc)"],["crypto.aes"," encrypt_blocks encrypts the blocks in `src_` to `dst_`.  Please note: `dst_` is","crypto.aes.html#AesCbc.encrypt_blocks","fn (AesCbc)"],["crypto.aes"," decrypt_blocks decrypts the blocks in `src` to `dst`.  Please note: `dst` is mu","crypto.aes.html#AesCbc.decrypt_blocks","fn (AesCbc)"],["crypto.cipher"," NOTE: Implement other versions (joe-c)  xor_bytes xors the bytes in a and b. Th","crypto.cipher.html#xor_bytes","fn "],["crypto.cipher"," safe_xor_bytes XORs the bytes in `a` and `b` into `dst` it does so `n` times.  ","crypto.cipher.html#safe_xor_bytes","fn "],["crypto.cipher"," xor_words XORs multiples of 4 or 8 bytes (depending on architecture.)  The slic","crypto.cipher.html#xor_words","fn "],["crypto.hmac"," new returns a HMAC byte array, depending on the hash algorithm used. ","crypto.hmac.html#new","fn "],["crypto.hmac"," equal compares 2 MACs for equality, without leaking timing info.  NB: if the le","crypto.hmac.html#equal","fn "],["crypto.internal.subtle"," NOTE: require unsafe in future  any_overlap reports whether x and y share memor","crypto.internal.subtle.html#any_overlap","fn "],["crypto.internal.subtle"," inexact_overlap reports whether x and y share memory at any non-corresponding  ","crypto.internal.subtle.html#inexact_overlap","fn "],["crypto.internal.subtle"," constant_time_byte_eq returns 1 when x == y. ","crypto.internal.subtle.html#constant_time_byte_eq","fn "],["crypto.internal.subtle"," constant_time_eq returns 1 when x == y. ","crypto.internal.subtle.html#constant_time_eq","fn "],["crypto.internal.subtle"," constant_time_select returns x when v == 1, and y when v == 0.  it is undefined","crypto.internal.subtle.html#constant_time_select","fn "],["crypto.internal.subtle"," constant_time_compare returns 1 when x and y have equal contents.  The runtime ","crypto.internal.subtle.html#constant_time_compare","fn "],["crypto.internal.subtle"," constant_time_copy copies the contents of y into x, when v == 1.  When v == 0, ","crypto.internal.subtle.html#constant_time_copy","fn "],["crypto.internal.subtle"," constant_time_less_or_eq returns 1 if x <= y, and 0 otherwise.  it is undefined","crypto.internal.subtle.html#constant_time_less_or_eq","fn "],["crypto.md5"," new returns a new Digest (implementing hash.Hash) computing the MD5 checksum. ","crypto.md5.html#new","fn "],["crypto.md5","","crypto.md5.html#Digest","type "],["crypto.md5"," write writes the contents of `p_` to the internal hash representation. ","crypto.md5.html#Digest.write","fn (Digest)"],["crypto.md5"," sum returns the md5 sum of the bytes in `b_in`. ","crypto.md5.html#Digest.sum","fn (Digest)"],["crypto.md5"," checksum returns the byte checksum of the `Digest`. ","crypto.md5.html#Digest.checksum","fn (Digest)"],["crypto.md5"," size returns the size of the checksum in bytes. ","crypto.md5.html#Digest.size","fn (Digest)"],["crypto.md5"," block_size returns the block size of the checksum in bytes. ","crypto.md5.html#Digest.block_size","fn (Digest)"],["crypto.md5"," sum returns the MD5 checksum of the data. ","crypto.md5.html#sum","fn "],["crypto.md5"," hexhash returns a hexadecimal MD5 hash sum `string` of `s`.  Example: assert md","crypto.md5.html#hexhash","fn "],["crypto.rand"," read returns an array of `bytes_needed` random bytes read from the OS. ","crypto.rand.html#read","fn "],["crypto.rand"," int_u64 returns a random unsigned 64-bit integer `u64` read from a real OS sour","crypto.rand.html#int_u64","fn "],["crypto.rc4"," new_cipher creates and returns a new Cipher. The key argument should be the  RC","crypto.rc4.html#new_cipher","fn "],["crypto.rc4","","crypto.rc4.html#Cipher","type "],["crypto.rc4"," reset zeros the key data and makes the Cipher unusable.good to com   Deprecated","crypto.rc4.html#Cipher.reset","fn (Cipher)"],["crypto.rc4"," xor_key_stream sets dst to the result of XORing src with the key stream.  Dst a","crypto.rc4.html#Cipher.xor_key_stream","fn (Cipher)"],["crypto.sha1"," new returns a new Digest (implementing hash.Hash) computing the SHA1 checksum. ","crypto.sha1.html#new","fn "],["crypto.sha1","","crypto.sha1.html#Digest","type "],["crypto.sha1"," write writes the contents of `p_` to the internal hash representation. ","crypto.sha1.html#Digest.write","fn (Digest)"],["crypto.sha1"," sum returns a copy of the generated sum of the bytes in `b_in`. ","crypto.sha1.html#Digest.sum","fn (Digest)"],["crypto.sha1"," size returns the size of the checksum in bytes. ","crypto.sha1.html#Digest.size","fn (Digest)"],["crypto.sha1"," block_size returns the block size of the checksum in bytes. ","crypto.sha1.html#Digest.block_size","fn (Digest)"],["crypto.sha1"," sum returns the SHA-1 checksum of the bytes passed in `data`. ","crypto.sha1.html#sum","fn "],["crypto.sha1"," hexhash returns a hexadecimal SHA1 hash sum `string` of `s`. ","crypto.sha1.html#hexhash","fn "],["crypto.sha256"," new returns a new Digest (implementing hash.Hash) computing the SHA256 checksum","crypto.sha256.html#new","fn "],["crypto.sha256"," new224 returns a new Digest (implementing hash.Hash) computing the SHA224 check","crypto.sha256.html#new224","fn "],["crypto.sha256","","crypto.sha256.html#Digest","type "],["crypto.sha256","","crypto.sha256.html#Digest.sum","fn (Digest)"],["crypto.sha256"," size returns the size of the checksum in bytes. ","crypto.sha256.html#Digest.size","fn (Digest)"],["crypto.sha256"," block_size returns the block size of the checksum in bytes. ","crypto.sha256.html#Digest.block_size","fn (Digest)"],["crypto.sha256"," sum returns the SHA256 checksum of the bytes in `data`.  Example: assert sha256","crypto.sha256.html#sum","fn "],["crypto.sha256"," sum256 returns the SHA256 checksum of the data. ","crypto.sha256.html#sum256","fn "],["crypto.sha256"," sum224 returns the SHA224 checksum of the data. ","crypto.sha256.html#sum224","fn "],["crypto.sha256"," hexhash returns a hexadecimal SHA256 hash sum `string` of `s`.  Example: assert","crypto.sha256.html#hexhash","fn "],["crypto.sha256"," hexhash_224 returns a hexadecimal SHA224 hash sum `string` of `s`. ","crypto.sha256.html#hexhash_224","fn "],["crypto.sha512"," new returns a new Digest (implementing hash.Hash) computing the SHA-512 checksu","crypto.sha512.html#new","fn "],["crypto.sha512"," sum512 returns the SHA512 checksum of the data. ","crypto.sha512.html#sum512","fn "],["crypto.sha512"," sum384 returns the SHA384 checksum of the data. ","crypto.sha512.html#sum384","fn "],["crypto.sha512"," sum512_224 returns the Sum512/224 checksum of the data. ","crypto.sha512.html#sum512_224","fn "],["crypto.sha512"," sum512_256 returns the Sum512/256 checksum of the data. ","crypto.sha512.html#sum512_256","fn "],["crypto.sha512","","crypto.sha512.html#Digest","type "],["crypto.sha512"," size returns the size of the checksum in bytes. ","crypto.sha512.html#Digest.size","fn (Digest)"],["crypto.sha512"," block_size returns the block size of the checksum in bytes. ","crypto.sha512.html#Digest.block_size","fn (Digest)"],["crypto.sha512"," hexhash returns a hexadecimal SHA512 hash sum `string` of `s`. ","crypto.sha512.html#hexhash","fn "],["crypto.sha512"," hexhash_384 returns a hexadecimal SHA384 hash sum `string` of `s`. ","crypto.sha512.html#hexhash_384","fn "],["crypto.sha512"," hexhash_512_224 returns a hexadecimal SHA512/224 hash sum `string` of `s`. ","crypto.sha512.html#hexhash_512_224","fn "],["crypto.sha512"," hexhash_512_256 returns a hexadecimal 512/256 hash sum `string` of `s`. ","crypto.sha512.html#hexhash_512_256","fn "],["darwin","","darwin.html#nsstring","fn "],["darwin","","darwin.html#resource_path","fn "],["dl"," get_shared_library_extension returns the platform dependent shared library exte","dl.html#get_shared_library_extension","fn "],["dl"," get_libname returns a library name with the operating system specific extension","dl.html#get_libname","fn "],["dl"," open_opt - loads the dynamic shared object.  Unlike open, open_opt return an op","dl.html#open_opt","fn "],["dl"," sym_opt returns the address of a symbol in a given shared object, if found.  Un","dl.html#sym_opt","fn "],["dl","","dl.html#open","fn "],["dl"," close frees the loaded a given module. ","dl.html#close","fn "],["dl"," sym returns an address of an exported function or variable from a given module.","dl.html#sym","fn "],["dl"," dlerror provides a text error diagnostic message for functions in `dl`  it retu","dl.html#dlerror","fn "],["encoding.base64"," decode decodes the base64 encoded `string` value passed in `data`.  Please note","encoding.base64.html#decode","fn "],["encoding.base64"," decode_str is the string variant of decode ","encoding.base64.html#decode_str","fn "],["encoding.base64"," encode encodes the `[]byte` value passed in `data` to base64.  Please note: bas","encoding.base64.html#encode","fn "],["encoding.base64"," encode_str is the string variant of encode ","encoding.base64.html#encode_str","fn "],["encoding.base64"," url_decode returns a decoded URL `string` version of  the a base64 url encoded ","encoding.base64.html#url_decode","fn "],["encoding.base64"," url_decode_str is the string variant of url_decode ","encoding.base64.html#url_decode_str","fn "],["encoding.base64"," url_encode returns a base64 URL encoded `string` version  of the value passed i","encoding.base64.html#url_encode","fn "],["encoding.base64"," url_encode_str is the string variant of url_encode ","encoding.base64.html#url_encode_str","fn "],["encoding.base64"," decode_in_buffer decodes the base64 encoded `string` reference passed in `data`","encoding.base64.html#decode_in_buffer","fn "],["encoding.base64"," encode_in_buffer base64 encodes the `[]byte` passed in `data` into `buffer`.  e","encoding.base64.html#encode_in_buffer","fn "],["encoding.binary"," Little Endian ","encoding.binary.html#little_endian_u16","fn "],["encoding.binary","","encoding.binary.html#little_endian_put_u16","fn "],["encoding.binary","","encoding.binary.html#little_endian_u32","fn "],["encoding.binary","","encoding.binary.html#little_endian_put_u32","fn "],["encoding.binary","","encoding.binary.html#little_endian_u64","fn "],["encoding.binary","","encoding.binary.html#little_endian_put_u64","fn "],["encoding.binary"," Big Endian ","encoding.binary.html#big_endian_u16","fn "],["encoding.binary","","encoding.binary.html#big_endian_put_u16","fn "],["encoding.binary","","encoding.binary.html#big_endian_u32","fn "],["encoding.binary","","encoding.binary.html#big_endian_put_u32","fn "],["encoding.binary","","encoding.binary.html#big_endian_u64","fn "],["encoding.binary","","encoding.binary.html#big_endian_put_u64","fn "],["encoding.csv"," new_reader initializes a Reader with string data to parse ","encoding.csv.html#new_reader","fn "],["encoding.csv","","encoding.csv.html#Reader","type "],["encoding.csv"," read reads a row from the CSV data.  If successful, the result holds an array o","encoding.csv.html#Reader.read","fn (Reader)"],["encoding.csv","","encoding.csv.html#new_writer","fn "],["encoding.csv","","encoding.csv.html#Writer","type "],["encoding.csv"," write writes a single record ","encoding.csv.html#Writer.write","fn (Writer)"],["encoding.csv","","encoding.csv.html#Writer.str","fn (Writer)"],["encoding.utf8","","encoding.utf8.html#validate_str","fn "],["encoding.utf8","","encoding.utf8.html#validate","fn "],["encoding.utf8"," len return the length as number of unicode chars from a string ","encoding.utf8.html#len","fn "],["encoding.utf8"," char_len calculate the length in bytes of a utf8 char ","encoding.utf8.html#char_len","fn "],["encoding.utf8"," get_uchar convert a unicode glyph in string[index] into a int unicode char ","encoding.utf8.html#get_uchar","fn "],["encoding.utf8"," raw_index - get the raw chracter from the string by the given index value.  exa","encoding.utf8.html#raw_index","fn "],["encoding.utf8"," reverse - returns a reversed string.  example: utf8.reverse('你好世界hello ","encoding.utf8.html#reverse","fn "],["encoding.utf8"," to_upper return an uppercase string from a string ","encoding.utf8.html#to_upper","fn "],["encoding.utf8"," to_lower return an lowercase string from a string ","encoding.utf8.html#to_lower","fn "],["encoding.utf8","  Western   is_punct return true if the string[index] byte is the start of a uni","encoding.utf8.html#is_punct","fn "],["encoding.utf8"," is_uchar_punct return true if the input unicode is a western unicode punctuatio","encoding.utf8.html#is_uchar_punct","fn "],["encoding.utf8","  Global   is_global_punct return true if the string[index] byte of is the start","encoding.utf8.html#is_global_punct","fn "],["encoding.utf8"," is_uchar_global_punct return true if the input unicode is a global unicode punc","encoding.utf8.html#is_uchar_global_punct","fn "],["encoding.utf8.east_asian"," EastAsianWidthType represents East_Asian_Width informative prorperty ","encoding.utf8.east_asian.html#EastAsianWidthProperty","enum "],["encoding.utf8.east_asian"," display_width return the display width as number of unicode chars from a string","encoding.utf8.east_asian.html#display_width","fn "],["encoding.utf8.east_asian"," width_property_at returns the East Asian Width properties at string[index] ","encoding.utf8.east_asian.html#east_asian_width_property_at","fn "],["eventbus","","eventbus.html#EventHandlerFn","type "],["eventbus","","eventbus.html#Publisher","struct "],["eventbus","","eventbus.html#Subscriber","struct "],["eventbus"," Subscriber Methods ","eventbus.html#Subscriber.subscribe","fn (Subscriber)"],["eventbus","","eventbus.html#Subscriber.subscribe_method","fn (Subscriber)"],["eventbus"," unsubscribe_method unsubscribe a receiver for only one method ","eventbus.html#Subscriber.unsubscribe_method","fn (Subscriber)"],["eventbus"," unsubscribe_receiver unsubscribes a receiver from all events ","eventbus.html#Subscriber.unsubscribe_receiver","fn (Subscriber)"],["eventbus","","eventbus.html#Subscriber.subscribe_once","fn (Subscriber)"],["eventbus","","eventbus.html#Subscriber.is_subscribed","fn (Subscriber)"],["eventbus"," is_subscribed_method checks whether a receiver was already subscribed for any e","eventbus.html#Subscriber.is_subscribed_method","fn (Subscriber)"],["eventbus","","eventbus.html#Subscriber.unsubscribe","fn (Subscriber)"],["eventbus","","eventbus.html#EventBus","struct "],["eventbus"," EventBus Methods ","eventbus.html#EventBus.publish","fn (EventBus)"],["eventbus","","eventbus.html#EventBus.clear_all","fn (EventBus)"],["eventbus","","eventbus.html#EventBus.has_subscriber","fn (EventBus)"],["eventbus","","eventbus.html#new","fn "],["flag"," data object storing information about a defined flag ","flag.html#Flag","struct "],["flag","","flag.html#Flag.str","fn (Flag)"],["flag","","flag.html#[]Flag","type "],["flag","","flag.html#[]Flag.str","fn ([]Flag)"],["flag"," ","flag.html#FlagParser","struct "],["flag"," usage_example - add an usage example  All examples will be listed in the help s","flag.html#FlagParser.usage_example","fn (FlagParser)"],["flag"," add_footer - add a footnote, that will be shown  at the bottom of the help scre","flag.html#FlagParser.footer","fn (FlagParser)"],["flag"," change the application name to be used in 'usage' output ","flag.html#FlagParser.application","fn (FlagParser)"],["flag"," change the application version to be used in 'usage' output ","flag.html#FlagParser.version","fn (FlagParser)"],["flag"," description appends to the application description lines, shown  in the help/us","flag.html#FlagParser.description","fn (FlagParser)"],["flag"," in most cases you do not need the first argv for flag parsing ","flag.html#FlagParser.skip_executable","fn (FlagParser)"],["flag"," allow_unknown_args - if your program has sub commands, that have  their own arg","flag.html#FlagParser.allow_unknown_args","fn (FlagParser)"],["flag"," bool_opt returns an optional that returns the value associated with the flag.  ","flag.html#FlagParser.bool_opt","fn (FlagParser)"],["flag"," defining and parsing a bool flag  if defined  the value is returned (true/false","flag.html#FlagParser.bool","fn (FlagParser)"],["flag"," int_multi returns all instances of values associated with the flags provided  I","flag.html#FlagParser.int_multi","fn (FlagParser)"],["flag"," int_opt returns an optional that returns the value associated with the flag.  I","flag.html#FlagParser.int_opt","fn (FlagParser)"],["flag"," defining and parsing an int flag  if defined  the value is returned (int)  else","flag.html#FlagParser.int","fn (FlagParser)"],["flag"," float_multi returns all instances of values associated with the flags provided ","flag.html#FlagParser.float_multi","fn (FlagParser)"],["flag"," float_opt returns an optional that returns the value associated with the flag. ","flag.html#FlagParser.float_opt","fn (FlagParser)"],["flag"," defining and parsing a float flag  if defined  the value is returned (float)  e","flag.html#FlagParser.float","fn (FlagParser)"],["flag"," string_multi returns all instances of values associated with the flags provided","flag.html#FlagParser.string_multi","fn (FlagParser)"],["flag"," string_opt returns an optional that returns the value associated with the flag.","flag.html#FlagParser.string_opt","fn (FlagParser)"],["flag"," defining and parsing a string flag  if defined  the value is returned (string) ","flag.html#FlagParser.string","fn (FlagParser)"],["flag","","flag.html#FlagParser.limit_free_args_to_at_least","fn (FlagParser)"],["flag","","flag.html#FlagParser.limit_free_args_to_exactly","fn (FlagParser)"],["flag"," this will cause an error in finalize() if free args are out of range  (min, ...","flag.html#FlagParser.limit_free_args","fn (FlagParser)"],["flag","","flag.html#FlagParser.arguments_description","fn (FlagParser)"],["flag"," collect all given information and ","flag.html#FlagParser.usage","fn (FlagParser)"],["flag"," finalize - return all remaining arguments (non options).  Call .finalize() afte","flag.html#FlagParser.finalize","fn (FlagParser)"],["flag"," remaining_parameters will return all remaining parameters.  Call .remaining_par","flag.html#FlagParser.remaining_parameters","fn (FlagParser)"],["flag"," create a new flag set for parsing command line arguments ","flag.html#new_flag_parser","fn "],["fontstash"," Contructor and destructor. ","fontstash.html#create_internal","fn "],["fontstash","","fontstash.html#delete_internal","fn "],["fontstash","","fontstash.html#C.FONScontext","struct "],["fontstash","","fontstash.html#C.FONScontext.add_fallback_font","fn (C.FONScontext)"],["fontstash","","fontstash.html#C.FONScontext.add_font_mem","fn (C.FONScontext)"],["fontstash","","fontstash.html#C.FONScontext.clear_state","fn (C.FONScontext)"],["fontstash"," Draws the stash texture for debugging ","fontstash.html#C.FONScontext.draw_debug","fn (C.FONScontext)"],["fontstash"," Draw text ","fontstash.html#C.FONScontext.draw_text","fn (C.FONScontext)"],["fontstash"," Expands the atlas size. ","fontstash.html#C.FONScontext.expand_atlas","fn (C.FONScontext)"],["fontstash"," Returns current atlas size. ","fontstash.html#C.FONScontext.get_atlas_size","fn (C.FONScontext)"],["fontstash"," Add fonts ","fontstash.html#C.FONScontext.get_font_by_name","fn (C.FONScontext)"],["fontstash"," Pull texture changes ","fontstash.html#C.FONScontext.get_texture_data","fn (C.FONScontext)"],["fontstash","","fontstash.html#C.FONScontext.line_bounds","fn (C.FONScontext)"],["fontstash","","fontstash.html#C.FONScontext.pop_state","fn (C.FONScontext)"],["fontstash"," State handling ","fontstash.html#C.FONScontext.push_state","fn (C.FONScontext)"],["fontstash"," Resets the whole stash. ","fontstash.html#C.FONScontext.reset_atlas","fn (C.FONScontext)"],["fontstash","","fontstash.html#C.FONScontext.set_align","fn (C.FONScontext)"],["fontstash","","fontstash.html#C.FONScontext.set_blur","fn (C.FONScontext)"],["fontstash","","fontstash.html#C.FONScontext.set_color","fn (C.FONScontext)"],["fontstash","","fontstash.html#C.FONScontext.set_error_callback","fn (C.FONScontext)"],["fontstash","","fontstash.html#C.FONScontext.set_font","fn (C.FONScontext)"],["fontstash"," State setting ","fontstash.html#C.FONScontext.set_size","fn (C.FONScontext)"],["fontstash","","fontstash.html#C.FONScontext.set_spacing","fn (C.FONScontext)"],["fontstash"," Measure text ","fontstash.html#C.FONScontext.text_bounds","fn (C.FONScontext)"],["fontstash"," Text iterator ","fontstash.html#C.FONScontext.text_iter_init","fn (C.FONScontext)"],["fontstash","","fontstash.html#C.FONScontext.text_iter_next","fn (C.FONScontext)"],["fontstash","","fontstash.html#C.FONScontext.validate_texture","fn (C.FONScontext)"],["fontstash","","fontstash.html#C.FONScontext.vert_metrics","fn (C.FONScontext)"],["fontstash","","fontstash.html#FonsFlags","enum "],["fontstash","","fontstash.html#FonsAlign","enum "],["fontstash","","fontstash.html#FonsErrorCode","enum "],["fontstash","","fontstash.html#C.FONSparams","struct "],["fontstash","","fontstash.html#C.FONSquad","struct "],["fontstash","","fontstash.html#C.FONStextIter","struct "],["fontstash","","fontstash.html#C.FONSfont","struct "],["gg","","gg.html#MouseButton","enum "],["gg"," NB: unlike the MouseButton enum from above,  the [flag]-ed enum here can have c","gg.html#MouseButtons","enum "],["gg","","gg.html#Modifier","enum "],["gg","","gg.html#PenLineType","enum "],["gg","","gg.html#KeyCode","enum "],["gg","","gg.html#FNCb","type "],["gg","","gg.html#FNEvent","type "],["gg","","gg.html#FNFail","type "],["gg","","gg.html#FNKeyDown","type "],["gg","","gg.html#FNKeyUp","type "],["gg","","gg.html#FNMove","type "],["gg","","gg.html#FNClick","type "],["gg","","gg.html#FNUnClick","type "],["gg","","gg.html#FNChar","type "],["gg","","gg.html#Event","struct "],["gg","","gg.html#Config","struct "],["gg","","gg.html#PenConfig","struct "],["gg","","gg.html#Context","struct "],["gg","","gg.html#Context.begin","fn (Context)"],["gg","","gg.html#Context.cache_image","fn (Context)"],["gg","","gg.html#Context.create_image","fn (Context)"],["gg","","gg.html#Context.create_image_from_byte_array","fn (Context)"],["gg","","gg.html#Context.create_image_from_memory","fn (Context)"],["gg"," TODO copypasta ","gg.html#Context.create_image_with_size","fn (Context)"],["gg","","gg.html#Context.draw_arc","fn (Context)"],["gg","","gg.html#Context.draw_arc_line","fn (Context)"],["gg","","gg.html#Context.draw_circle","fn (Context)"],["gg","","gg.html#Context.draw_circle_line","fn (Context)"],["gg","","gg.html#Context.draw_circle_with_segments","fn (Context)"],["gg"," draw_convex_poly draws a convex polygon, given an array of points, and a color.","gg.html#Context.draw_convex_poly","fn (Context)"],["gg"," draw_empty_poly - draws the borders of a polygon, given an array of points, and","gg.html#Context.draw_empty_poly","fn (Context)"],["gg","","gg.html#Context.draw_empty_rect","fn (Context)"],["gg","","gg.html#Context.draw_empty_rounded_rect","fn (Context)"],["gg","","gg.html#Context.draw_empty_square","fn (Context)"],["gg"," draw_image draws the provided image onto the screen ","gg.html#Context.draw_image","fn (Context)"],["gg"," draw_image_3d draws an image with a z depth ","gg.html#Context.draw_image_3d","fn (Context)"],["gg"," draw_image_by_id draws an image by its id ","gg.html#Context.draw_image_by_id","fn (Context)"],["gg"," draw_image_flipped draws the provided image flipped horizontally (use `draw_ima","gg.html#Context.draw_image_flipped","fn (Context)"],["gg"," Draw part of an image using uv coordinates  img_rect is the size and position (","gg.html#Context.draw_image_part","fn (Context)"],["gg"," draw_image_with_config takes in a config that details how the  provided image s","gg.html#Context.draw_image_with_config","fn (Context)"],["gg"," draw_line draws a line between the points provided ","gg.html#Context.draw_line","fn (Context)"],["gg"," draw_line_with_config draws a line between the points provided with the PenConf","gg.html#Context.draw_line_with_config","fn (Context)"],["gg"," TODO: Fix alpha ","gg.html#Context.draw_rect","fn (Context)"],["gg","","gg.html#Context.draw_rounded_rect","fn (Context)"],["gg","","gg.html#Context.draw_square","fn (Context)"],["gg","","gg.html#Context.draw_text","fn (Context)"],["gg","","gg.html#Context.draw_text_def","fn (Context)"],["gg","","gg.html#Context.draw_triangle","fn (Context)"],["gg","","gg.html#Context.end","fn (Context)"],["gg","","gg.html#Context.get_cached_image_by_idx","fn (Context)"],["gg"," new_streaming_image returns a cached `image_idx` of a special image, that  can ","gg.html#Context.new_streaming_image","fn (Context)"],["gg"," quit closes the context window and exits the event loop for it ","gg.html#Context.quit","fn (Context)"],["gg","","gg.html#Context.refresh_ui","fn (Context)"],["gg"," resize the context's Window ","gg.html#Context.resize","fn (Context)"],["gg","","gg.html#Context.run","fn (Context)"],["gg","","gg.html#Context.set_bg_color","fn (Context)"],["gg","","gg.html#Context.set_cfg","fn (Context)"],["gg","","gg.html#Context.set_pixel","fn (Context)"],["gg","","gg.html#Context.text_height","fn (Context)"],["gg","","gg.html#Context.text_size","fn (Context)"],["gg","","gg.html#Context.text_width","fn (Context)"],["gg"," update_pixel_data is a helper for working with image streams (i.e. images,  tha","gg.html#Context.update_pixel_data","fn (Context)"],["gg","","gg.html#Size","struct "],["gg"," ","gg.html#new_context","fn "],["gg","","gg.html#screen_size","fn "],["gg"," window_size returns the `Size` of the active window ","gg.html#window_size","fn "],["gg"," window_size_real_pixels returns the `Size` of the active window without scale ","gg.html#window_size_real_pixels","fn "],["gg","","gg.html#dpi_scale","fn "],["gg","","gg.html#high_dpi","fn "],["gg","","gg.html#Image","struct "],["gg","","gg.html#Image.init_sokol_image","fn (Image)"],["gg","","gg.html#Image.update_pixel_data","fn (Image)"],["gg"," DrawImageConfig struct defines the various options  that can be used to draw an","gg.html#DrawImageConfig","struct "],["gg","","gg.html#Rect","struct "],["gg","","gg.html#FT","type "],["gg","","gg.html#FT.flush","fn (FT)"],["gg","","gg.html#system_font_path","fn "],["gg.m4"," Translate degrees to radians ","gg.m4.html#rad","fn "],["gg.m4"," Translate radians to degrees ","gg.m4.html#deg","fn "],["gg.m4"," calculate the Orthographic projection matrix ","gg.m4.html#ortho","fn "],["gg.m4"," Calculate the perspective matrix using (fov:fov, ar:aspect_ratio ,n:near_pane, ","gg.m4.html#perspective","fn "],["gg.m4"," Calculate the look-at matrix ","gg.m4.html#look_at","fn "],["gg.m4"," Get the complete transformation matrix for GLSL demos ","gg.m4.html#calc_tr_matrices","fn "],["gg.m4","","gg.m4.html#Mat4","struct "],["gg.m4","","gg.m4.html#Mat4.str","fn (Mat4)"],["gg.m4"," Remove all the raw zeros ","gg.m4.html#Mat4.clean","fn (Mat4)"],["gg.m4"," Sum all the elements of the matrix ","gg.m4.html#Mat4.sum_all","fn (Mat4)"],["gg.m4"," Check if two matrix are equal using module precision ","gg.m4.html#Mat4.is_equal","fn (Mat4)"],["gg.m4","-------------------------------------  Set/Get values --------------------------","gg.m4.html#Mat4.get_e","fn (Mat4)"],["gg.m4"," Get an element of the matrix using [0..3][0..3] indexes, two dimension ","gg.m4.html#Mat4.get_f","fn (Mat4)"],["gg.m4"," Set an element of the matrix using [0..15] indexes, one dimension ","gg.m4.html#Mat4.set_e","fn (Mat4)"],["gg.m4"," Set an element of the matrix using [0..3][0..3] indexes, two dimension ","gg.m4.html#Mat4.set_f","fn (Mat4)"],["gg.m4"," Copy a matrix elements from another matrix ","gg.m4.html#Mat4.copy","fn (Mat4)"],["gg.m4"," Set the trace of the matrix using a vec4 ","gg.m4.html#Mat4.set_trace","fn (Mat4)"],["gg.m4"," Get the trace of the matrix ","gg.m4.html#Mat4.get_trace","fn (Mat4)"],["gg.m4"," Set all the matrix elements to value ","gg.m4.html#Mat4.set_f32","fn (Mat4)"],["gg.m4","-------------------------------------  Rows/Column access ----------------------","gg.m4.html#Mat4.set_row","fn (Mat4)"],["gg.m4"," Get a row from a matrix ","gg.m4.html#Mat4.get_row","fn (Mat4)"],["gg.m4"," Set the column as the input vec4 ","gg.m4.html#Mat4.set_col","fn (Mat4)"],["gg.m4"," Get a column from a matrix ","gg.m4.html#Mat4.get_col","fn (Mat4)"],["gg.m4"," Swap two columns in the matrix ","gg.m4.html#Mat4.swap_col","fn (Mat4)"],["gg.m4"," Swap two rows in the matrix ","gg.m4.html#Mat4.swap_row","fn (Mat4)"],["gg.m4","-------------------------------------  Modify data -----------------------------","gg.m4.html#Mat4.transpose","fn (Mat4)"],["gg.m4"," Multiply the all the elements of the matrix by a scalar ","gg.m4.html#Mat4.mul_scalar","fn (Mat4)"],["gg.m4"," Sum of matrix, operator + ","gg.m4.html#Mat4.+","fn (Mat4)"],["gg.m4"," Subtraction of matrix, operator - ","gg.m4.html#Mat4.-","fn (Mat4)"],["gg.m4"," Multiplication of matrix, operator * ","gg.m4.html#Mat4.*","fn (Mat4)"],["gg.m4"," Calculate the inverse of the Matrix ","gg.m4.html#Mat4.inverse","fn (Mat4)"],["gg.m4"," Get a matrix translated by a vector w ","gg.m4.html#Mat4.translate","fn (Mat4)"],["gg.m4"," Return a zero matrix ","gg.m4.html#zero_m4","fn "],["gg.m4"," Return a unity matrix ","gg.m4.html#unit_m4","fn "],["gg.m4"," Return a matrix initialized with value ","gg.m4.html#set_m4","fn "],["gg.m4"," Sum of matrix function ","gg.m4.html#add","fn "],["gg.m4"," Subtraction of matrix function ","gg.m4.html#sub","fn "],["gg.m4"," Multiplication of matrix function ","gg.m4.html#mul","fn "],["gg.m4"," Multiply a Matrix by a vector ","gg.m4.html#mul_vec","fn "],["gg.m4"," Calculate the determinant of the Matrix ","gg.m4.html#det","fn "],["gg.m4"," Get a rotation matrix using w as rotation axis vector, the angle is in radians ","gg.m4.html#rotate","fn "],["gg.m4"," Get a scale matrix, the scale vector is w, only xyz are evaluated. ","gg.m4.html#scale","fn "],["gg.m4","","gg.m4.html#Vec4","struct "],["gg.m4","","gg.m4.html#Vec4.str","fn (Vec4)"],["gg.m4"," Remove all the raw zeros ","gg.m4.html#Vec4.clean","fn (Vec4)"],["gg.m4"," Set all elements to value ","gg.m4.html#Vec4.copy","fn (Vec4)"],["gg.m4"," Scale the vector using a scalar ","gg.m4.html#Vec4.mul_scalar","fn (Vec4)"],["gg.m4"," Reciprocal of the vector ","gg.m4.html#Vec4.inv","fn (Vec4)"],["gg.m4"," Normalize the vector ","gg.m4.html#Vec4.normalize","fn (Vec4)"],["gg.m4"," Normalize only xyz, w set to 0 ","gg.m4.html#Vec4.normalize3","fn (Vec4)"],["gg.m4"," Module of the vector xyzw ","gg.m4.html#Vec4.mod","fn (Vec4)"],["gg.m4"," Module for 3d vector xyz, w ignored ","gg.m4.html#Vec4.mod3","fn (Vec4)"],["gg.m4"," Sum of all the elements ","gg.m4.html#Vec4.sum","fn (Vec4)"],["gg.m4"," Addition ","gg.m4.html#Vec4.+","fn (Vec4)"],["gg.m4"," Subtraction ","gg.m4.html#Vec4.-","fn (Vec4)"],["gg.m4"," Dot product ","gg.m4.html#Vec4.*","fn (Vec4)"],["gg.m4"," Cross product ","gg.m4.html#Vec4.%","fn (Vec4)"],["gg.m4"," Components multiplication ","gg.m4.html#Vec4.mul_vec4","fn (Vec4)"],["gg.m4"," create a Vec4 function passing x,y,z as parameteres. w is set to 1 ","gg.m4.html#vec3","fn "],["gg.m4"," Return a zero vector ","gg.m4.html#zero_v4","fn "],["gg.m4"," Return all one vector ","gg.m4.html#one_v4","fn "],["gg.m4"," Return a blank vector ","gg.m4.html#blank_v4","fn "],["gg.m4"," Set all elements to value ","gg.m4.html#set_v4","fn "],["glm"," # f32* myglm_rotate(f32 *m, f32 angle, f32, f32, f32);  # f32* myglm_perspectiv","glm.html#Mat4","struct "],["glm","","glm.html#Mat4.str","fn (Mat4)"],["glm","","glm.html#vec3","fn "],["glm","","glm.html#Vec3","type "],["glm","","glm.html#Vec3.str","fn (Vec3)"],["glm","","glm.html#Vec2","type "],["glm","","glm.html#Vec2.str","fn (Vec2)"],["glm"," fn translate(vec Vec3) *f32 { ","glm.html#translate","fn "],["glm"," https://github.com/g-truc/glm/blob/0ceb2b755fb155d593854aefe3e45d416ce153a4/glm","glm.html#ortho","fn "],["glm"," https://github.com/g-truc/glm/blob/0ceb2b755fb155d593854aefe3e45d416ce153a4/glm","glm.html#ortho_zo","fn "],["glm"," fn scale(a *f32, v Vec3) *f32 { ","glm.html#scale","fn "],["glm"," multiplies two matrices ","glm.html#mult","fn "],["glm","","glm.html#rotate","fn "],["glm"," fn rotate_z(a *f32, rad f32) *f32 { ","glm.html#rotate_z","fn "],["glm","","glm.html#identity","fn "],["glm"," returns *f32 without allocation ","glm.html#identity2","fn "],["glm","","glm.html#identity3","fn "],["gx"," Color represents a 32 bit color value in sRGB format ","gx.html#Color","struct "],["gx","","gx.html#Color.+","fn (Color)"],["gx","","gx.html#Color.-","fn (Color)"],["gx","","gx.html#Color.*","fn (Color)"],["gx","","gx.html#Color./","fn (Color)"],["gx","","gx.html#Color.eq","fn (Color)"],["gx","","gx.html#Color.str","fn (Color)"],["gx"," rgba8 - convert a color value to an int in the RGBA8 order.  see https://develo","gx.html#Color.rgba8","fn (Color)"],["gx"," bgra8 - convert a color value to an int in the BGRA8 order.  see https://develo","gx.html#Color.bgra8","fn (Color)"],["gx"," abgr8 - convert a color value to an int in the ABGR8 order.  see https://develo","gx.html#Color.abgr8","fn (Color)"],["gx"," hex takes in a 32 bit integer and splits it into 4 byte values ","gx.html#hex","fn "],["gx","","gx.html#rgb","fn "],["gx","","gx.html#rgba","fn "],["gx","","gx.html#color_from_string","fn "],["gx","","gx.html#Image","struct "],["gx","","gx.html#Image.is_empty","fn (Image)"],["gx","","gx.html#HorizontalAlign","enum "],["gx","","gx.html#VerticalAlign","enum "],["gx","","gx.html#TextCfg","struct "],["hash","","hash.html#wyhash_c","fn "],["hash","","hash.html#wyhash64_c","fn "],["hash","","hash.html#sum64_string","fn "],["hash","","hash.html#sum64","fn "],["hash","","hash.html#wymum","fn "],["hash.crc32","","hash.crc32.html#Crc32","type "],["hash.crc32","","hash.crc32.html#Crc32.checksum","fn (Crc32)"],["hash.crc32"," pass the polynomial to use ","hash.crc32.html#new","fn "],["hash.crc32"," calculate crc32 using ieee ","hash.crc32.html#sum","fn "],["hash.fnv1a","","hash.fnv1a.html#sum32_string","fn "],["hash.fnv1a","","hash.fnv1a.html#sum32","fn "],["hash.fnv1a","","hash.fnv1a.html#sum64_string","fn "],["hash.fnv1a","","hash.fnv1a.html#sum64","fn "],["io"," BufferedReaderConfig are options that can be given to a reader ","io.html#BufferedReaderConfig","struct "],["io"," new_buffered_reader creates new BufferedReader ","io.html#new_buffered_reader","fn "],["io","","io.html#BufferedReader","type "],["io"," read fufills the Reader interface ","io.html#BufferedReader.read","fn (BufferedReader)"],["io","","io.html#BufferedReader.free","fn (BufferedReader)"],["io"," end_of_stream returns whether the end of the stream was reached ","io.html#BufferedReader.end_of_stream","fn (BufferedReader)"],["io"," read_line attempts to read a line from the buffered reader  it will read until ","io.html#BufferedReader.read_line","fn (BufferedReader)"],["io","","io.html#cp","fn "],["io"," new_multi_writer returns a Writer that writes to all writers. The write  functi","io.html#new_multi_writer","fn "],["io"," MultiWriter writes to all its writers. ","io.html#MultiWriter","struct "],["io"," write writes to all writers of the MultiWriter. Returns the length of bytes  wr","io.html#MultiWriter.write","fn (MultiWriter)"],["io"," Reader represents a stream of data that can be read ","io.html#Reader","interface "],["io"," make_reader is a temp that converts a type to a reader  (e.g. for use in struct","io.html#make_reader","fn "],["io"," ReadAllConfig allows options to be passed for the behaviour  of read_all ","io.html#ReadAllConfig","struct "],["io"," read_all reads all bytes from a reader until either a 0 length read  or if read","io.html#read_all","fn "],["io"," read_any reads any available bytes from a reader  (until the reader returns a r","io.html#read_any","fn "],["io"," ReaderWriter represents a stream that can be read from and wrote to ","io.html#ReaderWriter","interface "],["io","","io.html#ReaderWriterImpl","type "],["io","","io.html#ReaderWriterImpl.read","fn (ReaderWriterImpl)"],["io","","io.html#ReaderWriterImpl.write","fn (ReaderWriterImpl)"],["io"," make_readerwriter takes a rstream and a wstream and makes  an rwstream with the","io.html#make_readerwriter","fn "],["io"," Writer represents a stream of data that can be wrote to ","io.html#Writer","interface "],["io"," RandomWriter represents a stream of data that can be wrote to  at a random pos ","io.html#RandomWriter","interface "],["io.util","","io.util.html#TempFileOptions","struct "],["io.util"," temp_file returns an uniquely named, open, writable, `os.File` and it's path ","io.util.html#temp_file","fn "],["io.util","","io.util.html#TempDirOptions","struct "],["io.util"," temp_dir returns an uniquely named, writable, directory path ","io.util.html#temp_dir","fn "],["json","","json.html#decode","fn "],["json","","json.html#encode","fn "],["json","","json.html#encode_pretty","fn "],["log"," Level defines possible log levels used by `Log` ","log.html#Level","enum "],["log","","log.html#LogTarget","enum "],["log"," Log represents a logging object ","log.html#Log","struct "],["log"," set_level sets the internal logging to `level`. ","log.html#Log.set_level","fn (Log)"],["log"," set_output_level sets the internal logging output to `level`. ","log.html#Log.set_output_level","fn (Log)"],["log"," set_full_logpath sets the output label and output path from `full_log_path`. ","log.html#Log.set_full_logpath","fn (Log)"],["log"," set_output_label sets the `label` for the output. ","log.html#Log.set_output_label","fn (Log)"],["log"," set_output_path sets the file to which output is logged to. ","log.html#Log.set_output_path","fn (Log)"],["log"," log_to_console_too turns on logging to the console too, in addition to logging ","log.html#Log.log_to_console_too","fn (Log)"],["log"," flush writes the log file content to disk. ","log.html#Log.flush","fn (Log)"],["log"," close closes the log file. ","log.html#Log.close","fn (Log)"],["log"," send_output writes log line `s` with `level` to either the log file or the cons","log.html#Log.send_output","fn (Log)"],["log"," fatal logs line `s` via `send_output` if `Log.level` is greater than or equal t","log.html#Log.fatal","fn (Log)"],["log"," error logs line `s` via `send_output` if `Log.level` is greater than or equal t","log.html#Log.error","fn (Log)"],["log"," warn logs line `s` via `send_output` if `Log.level` is greater than or equal to","log.html#Log.warn","fn (Log)"],["log"," info logs line `s` via `send_output` if `Log.level` is greater than or equal to","log.html#Log.info","fn (Log)"],["log"," debug logs line `s` via `send_output` if `Log.level` is greater than or equal t","log.html#Log.debug","fn (Log)"],["math"," inf returns positive infinity if sign >= 0, negative infinity if sign < 0. ","math.html#inf","fn "],["math"," nan returns an IEEE 754 ``not-a-number'' value. ","math.html#nan","fn "],["math"," is_nan reports whether f is an IEEE 754 ``not-a-number'' value. ","math.html#is_nan","fn "],["math"," is_inf reports whether f is an infinity, according to sign.  If sign > 0, is_in","math.html#is_inf","fn "],["math","","math.html#abs","fn "],["math"," acos calculates inverse cosine (arccosine). ","math.html#acos","fn "],["math"," asin calculates inverse sine (arcsine). ","math.html#asin","fn "],["math"," atan calculates inverse tangent (arctangent). ","math.html#atan","fn "],["math"," atan2 calculates inverse tangent with two arguments, returns the angle between ","math.html#atan2","fn "],["math"," cbrt calculates cubic root. ","math.html#cbrt","fn "],["math"," ceil returns the nearest f64 greater or equal to the provided value. ","math.html#ceil","fn "],["math"," cos calculates cosine. ","math.html#cos","fn "],["math"," cosf calculates cosine. (float32) ","math.html#cosf","fn "],["math"," cosh calculates hyperbolic cosine. ","math.html#cosh","fn "],["math"," exp calculates exponent of the number (math.pow(math.E, a)). ","math.html#exp","fn "],["math"," erf computes the error function value ","math.html#erf","fn "],["math"," erfc computes the complementary error function value ","math.html#erfc","fn "],["math"," exp2 returns the base-2 exponential function of a (math.pow(2, a)). ","math.html#exp2","fn "],["math"," floor returns the nearest f64 lower or equal of the provided value. ","math.html#floor","fn "],["math"," fmod returns the floating-point remainder of number / denom (rounded towards ze","math.html#fmod","fn "],["math"," gamma computes the gamma function value ","math.html#gamma","fn "],["math"," Returns hypotenuse of a right triangle. ","math.html#hypot","fn "],["math"," log calculates natural (base-e) logarithm of the provided value. ","math.html#log","fn "],["math"," log2 calculates base-2 logarithm of the provided value. ","math.html#log2","fn "],["math"," log10 calculates the common (base-10) logarithm of the provided value. ","math.html#log10","fn "],["math"," log_gamma computes the log-gamma function value ","math.html#log_gamma","fn "],["math"," log_n calculates base-N logarithm of the provided value. ","math.html#log_n","fn "],["math"," pow returns base raised to the provided power. ","math.html#pow","fn "],["math"," powf returns base raised to the provided power. (float32) ","math.html#powf","fn "],["math"," round returns the integer nearest to the provided value. ","math.html#round","fn "],["math"," sin calculates sine. ","math.html#sin","fn "],["math"," sinf calculates sine. (float32) ","math.html#sinf","fn "],["math"," sinh calculates hyperbolic sine. ","math.html#sinh","fn "],["math"," sqrt calculates square-root of the provided value. ","math.html#sqrt","fn "],["math"," sqrtf calculates square-root of the provided value. (float32) ","math.html#sqrtf","fn "],["math"," tan calculates tangent. ","math.html#tan","fn "],["math"," tanf calculates tangent. (float32) ","math.html#tanf","fn "],["math"," tanh calculates hyperbolic tangent. ","math.html#tanh","fn "],["math"," trunc rounds a toward zero, returning the nearest integral value that is not  l","math.html#trunc","fn "],["math"," aprox_sin returns an approximation of sin(a) made using lolremez ","math.html#aprox_sin","fn "],["math"," aprox_cos returns an approximation of sin(a) made using lolremez ","math.html#aprox_cos","fn "],["math"," copysign returns a value with the magnitude of x and the sign of y ","math.html#copysign","fn "],["math"," degrees convert from degrees to radians. ","math.html#degrees","fn "],["math"," digits returns an array of the digits of n in the given base. ","math.html#digits","fn "],["math","","math.html#fabs","fn "],["math"," gcd calculates greatest common (positive) divisor (or zero if a and b are both ","math.html#gcd","fn "],["math"," lcm calculates least common (non-negative) multiple. ","math.html#lcm","fn "],["math"," max returns the maximum value of the two provided. ","math.html#max","fn "],["math"," min returns the minimum value of the two provided. ","math.html#min","fn "],["math"," sign returns the corresponding sign -1.0, 1.0 of the provided number.  if n is ","math.html#sign","fn "],["math"," signi returns the corresponding sign -1.0, 1.0 of the provided number. ","math.html#signi","fn "],["math"," radians convert from radians to degrees. ","math.html#radians","fn "],["math"," signbit returns a value with the boolean representation of the sign for x ","math.html#signbit","fn "],["math"," f32_bits returns the IEEE 754 binary representation of f,  with the sign bit of","math.html#f32_bits","fn "],["math"," f32_from_bits returns the floating-point number corresponding  to the IEEE 754 ","math.html#f32_from_bits","fn "],["math"," f64_bits returns the IEEE 754 binary representation of f,  with the sign bit of","math.html#f64_bits","fn "],["math"," f64_from_bits returns the floating-point number corresponding  to the IEEE 754 ","math.html#f64_from_bits","fn "],["math.big","","math.big.html#new","fn "],["math.big"," conversion actions to/from big numbers:  from_int converts an ordinary int numb","math.big.html#from_int","fn "],["math.big"," from_u64 converts an ordinary u64 number `u` to big.Number ","math.big.html#from_u64","fn "],["math.big"," from_hex_string converts a hex string to big.Number ","math.big.html#from_hex_string","fn "],["math.big"," from_string converts a decimal string to big.Number ","math.big.html#from_string","fn "],["math.big","","math.big.html#Number","type "],["math.big"," .int() converts (a small) big.Number `n` to an ordinary integer. ","math.big.html#Number.int","fn (Number)"],["math.big"," .str returns a decimal representation of the big unsigned integer number n. ","math.big.html#Number.str","fn (Number)"],["math.big"," .hexstr returns a hexadecimal representation of the bignum `n` ","math.big.html#Number.hexstr","fn (Number)"],["math.big"," //////////////////////////////////////////////////////////  overloaded ops for ","math.big.html#Number.+","fn (Number)"],["math.big","","math.big.html#Number.-","fn (Number)"],["math.big","","math.big.html#Number.*","fn (Number)"],["math.big","","math.big.html#Number./","fn (Number)"],["math.big","","math.big.html#Number.%","fn (Number)"],["math.big","","math.big.html#Number.is_zero","fn (Number)"],["math.big","","math.big.html#Number.inc","fn (Number)"],["math.big","","math.big.html#Number.dec","fn (Number)"],["math.big","","math.big.html#Number.isqrt","fn (Number)"],["math.big","","math.big.html#Number.lshift","fn (Number)"],["math.big","","math.big.html#Number.rshift","fn (Number)"],["math.big","","math.big.html#Number.clone","fn (Number)"],["math.big"," bytes returns an array of the bytes for the number `n`,  in little endian forma","math.big.html#Number.bytes","fn (Number)"],["math.big"," bytes_trimmed returns an array of the bytes for the number `n`,  in little endi","math.big.html#Number.bytes_trimmed","fn (Number)"],["math.big","","math.big.html#divmod","fn "],["math.big"," ////////////////////////////////////////////////////////// ","math.big.html#cmp","fn "],["math.big","","math.big.html#pow","fn "],["math.big"," ////////////////////////////////////////////////////////// ","math.big.html#b_and","fn "],["math.big","","math.big.html#b_or","fn "],["math.big","","math.big.html#b_xor","fn "],["math.big"," ////////////////////////////////////////////////////////// ","math.big.html#factorial","fn "],["math.big","","math.big.html#fact","fn "],["math.bits"," --- LeadingZeros ---  leading_zeros_8 returns the number of leading zero bits i","math.bits.html#leading_zeros_8","fn "],["math.bits"," leading_zeros_16 returns the number of leading zero bits in x; the result is 16","math.bits.html#leading_zeros_16","fn "],["math.bits"," leading_zeros_32 returns the number of leading zero bits in x; the result is 32","math.bits.html#leading_zeros_32","fn "],["math.bits"," leading_zeros_64 returns the number of leading zero bits in x; the result is 64","math.bits.html#leading_zeros_64","fn "],["math.bits"," --- TrailingZeros ---  trailing_zeros_8 returns the number of trailing zero bit","math.bits.html#trailing_zeros_8","fn "],["math.bits"," trailing_zeros_16 returns the number of trailing zero bits in x; the result is ","math.bits.html#trailing_zeros_16","fn "],["math.bits"," trailing_zeros_32 returns the number of trailing zero bits in x; the result is ","math.bits.html#trailing_zeros_32","fn "],["math.bits"," trailing_zeros_64 returns the number of trailing zero bits in x; the result is ","math.bits.html#trailing_zeros_64","fn "],["math.bits"," --- OnesCount ---  ones_count_8 returns the number of one bits (\"population co","math.bits.html#ones_count_8","fn "],["math.bits"," ones_count_16 returns the number of one bits (\"population count\") in x. ","math.bits.html#ones_count_16","fn "],["math.bits"," ones_count_32 returns the number of one bits (\"population count\") in x. ","math.bits.html#ones_count_32","fn "],["math.bits"," ones_count_64 returns the number of one bits (\"population count\") in x. ","math.bits.html#ones_count_64","fn "],["math.bits"," --- RotateLeft ---  rotate_left_8 returns the value of x rotated left by (k mod","math.bits.html#rotate_left_8","fn "],["math.bits"," rotate_left_16 returns the value of x rotated left by (k mod 16) bits.  To rota","math.bits.html#rotate_left_16","fn "],["math.bits"," rotate_left_32 returns the value of x rotated left by (k mod 32) bits.  To rota","math.bits.html#rotate_left_32","fn "],["math.bits"," rotate_left_64 returns the value of x rotated left by (k mod 64) bits.  To rota","math.bits.html#rotate_left_64","fn "],["math.bits"," --- Reverse ---  reverse_8 returns the value of x with its bits in reversed ord","math.bits.html#reverse_8","fn "],["math.bits"," reverse_16 returns the value of x with its bits in reversed order. ","math.bits.html#reverse_16","fn "],["math.bits"," reverse_32 returns the value of x with its bits in reversed order. ","math.bits.html#reverse_32","fn "],["math.bits"," reverse_64 returns the value of x with its bits in reversed order. ","math.bits.html#reverse_64","fn "],["math.bits"," --- ReverseBytes ---  reverse_bytes_16 returns the value of x with its bytes in","math.bits.html#reverse_bytes_16","fn "],["math.bits"," reverse_bytes_32 returns the value of x with its bytes in reversed order.   Thi","math.bits.html#reverse_bytes_32","fn "],["math.bits"," reverse_bytes_64 returns the value of x with its bytes in reversed order.   Thi","math.bits.html#reverse_bytes_64","fn "],["math.bits"," --- Len ---  len_8 returns the minimum number of bits required to represent x; ","math.bits.html#len_8","fn "],["math.bits"," len_16 returns the minimum number of bits required to represent x; the result i","math.bits.html#len_16","fn "],["math.bits"," len_32 returns the minimum number of bits required to represent x; the result i","math.bits.html#len_32","fn "],["math.bits"," len_64 returns the minimum number of bits required to represent x; the result i","math.bits.html#len_64","fn "],["math.bits"," --- Add with carry ---  Add returns the sum with carry of x, y and carry: sum =","math.bits.html#add_32","fn "],["math.bits"," add_64 returns the sum with carry of x, y and carry: sum = x + y + carry.  The ","math.bits.html#add_64","fn "],["math.bits"," --- Subtract with borrow ---  Sub returns the difference of x, y and borrow: di","math.bits.html#sub_32","fn "],["math.bits"," sub_64 returns the difference of x, y and borrow: diff = x - y - borrow.  The b","math.bits.html#sub_64","fn "],["math.bits"," mul_32 returns the 64-bit product of x and y: (hi, lo) = x * y  with the produc","math.bits.html#mul_32","fn "],["math.bits"," mul_64 returns the 128-bit product of x and y: (hi, lo) = x * y  with the produ","math.bits.html#mul_64","fn "],["math.bits"," --- Full-width divide ---  div_32 returns the quotient and remainder of (hi, lo","math.bits.html#div_32","fn "],["math.bits"," div_64 returns the quotient and remainder of (hi, lo) divided by y:  quo = (hi,","math.bits.html#div_64","fn "],["math.bits"," rem_32 returns the remainder of (hi, lo) divided by y. Rem32 panics  for y == 0","math.bits.html#rem_32","fn "],["math.bits"," rem_64 returns the remainder of (hi, lo) divided by y. Rem64 panics  for y == 0","math.bits.html#rem_64","fn "],["math.complex","","math.complex.html#Complex","struct "],["math.complex"," To String method ","math.complex.html#Complex.str","fn (Complex)"],["math.complex"," Complex Modulus value  mod() and abs() return the same ","math.complex.html#Complex.abs","fn (Complex)"],["math.complex","","math.complex.html#Complex.mod","fn (Complex)"],["math.complex"," Complex Angle ","math.complex.html#Complex.angle","fn (Complex)"],["math.complex"," Complex Addition c1 + c2 ","math.complex.html#Complex.+","fn (Complex)"],["math.complex"," Complex Substraction c1 - c2 ","math.complex.html#Complex.-","fn (Complex)"],["math.complex"," Complex Multiplication c1 * c2 ","math.complex.html#Complex.*","fn (Complex)"],["math.complex"," Complex Division c1 / c2 ","math.complex.html#Complex./","fn (Complex)"],["math.complex"," Complex Addition c1.add(c2) ","math.complex.html#Complex.add","fn (Complex)"],["math.complex"," Complex Subtraction c1.subtract(c2) ","math.complex.html#Complex.subtract","fn (Complex)"],["math.complex"," Complex Multiplication c1.multiply(c2) ","math.complex.html#Complex.multiply","fn (Complex)"],["math.complex"," Complex Division c1.divide(c2) ","math.complex.html#Complex.divide","fn (Complex)"],["math.complex"," Complex Conjugate ","math.complex.html#Complex.conjugate","fn (Complex)"],["math.complex"," Complex Additive Inverse  Based on  http://tutorial.math.lamar.edu/Extras/Compl","math.complex.html#Complex.addinv","fn (Complex)"],["math.complex"," Complex Multiplicative Inverse  Based on  http://tutorial.math.lamar.edu/Extras","math.complex.html#Complex.mulinv","fn (Complex)"],["math.complex"," Complex Power  Based on  https://www.khanacademy.org/math/precalculus/imaginary","math.complex.html#Complex.pow","fn (Complex)"],["math.complex"," Complex nth root ","math.complex.html#Complex.root","fn (Complex)"],["math.complex"," Complex Exponential  Using Euler's Identity  Based on  https://www.math.wisc.ed","math.complex.html#Complex.exp","fn (Complex)"],["math.complex"," Complex Natural Logarithm  Based on  http://www.chemistrylearning.com/logarithm","math.complex.html#Complex.ln","fn (Complex)"],["math.complex"," Complex Log Base Complex  Based on  http://www.milefoot.com/math/complex/summar","math.complex.html#Complex.log","fn (Complex)"],["math.complex"," Complex Argument  Based on  http://mathworld.wolfram.com/ComplexArgument.html ","math.complex.html#Complex.arg","fn (Complex)"],["math.complex"," Complex raised to Complex Power  Based on  http://mathworld.wolfram.com/Complex","math.complex.html#Complex.cpow","fn (Complex)"],["math.complex"," Complex Sin  Based on  http://www.milefoot.com/math/complex/functionsofi.htm ","math.complex.html#Complex.sin","fn (Complex)"],["math.complex"," Complex Cosine  Based on  http://www.milefoot.com/math/complex/functionsofi.htm","math.complex.html#Complex.cos","fn (Complex)"],["math.complex"," Complex Tangent  Based on  http://www.milefoot.com/math/complex/functionsofi.ht","math.complex.html#Complex.tan","fn (Complex)"],["math.complex"," Complex Cotangent  Based on  http://www.suitcaseofdreams.net/Trigonometric_Func","math.complex.html#Complex.cot","fn (Complex)"],["math.complex"," Complex Secant  Based on  http://www.suitcaseofdreams.net/Trigonometric_Functio","math.complex.html#Complex.sec","fn (Complex)"],["math.complex"," Complex Cosecant  Based on  http://www.suitcaseofdreams.net/Trigonometric_Funct","math.complex.html#Complex.csc","fn (Complex)"],["math.complex"," Complex Arc Sin / Sin Inverse  Based on  http://www.milefoot.com/math/complex/s","math.complex.html#Complex.asin","fn (Complex)"],["math.complex"," Complex Arc Consine / Consine Inverse  Based on  http://www.milefoot.com/math/c","math.complex.html#Complex.acos","fn (Complex)"],["math.complex"," Complex Arc Tangent / Tangent Inverse  Based on  http://www.milefoot.com/math/c","math.complex.html#Complex.atan","fn (Complex)"],["math.complex"," Complex Arc Cotangent / Cotangent Inverse  Based on  http://www.suitcaseofdream","math.complex.html#Complex.acot","fn (Complex)"],["math.complex"," Complex Arc Secant / Secant Inverse  Based on  http://www.suitcaseofdreams.net/","math.complex.html#Complex.asec","fn (Complex)"],["math.complex"," Complex Arc Cosecant / Cosecant Inverse  Based on  http://www.suitcaseofdreams.","math.complex.html#Complex.acsc","fn (Complex)"],["math.complex"," Complex Hyperbolic Sin  Based on  http://www.milefoot.com/math/complex/function","math.complex.html#Complex.sinh","fn (Complex)"],["math.complex"," Complex Hyperbolic Cosine  Based on  http://www.milefoot.com/math/complex/funct","math.complex.html#Complex.cosh","fn (Complex)"],["math.complex"," Complex Hyperbolic Tangent  Based on  http://www.milefoot.com/math/complex/func","math.complex.html#Complex.tanh","fn (Complex)"],["math.complex"," Complex Hyperbolic Cotangent  Based on  http://www.suitcaseofdreams.net/Hyperbo","math.complex.html#Complex.coth","fn (Complex)"],["math.complex"," Complex Hyperbolic Secant  Based on  http://www.suitcaseofdreams.net/Hyperbolic","math.complex.html#Complex.sech","fn (Complex)"],["math.complex"," Complex Hyperbolic Cosecant  Based on  http://www.suitcaseofdreams.net/Hyperbol","math.complex.html#Complex.csch","fn (Complex)"],["math.complex"," Complex Hyperbolic Arc Sin / Sin Inverse  Based on  http://www.suitcaseofdreams","math.complex.html#Complex.asinh","fn (Complex)"],["math.complex"," Complex Hyperbolic Arc Consine / Consine Inverse  Based on  http://www.suitcase","math.complex.html#Complex.acosh","fn (Complex)"],["math.complex"," Complex Hyperbolic Arc Tangent / Tangent Inverse  Based on  http://www.suitcase","math.complex.html#Complex.atanh","fn (Complex)"],["math.complex"," Complex Hyperbolic Arc Cotangent / Cotangent Inverse  Based on  http://www.suit","math.complex.html#Complex.acoth","fn (Complex)"],["math.complex"," Complex Hyperbolic Arc Secant / Secant Inverse  Based on  http://www.suitcaseof","math.complex.html#Complex.acsch","fn (Complex)"],["math.complex"," Complex Equals ","math.complex.html#Complex.equals","fn (Complex)"],["math.complex","","math.complex.html#complex","fn "],["math.factorial"," factorial calculates the factorial of the provided value. ","math.factorial.html#factorial","fn "],["math.factorial"," log_factorial calculates the log-factorial of the provided value. ","math.factorial.html#log_factorial","fn "],["math.fractions"," approximate returns a Fraction that approcimates the given value to  within the","math.fractions.html#approximate","fn "],["math.fractions"," approximate_with_eps returns a Fraction ","math.fractions.html#approximate_with_eps","fn "],["math.fractions"," A factory function for creating a Fraction, adds a boundary condition  to ensur","math.fractions.html#fraction","fn "],["math.fractions","","math.fractions.html#Fraction","type "],["math.fractions"," To String method ","math.fractions.html#Fraction.str","fn (Fraction)"],["math.fractions"," Fraction add using operator overloading ","math.fractions.html#Fraction.+","fn (Fraction)"],["math.fractions"," Fraction subtract using operator overloading ","math.fractions.html#Fraction.-","fn (Fraction)"],["math.fractions"," Fraction multiply using operator overloading ","math.fractions.html#Fraction.*","fn (Fraction)"],["math.fractions"," Fraction divide using operator overloading ","math.fractions.html#Fraction./","fn (Fraction)"],["math.fractions"," Fraction negate method ","math.fractions.html#Fraction.negate","fn (Fraction)"],["math.fractions"," Fraction reciprocal method ","math.fractions.html#Fraction.reciprocal","fn (Fraction)"],["math.fractions"," Fraction method which reduces the fraction ","math.fractions.html#Fraction.reduce","fn (Fraction)"],["math.fractions"," f64 converts the Fraction to 64-bit floating point ","math.fractions.html#Fraction.f64","fn (Fraction)"],["math.fractions"," +-----------------------------+  | Public comparison functions |  +------------","math.fractions.html#Fraction.equals","fn (Fraction)"],["math.fractions"," ge returns true if f1 >= f2 ","math.fractions.html#Fraction.ge","fn (Fraction)"],["math.fractions"," gt returns true if f1 > f2 ","math.fractions.html#Fraction.gt","fn (Fraction)"],["math.fractions"," le returns true if f1 <= f2 ","math.fractions.html#Fraction.le","fn (Fraction)"],["math.fractions"," lt returns true if f1 < f2 ","math.fractions.html#Fraction.lt","fn (Fraction)"],["math.mathutil","","math.mathutil.html#min","fn "],["math.mathutil","","math.mathutil.html#max","fn "],["math.mathutil","","math.mathutil.html#abs","fn "],["math.stats"," TODO: Implement all of them with generics  This module defines the following st","math.stats.html#freq","fn "],["math.stats"," Measure of Central Tendancy  Mean of the given input array  Based on  https://w","math.stats.html#mean","fn "],["math.stats"," Measure of Central Tendancy  Geometric Mean of the given input array  Based on ","math.stats.html#geometric_mean","fn "],["math.stats"," Measure of Central Tendancy  Harmonic Mean of the given input array  Based on  ","math.stats.html#harmonic_mean","fn "],["math.stats"," Measure of Central Tendancy  Median of the given input array ( input array is a","math.stats.html#median","fn "],["math.stats"," Measure of Central Tendancy  Mode of the given input array  Based on  https://w","math.stats.html#mode","fn "],["math.stats"," Root Mean Square of the given input array  Based on  https://en.wikipedia.org/w","math.stats.html#rms","fn "],["math.stats"," Measure of Dispersion / Spread  Population Variance of the given input array  B","math.stats.html#population_variance","fn "],["math.stats"," Measure of Dispersion / Spread  Sample Variance of the given input array  Based","math.stats.html#sample_variance","fn "],["math.stats"," Measure of Dispersion / Spread  Population Standard Deviation of the given inpu","math.stats.html#population_stddev","fn "],["math.stats"," Measure of Dispersion / Spread  Sample Standard Deviation of the given input ar","math.stats.html#sample_stddev","fn "],["math.stats"," Measure of Dispersion / Spread  Mean Absolute Deviation of the given input arra","math.stats.html#mean_absdev","fn "],["math.stats"," Minimum of the given input array ","math.stats.html#min","fn "],["math.stats"," Maximum of the given input array ","math.stats.html#max","fn "],["math.stats"," Measure of Dispersion / Spread  Range ( Maximum - Minimum ) of the given input ","math.stats.html#range","fn "],["math.util"," imin returns the smallest of two integer values ","math.util.html#imin","fn "],["math.util"," imin returns the biggest of two integer values ","math.util.html#imax","fn "],["math.util"," iabs returns an integer as absolute value ","math.util.html#iabs","fn "],["math.util"," umin returns the smallest of two u32 values ","math.util.html#umin","fn "],["math.util"," umax returns the biggest of two u32 values ","math.util.html#umax","fn "],["math.util"," uabs returns an u32 as absolute value ","math.util.html#uabs","fn "],["math.util"," fmin_32 returns the smallest `f32` of input `a` and `b`.  Example: assert fmin_","math.util.html#fmin_32","fn "],["math.util"," fmax_32 returns the largest `f32` of input `a` and `b`.  Example: assert fmax_3","math.util.html#fmax_32","fn "],["math.util"," fabs_32 returns the absolute value of `a` as a `f32` value.  Example: assert fa","math.util.html#fabs_32","fn "],["math.util"," fmin_64 returns the smallest `f64` of input `a` and `b`.  Example: assert fmin_","math.util.html#fmin_64","fn "],["math.util"," fmax_64 returns the largest `f64` of input `a` and `b`.  Example: assert fmax_6","math.util.html#fmax_64","fn "],["math.util"," fabs_64 returns the absolute value of `a` as a `f64` value.  Example: assert fa","math.util.html#fabs_64","fn "],["mssql","","mssql.html#Config","struct "],["mssql","","mssql.html#Config.get_conn_str","fn (Config)"],["mssql","","mssql.html#Connection","struct "],["mssql"," connect to db ","mssql.html#Connection.connect","fn (Connection)"],["mssql"," close - closes the connection. ","mssql.html#Connection.close","fn (Connection)"],["mssql"," query executes a sql query ","mssql.html#Connection.query","fn (Connection)"],["mssql","","mssql.html#Row","struct "],["mssql","","mssql.html#Result","struct "],["mysql","","mysql.html#FieldType","enum "],["mysql","","mysql.html#FieldType.str","fn (FieldType)"],["mysql"," Values for the capabilities flag bitmask used by the MySQL protocol.  See more ","mysql.html#ConnectionFlag","enum "],["mysql"," TODO: Documentation ","mysql.html#Connection","struct "],["mysql"," connect - create a new connection to the MySQL server. ","mysql.html#Connection.connect","fn (Connection)"],["mysql"," query - make an SQL query and receive the results.  `query()` cannot be used fo","mysql.html#Connection.query","fn (Connection)"],["mysql"," real_query - make an SQL query and receive the results.  `real_query()` can be ","mysql.html#Connection.real_query","fn (Connection)"],["mysql"," select_db - change the default database for database queries. ","mysql.html#Connection.select_db","fn (Connection)"],["mysql"," change_user - change the mysql user for the connection.  Passing an empty strin","mysql.html#Connection.change_user","fn (Connection)"],["mysql"," affected_rows - return the number of rows changed/deleted/inserted  by the last","mysql.html#Connection.affected_rows","fn (Connection)"],["mysql"," autocommit - turns on/off the auto-committing mode for the connection.  When it","mysql.html#Connection.autocommit","fn (Connection)"],["mysql"," tables - returns a list of the names of the tables in the current database,  th","mysql.html#Connection.tables","fn (Connection)"],["mysql"," escape_string - creates a legal SQL string for use in an SQL statement.  The `s","mysql.html#Connection.escape_string","fn (Connection)"],["mysql"," set_option - sets extra connect options that affect the behavior of  a connecti","mysql.html#Connection.set_option","fn (Connection)"],["mysql"," get_option - return the value of an option, settable by `set_option`.  https://","mysql.html#Connection.get_option","fn (Connection)"],["mysql"," refresh - flush the tables or caches, or resets replication server  information","mysql.html#Connection.refresh","fn (Connection)"],["mysql"," reset - resets the connection, and clear the session state. ","mysql.html#Connection.reset","fn (Connection)"],["mysql"," ping - pings a server connection, or tries to reconnect if the connection  has ","mysql.html#Connection.ping","fn (Connection)"],["mysql"," close - closes the connection. ","mysql.html#Connection.close","fn (Connection)"],["mysql"," info - returns information about the most recently executed query.  See more on","mysql.html#Connection.info","fn (Connection)"],["mysql"," get_host_info - returns a string describing the type of connection in use,  inc","mysql.html#Connection.get_host_info","fn (Connection)"],["mysql"," get_server_info - returns a string representing the MySQL server version.  For ","mysql.html#Connection.get_server_info","fn (Connection)"],["mysql"," get_server_version - returns an integer, representing the MySQL server  version","mysql.html#Connection.get_server_version","fn (Connection)"],["mysql"," dump_debug_info - instructs the server to write debugging information  to the e","mysql.html#Connection.dump_debug_info","fn (Connection)"],["mysql"," get_client_info - returns client version information as a string. ","mysql.html#get_client_info","fn "],["mysql"," get_client_version - returns the client version information as an integer. ","mysql.html#get_client_version","fn "],["mysql"," debug - does a `DBUG_PUSH` with the given string.  `debug()` uses the Fred Fish","mysql.html#debug","fn "],["mysql","","mysql.html#Result","struct "],["mysql"," fetch_row - fetches the next row from a result. ","mysql.html#Result.fetch_row","fn (Result)"],["mysql"," n_rows - returns the number of rows from a result. ","mysql.html#Result.n_rows","fn (Result)"],["mysql"," n_fields - returns the number of columns from a result. ","mysql.html#Result.n_fields","fn (Result)"],["mysql"," rows - returns array of rows, each containing an array of values,  one for each","mysql.html#Result.rows","fn (Result)"],["mysql"," maps - returns an array of maps, each containing a set of  field name: field va","mysql.html#Result.maps","fn (Result)"],["mysql"," fields - returns an array of fields/columns.  The definitions apply primarily f","mysql.html#Result.fields","fn (Result)"],["mysql"," free - frees the memory used by a result ","mysql.html#Result.free","fn (Result)"],["mysql","","mysql.html#Row","struct "],["mysql","","mysql.html#Field","struct "],["mysql"," str - serializes the field ","mysql.html#Field.str","fn (Field)"],["net"," SocketType are the available sockets ","net.html#SocketType","enum "],["net"," AddrFamily are the available address families ","net.html#AddrFamily","enum "],["net","","net.html#C.fd_set","struct "],["net","","net.html#Addr","type "],["net","","net.html#Addr.family","fn (Addr)"],["net","","net.html#resolve_addrs","fn "],["net","","net.html#resolve_addrs_fuzzy","fn "],["net","","net.html#resolve_ipaddrs","fn "],["net","","net.html#addr_from_socket_handle","fn "],["net","","net.html#socket_error","fn "],["net","","net.html#wrap_error","fn "],["net"," WsaError is all of the socket errors that WSA provides from WSAGetLastError ","net.html#WsaError","enum "],["net"," wsa_error casts an int to its WsaError value ","net.html#wsa_error","fn "],["net","","net.html#SocketOption","enum "],["net","","net.html#TcpConn","struct "],["net","","net.html#TcpConn.addr","fn (TcpConn)"],["net","","net.html#TcpConn.close","fn (TcpConn)"],["net","","net.html#TcpConn.peer_addr","fn (TcpConn)"],["net","","net.html#TcpConn.peer_ip","fn (TcpConn)"],["net","","net.html#TcpConn.read","fn (TcpConn)"],["net","","net.html#TcpConn.read_deadline","fn (TcpConn)"],["net"," read_line is a *simple*, *non customizable*, blocking line reader.  It will *al","net.html#TcpConn.read_line","fn (TcpConn)"],["net","","net.html#TcpConn.read_ptr","fn (TcpConn)"],["net","","net.html#TcpConn.read_timeout","fn (TcpConn)"],["net","","net.html#TcpConn.set_read_deadline","fn (TcpConn)"],["net","","net.html#TcpConn.set_read_timeout","fn (TcpConn)"],["net","","net.html#TcpConn.set_write_deadline","fn (TcpConn)"],["net","","net.html#TcpConn.set_write_timeout","fn (TcpConn)"],["net","","net.html#TcpConn.str","fn (TcpConn)"],["net","","net.html#TcpConn.wait_for_read","fn (TcpConn)"],["net","","net.html#TcpConn.wait_for_write","fn (TcpConn)"],["net"," write blocks and attempts to write all data ","net.html#TcpConn.write","fn (TcpConn)"],["net","","net.html#TcpConn.write_deadline","fn (TcpConn)"],["net"," write_ptr blocks and attempts to write all data ","net.html#TcpConn.write_ptr","fn (TcpConn)"],["net"," write_str blocks and attempts to write all data ","net.html#TcpConn.write_str","fn (TcpConn)"],["net"," write_string blocks and attempts to write all data ","net.html#TcpConn.write_string","fn (TcpConn)"],["net","","net.html#TcpConn.write_timeout","fn (TcpConn)"],["net","","net.html#dial_tcp","fn "],["net","","net.html#TcpListener","struct "],["net","","net.html#TcpListener.accept","fn (TcpListener)"],["net","","net.html#TcpListener.accept_deadline","fn (TcpListener)"],["net","","net.html#TcpListener.set_accept_deadline","fn (TcpListener)"],["net","","net.html#TcpListener.accept_timeout","fn (TcpListener)"],["net","","net.html#TcpListener.set_accept_timeout","fn (TcpListener)"],["net","","net.html#TcpListener.wait_for_accept","fn (TcpListener)"],["net","","net.html#TcpListener.close","fn (TcpListener)"],["net","","net.html#TcpListener.addr","fn (TcpListener)"],["net","","net.html#listen_tcp","fn "],["net","","net.html#TcpSocket","type "],["net","","net.html#TcpSocket.set_option_bool","fn (TcpSocket)"],["net","","net.html#TcpSocket.set_dualstack","fn (TcpSocket)"],["net","","net.html#TcpSocket.set_option_int","fn (TcpSocket)"],["net"," address gets the address of a socket ","net.html#TcpSocket.address","fn (TcpSocket)"],["net","","net.html#UdpConn","struct "],["net"," pub fn dial_udp(laddr string, raddr string) ?&UdpConn {  	local := resolve_addr","net.html#UdpConn.write_ptr","fn (UdpConn)"],["net","","net.html#UdpConn.write","fn (UdpConn)"],["net","","net.html#UdpConn.write_str","fn (UdpConn)"],["net","","net.html#UdpConn.write_string","fn (UdpConn)"],["net","","net.html#UdpConn.write_to_ptr","fn (UdpConn)"],["net"," write_to blocks and writes the buf to the remote addr specified ","net.html#UdpConn.write_to","fn (UdpConn)"],["net"," write_to_string blocks and writes the buf to the remote addr specified ","net.html#UdpConn.write_to_string","fn (UdpConn)"],["net"," read reads from the socket into buf up to buf.len returning the number of bytes","net.html#UdpConn.read","fn (UdpConn)"],["net","","net.html#UdpConn.read_deadline","fn (UdpConn)"],["net","","net.html#UdpConn.set_read_deadline","fn (UdpConn)"],["net","","net.html#UdpConn.write_deadline","fn (UdpConn)"],["net","","net.html#UdpConn.set_write_deadline","fn (UdpConn)"],["net","","net.html#UdpConn.read_timeout","fn (UdpConn)"],["net","","net.html#UdpConn.set_read_timeout","fn (UdpConn)"],["net","","net.html#UdpConn.write_timeout","fn (UdpConn)"],["net","","net.html#UdpConn.set_write_timeout","fn (UdpConn)"],["net","","net.html#UdpConn.wait_for_read","fn (UdpConn)"],["net","","net.html#UdpConn.wait_for_write","fn (UdpConn)"],["net","","net.html#UdpConn.str","fn (UdpConn)"],["net","","net.html#UdpConn.close","fn (UdpConn)"],["net","","net.html#dial_udp","fn "],["net","","net.html#listen_udp","fn "],["net","","net.html#UdpSocket","type "],["net","","net.html#UdpSocket.set_option_bool","fn (UdpSocket)"],["net","","net.html#UdpSocket.set_dualstack","fn (UdpSocket)"],["net"," validate_port checks whether a port is valid  and returns the port or an error ","net.html#validate_port","fn "],["net"," split address splits an address into its host name and its port ","net.html#split_address","fn "],["net.ftp","","net.ftp.html#new","fn "],["net.ftp","","net.ftp.html#FTP","type "],["net.ftp","","net.ftp.html#FTP.connect","fn (FTP)"],["net.ftp","","net.ftp.html#FTP.login","fn (FTP)"],["net.ftp","","net.ftp.html#FTP.close","fn (FTP)"],["net.ftp","","net.ftp.html#FTP.pwd","fn (FTP)"],["net.ftp","","net.ftp.html#FTP.cd","fn (FTP)"],["net.ftp","","net.ftp.html#FTP.dir","fn (FTP)"],["net.ftp","","net.ftp.html#FTP.get","fn (FTP)"],["net.html"," The W3C Document Object Model (DOM) is a platform and language-neutral  interfa","net.html.html#DocumentObjectModel","struct "],["net.html"," get_tag_by_attribute_value retrieves all the tags in the document that has the ","net.html.html#DocumentObjectModel.get_tag_by_attribute_value","fn (DocumentObjectModel)"],["net.html"," get_tag retrieves all the tags in the document that has the given tag name. ","net.html.html#DocumentObjectModel.get_tag","fn (DocumentObjectModel)"],["net.html"," get_tag_by_attribute retrieves all the tags in the document that has the given ","net.html.html#DocumentObjectModel.get_tag_by_attribute","fn (DocumentObjectModel)"],["net.html"," get_root returns the root of the document. ","net.html.html#DocumentObjectModel.get_root","fn (DocumentObjectModel)"],["net.html"," get_tags returns all of the tags stored in the document. ","net.html.html#DocumentObjectModel.get_tags","fn (DocumentObjectModel)"],["net.html"," parse parses and returns the DOM from the given text. ","net.html.html#parse","fn "],["net.html"," parse_file parses and returns the DOM from the contents of a file. ","net.html.html#parse_file","fn "],["net.html"," Parser is responsible for reading the HTML strings and converting them into a `","net.html.html#Parser","struct "],["net.html"," This function is used to add a tag for the parser ignore it's content.  For exa","net.html.html#Parser.add_code_tag","fn (Parser)"],["net.html"," split_parse parses the HTML fragment ","net.html.html#Parser.split_parse","fn (Parser)"],["net.html"," parse_html parses the given HTML string ","net.html.html#Parser.parse_html","fn (Parser)"],["net.html"," finalize finishes the parsing stage . ","net.html.html#Parser.finalize","fn (Parser)"],["net.html"," get_dom returns the parser's current DOM representation. ","net.html.html#Parser.get_dom","fn (Parser)"],["net.html"," Tag holds the information of an HTML tag. ","net.html.html#Tag","struct "],["net.html"," text returns the text contents of the tag. ","net.html.html#Tag.text","fn (Tag)"],["net.html","","net.html.html#Tag.str","fn (Tag)"],["net.http","","net.http.html#Cookie","struct "],["net.http"," Returns the serialization of the cookie for use in a Cookie header  (if only Na","net.http.html#Cookie.str","fn (Cookie)"],["net.http"," SameSite allows a server to define a cookie attribute making it impossible for ","net.http.html#SameSite","enum "],["net.http"," Parses all \"Set-Cookie\" values from the header `h` and  returns the successfu","net.http.html#read_set_cookies","fn "],["net.http"," Parses all \"Cookie\" values from the header `h` and  returns the successfully ","net.http.html#read_cookies","fn "],["net.http"," https://tools.ietf.org/html/rfc6265#section-4.1.1  cookie-value      = *cookie-","net.http.html#sanitize_cookie_value","fn "],["net.http","","net.http.html#is_cookie_domain_name","fn "],["net.http","","net.http.html#download_file","fn "],["net.http"," CommonHeader is an enum of the most common HTTP headers ","net.http.html#CommonHeader","enum "],["net.http","","net.http.html#CommonHeader.str","fn (CommonHeader)"],["net.http","","net.http.html#Header","struct "],["net.http","","net.http.html#Header.free","fn (Header)"],["net.http"," add appends a value to the header key. ","net.http.html#Header.add","fn (Header)"],["net.http"," add_custom appends a value to a custom header key. This function will  return a","net.http.html#Header.add_custom","fn (Header)"],["net.http"," add_map appends the value for each header key. ","net.http.html#Header.add_map","fn (Header)"],["net.http"," add_custom_map appends the value for each custom header key. ","net.http.html#Header.add_custom_map","fn (Header)"],["net.http"," set sets the key-value pair. This function will clear any other values  that ex","net.http.html#Header.set","fn (Header)"],["net.http"," set_custom sets the key-value pair for a custom header key. This  function will","net.http.html#Header.set_custom","fn (Header)"],["net.http"," delete deletes all values for a key. ","net.http.html#Header.delete","fn (Header)"],["net.http"," delete_custom deletes all values for a custom header key. ","net.http.html#Header.delete_custom","fn (Header)"],["net.http"," coerce coerces data in the Header by joining keys that match  case-insensitivel","net.http.html#Header.coerce","fn (Header)"],["net.http"," contains returns whether the header key exists in the map. ","net.http.html#Header.contains","fn (Header)"],["net.http"," contains_custom returns whether the custom header key exists in the map. ","net.http.html#Header.contains_custom","fn (Header)"],["net.http"," get gets the first value for the CommonHeader, or none if the key  does not exi","net.http.html#Header.get","fn (Header)"],["net.http"," get_custom gets the first value for the custom header, or none if  the key does","net.http.html#Header.get_custom","fn (Header)"],["net.http"," starting_with gets the first header starting with key, or none if  the key does","net.http.html#Header.starting_with","fn (Header)"],["net.http"," values gets all values for the CommonHeader. ","net.http.html#Header.values","fn (Header)"],["net.http"," custom_values gets all values for the custom header. ","net.http.html#Header.custom_values","fn (Header)"],["net.http"," keys gets all header keys as strings ","net.http.html#Header.keys","fn (Header)"],["net.http"," render renders the Header into a string for use in sending HTTP  requests. All ","net.http.html#Header.render","fn (Header)"],["net.http"," join combines two Header structs into a new Header struct ","net.http.html#Header.join","fn (Header)"],["net.http"," str returns the headers string as seen in HTTP/1.1 requests.  Key order is not ","net.http.html#Header.str","fn (Header)"],["net.http","","net.http.html#HeaderConfig","struct "],["net.http"," Create a new Header object ","net.http.html#new_header","fn "],["net.http"," new_header_from_map creates a Header from key value pairs ","net.http.html#new_header_from_map","fn "],["net.http"," new_custom_header_from_map creates a Header from string key value pairs ","net.http.html#new_custom_header_from_map","fn "],["net.http","","net.http.html#HeaderCoerceConfig","struct "],["net.http","","net.http.html#HeaderQueryConfig","struct "],["net.http","","net.http.html#HeaderRenderConfig","struct "],["net.http"," FetchConfig holds configurations of fetch ","net.http.html#FetchConfig","struct "],["net.http","","net.http.html#new_request","fn "],["net.http"," get sends a GET HTTP request to the URL ","net.http.html#get","fn "],["net.http"," post sends a POST HTTP request to the URL with a string data ","net.http.html#post","fn "],["net.http"," post_json sends a POST HTTP request to the URL with a JSON data ","net.http.html#post_json","fn "],["net.http"," post_form sends a POST HTTP request to the URL with X-WWW-FORM-URLENCODED data ","net.http.html#post_form","fn "],["net.http"," put sends a PUT HTTP request to the URL with a string data ","net.http.html#put","fn "],["net.http"," patch sends a PATCH HTTP request to the URL with a string data ","net.http.html#patch","fn "],["net.http"," head sends a HEAD HTTP request to the URL ","net.http.html#head","fn "],["net.http"," delete sends a DELETE HTTP request to the URL ","net.http.html#delete","fn "],["net.http"," fetch sends an HTTP request to the URL with the given method and configurations","net.http.html#fetch","fn "],["net.http"," get_text sends a GET HTTP request to the URL and returns the text content of th","net.http.html#get_text","fn "],["net.http"," url_encode_form_data converts mapped data to an URL encoded string ","net.http.html#url_encode_form_data","fn "],["net.http"," unescape_url is deprecated, use urllib.query_unescape() instead ","net.http.html#unescape_url","fn "],["net.http"," escape_url is deprecated, use urllib.query_escape() instead ","net.http.html#escape_url","fn "],["net.http"," unescape is deprecated, use urllib.query_escape() instead ","net.http.html#unescape","fn "],["net.http"," escape is deprecated, use urllib.query_unescape() instead ","net.http.html#escape","fn "],["net.http"," The methods listed here are some of the most used ones, ordered by  commonality","net.http.html#Method","enum "],["net.http","","net.http.html#Method.str","fn (Method)"],["net.http","","net.http.html#method_from_str","fn "],["net.http"," Request holds information about an HTTP request (either received by  a server o","net.http.html#Request","struct "],["net.http"," add_header adds the key and value of an HTTP request header  To add a custom he","net.http.html#Request.add_header","fn (Request)"],["net.http"," add_custom_header adds the key and value of an HTTP request header  This method","net.http.html#Request.add_custom_header","fn (Request)"],["net.http"," do will send the HTTP request and returns `http.Response` as soon as the respon","net.http.html#Request.do","fn (Request)"],["net.http"," referer returns 'Referer' header value of the given request ","net.http.html#Request.referer","fn (Request)"],["net.http"," Parse a raw HTTP request into a Request object ","net.http.html#parse_request","fn "],["net.http"," Response represents the result of the request ","net.http.html#Response","struct "],["net.http"," Formats resp to bytes suitable for HTTP response transmission ","net.http.html#Response.bytes","fn (Response)"],["net.http"," Formats resp to a string suitable for HTTP response transmission ","net.http.html#Response.bytestr","fn (Response)"],["net.http"," Parse a raw HTTP response into a Response object ","net.http.html#parse_response","fn "],["net.http","","net.http.html#Server","struct "],["net.http","","net.http.html#Server.listen_and_serve","fn (Server)"],["net.http"," The status codes listed here are based on the comprehensive list,  available at","net.http.html#Status","enum "],["net.http","","net.http.html#Status.str","fn (Status)"],["net.http"," int converts an assigned and known Status to its integral equivalent.  if a Sta","net.http.html#Status.int","fn (Status)"],["net.http"," is_valid returns true if the status code is assigned and known ","net.http.html#Status.is_valid","fn (Status)"],["net.http"," is_error will return true if the status code represents either a client or  a s","net.http.html#Status.is_error","fn (Status)"],["net.http"," is_success will return true if the status code represents either an  informatio","net.http.html#Status.is_success","fn (Status)"],["net.http","","net.http.html#status_from_int","fn "],["net.http"," The versions listed here are the most common ones. ","net.http.html#Version","enum "],["net.http","","net.http.html#Version.str","fn (Version)"],["net.http","","net.http.html#version_from_str","fn "],["net.http.chunked","","net.http.chunked.html#decode","fn "],["net.openssl","","net.openssl.html#C.SSL","struct "],["net.openssl","","net.openssl.html#SSL_CTX","struct "],["net.openssl","","net.openssl.html#SSL","struct "],["net.openssl","","net.openssl.html#SSL_METHOD","struct "],["net.openssl","","net.openssl.html#OPENSSL_INIT_SETTINGS","struct "],["net.openssl"," ssl_error returns non error ssl code or error if unrecoverable and we should pa","net.openssl.html#ssl_error","fn "],["net.openssl","","net.openssl.html#SSLError","enum "],["net.openssl"," SSLConn is the current connection ","net.openssl.html#SSLConn","struct "],["net.openssl"," shutdown closes the ssl connection and do clean up ","net.openssl.html#SSLConn.shutdown","fn (SSLConn)"],["net.openssl"," connect to server using open ssl ","net.openssl.html#SSLConn.connect","fn (SSLConn)"],["net.openssl","","net.openssl.html#SSLConn.socket_read_into_ptr","fn (SSLConn)"],["net.openssl","","net.openssl.html#SSLConn.read_into","fn (SSLConn)"],["net.openssl"," write number of bytes to SSL connection ","net.openssl.html#SSLConn.write","fn (SSLConn)"],["net.openssl"," new_ssl_conn instance an new SSLCon struct ","net.openssl.html#new_ssl_conn","fn "],["net.smtp","","net.smtp.html#BodyType","enum "],["net.smtp","","net.smtp.html#Client","struct "],["net.smtp"," reconnect reconnects to the SMTP server if the connection was closed ","net.smtp.html#Client.reconnect","fn (Client)"],["net.smtp"," send sends an email ","net.smtp.html#Client.send","fn (Client)"],["net.smtp"," quit closes the connection to the server ","net.smtp.html#Client.quit","fn (Client)"],["net.smtp","","net.smtp.html#Mail","struct "],["net.smtp"," new_client returns a new SMTP client and connects to it ","net.smtp.html#new_client","fn "],["net.unix","","net.unix.html#listen_stream","fn "],["net.unix","","net.unix.html#connect_stream","fn "],["net.unix","","net.unix.html#StreamListener","type "],["net.unix","","net.unix.html#StreamListener.accept","fn (StreamListener)"],["net.unix","","net.unix.html#StreamListener.accept_deadline","fn (StreamListener)"],["net.unix","","net.unix.html#StreamListener.set_accept_deadline","fn (StreamListener)"],["net.unix","","net.unix.html#StreamListener.accept_timeout","fn (StreamListener)"],["net.unix","","net.unix.html#StreamListener.set_accept_timeout","fn (StreamListener)"],["net.unix","","net.unix.html#StreamListener.wait_for_accept","fn (StreamListener)"],["net.unix","","net.unix.html#StreamListener.close","fn (StreamListener)"],["net.unix","","net.unix.html#StreamConn","type "],["net.unix","","net.unix.html#StreamConn.close","fn (StreamConn)"],["net.unix"," write_ptr blocks and attempts to write all data ","net.unix.html#StreamConn.write_ptr","fn (StreamConn)"],["net.unix"," write blocks and attempts to write all data ","net.unix.html#StreamConn.write","fn (StreamConn)"],["net.unix"," write_str blocks and attempts to write all data ","net.unix.html#StreamConn.write_str","fn (StreamConn)"],["net.unix"," write_string blocks and attempts to write all data ","net.unix.html#StreamConn.write_string","fn (StreamConn)"],["net.unix","","net.unix.html#StreamConn.read_ptr","fn (StreamConn)"],["net.unix","","net.unix.html#StreamConn.read","fn (StreamConn)"],["net.unix","","net.unix.html#StreamConn.read_deadline","fn (StreamConn)"],["net.unix","","net.unix.html#StreamConn.set_read_deadline","fn (StreamConn)"],["net.unix","","net.unix.html#StreamConn.write_deadline","fn (StreamConn)"],["net.unix","","net.unix.html#StreamConn.set_write_deadline","fn (StreamConn)"],["net.unix","","net.unix.html#StreamConn.read_timeout","fn (StreamConn)"],["net.unix","","net.unix.html#StreamConn.set_read_timeout","fn (StreamConn)"],["net.unix","","net.unix.html#StreamConn.write_timeout","fn (StreamConn)"],["net.unix","","net.unix.html#StreamConn.set_write_timeout","fn (StreamConn)"],["net.unix","","net.unix.html#StreamConn.wait_for_read","fn (StreamConn)"],["net.unix","","net.unix.html#StreamConn.wait_for_write","fn (StreamConn)"],["net.unix","","net.unix.html#StreamConn.str","fn (StreamConn)"],["net.urllib"," query_unescape does the inverse transformation of query_escape,  converting eac","net.urllib.html#query_unescape","fn "],["net.urllib"," path_unescape does the inverse transformation of path_escape,  converting each ","net.urllib.html#path_unescape","fn "],["net.urllib"," query_escape escapes the string so it can be safely placed  inside a URL query.","net.urllib.html#query_escape","fn "],["net.urllib"," path_escape escapes the string so it can be safely placed inside a URL path seg","net.urllib.html#path_escape","fn "],["net.urllib"," A URL represents a parsed URL (technically, a URI reference).   The general for","net.urllib.html#URL","struct "],["net.urllib"," set_path sets the path and raw_path fields of the URL based on the provided  es","net.urllib.html#URL.set_path","fn (URL)"],["net.urllib"," escaped_path returns the escaped form of u.path.  In general there are multiple","net.urllib.html#URL.escaped_path","fn (URL)"],["net.urllib"," str reassembles the URL into a valid URL string.  The general form of the resul","net.urllib.html#URL.str","fn (URL)"],["net.urllib"," is_abs reports whether the URL is absolute.  Absolute means that it has a non-e","net.urllib.html#URL.is_abs","fn (URL)"],["net.urllib"," parse parses a URL in the context of the receiver. The provided URL  may be rel","net.urllib.html#URL.parse","fn (URL)"],["net.urllib"," resolve_reference resolves a URI reference to an absolute URI from  an absolute","net.urllib.html#URL.resolve_reference","fn (URL)"],["net.urllib"," query parses raw_query and returns the corresponding values.  It silently disca","net.urllib.html#URL.query","fn (URL)"],["net.urllib"," request_uri returns the encoded path?query or opaque?query  string that would b","net.urllib.html#URL.request_uri","fn (URL)"],["net.urllib"," hostname returns u.host, stripping any valid port number if present.   If the r","net.urllib.html#URL.hostname","fn (URL)"],["net.urllib"," port returns the port part of u.host, without the leading colon.  If u.host doe","net.urllib.html#URL.port","fn (URL)"],["net.urllib"," user returns a Userinfo containing the provided username  and no password set. ","net.urllib.html#user","fn "],["net.urllib"," parse parses rawurl into a URL structure.   The rawurl may be relative (a path,","net.urllib.html#parse","fn "],["net.urllib"," Values maps a string key to a list of values.  It is typically used for query p","net.urllib.html#parse_query","fn "],["net.urllib","","net.urllib.html#Values","type "],["net.urllib"," del deletes the values associated with key. ","net.urllib.html#Values.del","fn (Values)"],["net.urllib"," encode encodes the values into ``URL encoded'' form  ('bar=baz&foo=quux') sorte","net.urllib.html#Values.encode","fn (Values)"],["net.urllib"," get gets the first value associated with the given key.  If there are no values","net.urllib.html#Values.get","fn (Values)"],["net.urllib"," get_all gets the all the values associated with the given key.  If there are no","net.urllib.html#Values.get_all","fn (Values)"],["net.urllib"," set sets the key to value. It replaces any existing  values. ","net.urllib.html#Values.set","fn (Values)"],["net.urllib"," add adds the value to key. It appends to any existing  values associated with k","net.urllib.html#Values.add","fn (Values)"],["net.urllib"," valid_userinfo reports whether s is a valid userinfo string per RFC 3986  Secti","net.urllib.html#valid_userinfo","fn "],["net.urllib","","net.urllib.html#ishex","fn "],["net.urllib"," new_values returns a new Values struct for creating  urlencoded query string pa","net.urllib.html#new_values","fn "],["net.urllib","","net.urllib.html#Value","type "],["net.urllib"," Currently you will need to use all()[key].data  once map[string][]string is imp","net.urllib.html#Value.all","fn (Value)"],["net.websocket","","net.websocket.html#AcceptClientFn","type "],["net.websocket","","net.websocket.html#SocketMessageFn","type "],["net.websocket","","net.websocket.html#SocketMessageFn2","type "],["net.websocket","","net.websocket.html#SocketErrorFn","type "],["net.websocket","","net.websocket.html#SocketErrorFn2","type "],["net.websocket","","net.websocket.html#SocketOpenFn","type "],["net.websocket","","net.websocket.html#SocketOpenFn2","type "],["net.websocket","","net.websocket.html#SocketCloseFn","type "],["net.websocket","","net.websocket.html#SocketCloseFn2","type "],["net.websocket"," Server represents a websocket server connection ","net.websocket.html#Server","struct "],["net.websocket"," listen start listen and process to incoming connections from websocket clients ","net.websocket.html#Server.listen","fn (Server)"],["net.websocket"," on_close registers a callback on closed socket ","net.websocket.html#Server.on_close","fn (Server)"],["net.websocket"," on_close_ref registers a callback on closed socket and provides a reference obj","net.websocket.html#Server.on_close_ref","fn (Server)"],["net.websocket"," on_connect registers a callback when client connects to the server ","net.websocket.html#Server.on_connect","fn (Server)"],["net.websocket"," on_message registers a callback on new messages ","net.websocket.html#Server.on_message","fn (Server)"],["net.websocket"," on_message_ref registers a callback on new messages and provides a reference ob","net.websocket.html#Server.on_message_ref","fn (Server)"],["net.websocket"," set_ping_interval sets the interval that the server will send ping messages to ","net.websocket.html#Server.set_ping_interval","fn (Server)"],["net.websocket"," free manages manual free of memory for Server instance ","net.websocket.html#Server.free","fn (Server)"],["net.websocket"," Client represents websocket client ","net.websocket.html#Client","struct "],["net.websocket"," close closes the websocket connection ","net.websocket.html#Client.close","fn (Client)"],["net.websocket"," connect connects to remote websocket server ","net.websocket.html#Client.connect","fn (Client)"],["net.websocket"," free handles manual free memory of Client struct ","net.websocket.html#Client.free","fn (Client)"],["net.websocket"," listen listens and processes incoming messages ","net.websocket.html#Client.listen","fn (Client)"],["net.websocket"," on_close registers a callback on closed socket ","net.websocket.html#Client.on_close","fn (Client)"],["net.websocket"," on_close_ref registers a callback on closed socket and provides a reference obj","net.websocket.html#Client.on_close_ref","fn (Client)"],["net.websocket"," on_error registers a callback on errors ","net.websocket.html#Client.on_error","fn (Client)"],["net.websocket"," on_error_ref registers a callback on errors and provides a reference object ","net.websocket.html#Client.on_error_ref","fn (Client)"],["net.websocket"," on_message registers a callback on new messages ","net.websocket.html#Client.on_message","fn (Client)"],["net.websocket"," on_message_ref registers a callback on new messages and provides a reference ob","net.websocket.html#Client.on_message_ref","fn (Client)"],["net.websocket"," on_open registers a callback on successful opening the websocket ","net.websocket.html#Client.on_open","fn (Client)"],["net.websocket"," on_open_ref registers a callback on successful opening the websocket  and provi","net.websocket.html#Client.on_open_ref","fn (Client)"],["net.websocket"," parse_frame_header parses next message by decoding the incoming frames ","net.websocket.html#Client.parse_frame_header","fn (Client)"],["net.websocket"," ping sends ping message to server ","net.websocket.html#Client.ping","fn (Client)"],["net.websocket"," pong sends pong message to server, ","net.websocket.html#Client.pong","fn (Client)"],["net.websocket"," read_next_message reads 1 to n frames to compose a message ","net.websocket.html#Client.read_next_message","fn (Client)"],["net.websocket"," validate_client validates client frame rules from RFC6455 ","net.websocket.html#Client.validate_frame","fn (Client)"],["net.websocket"," write writes a byte array with a websocket messagetype to socket ","net.websocket.html#Client.write","fn (Client)"],["net.websocket"," write_ptr writes len bytes provided a byteptr with a websocket messagetype ","net.websocket.html#Client.write_ptr","fn (Client)"],["net.websocket"," write_string, writes a string with a websocket texttype to socket ","net.websocket.html#Client.write_str","fn (Client)"],["net.websocket"," write_str, writes a string with a websocket texttype to socket ","net.websocket.html#Client.write_string","fn (Client)"],["net.websocket","","net.websocket.html#Uri","type "],["net.websocket"," str returns the string representation of the Uri ","net.websocket.html#Uri.str","fn (Uri)"],["net.websocket"," State represents the state of the websocket connection. ","net.websocket.html#State","enum "],["net.websocket"," Message represents a whole message combined from 1 to n frames ","net.websocket.html#Message","struct "],["net.websocket"," free handles manual free memory of Message struct ","net.websocket.html#Message.free","fn (Message)"],["net.websocket"," OPCode represents the supported websocket frame types ","net.websocket.html#OPCode","enum "],["net.websocket"," new_client instance a new websocket client ","net.websocket.html#new_client","fn "],["net.websocket"," new_server instance a new websocket server on provided port and route ","net.websocket.html#new_server","fn "],["os"," args_after returns all os.args, located *after* a specified `cut_word`.  When `","os.html#args_after","fn "],["os"," args_after returns all os.args, located *before* a specified `cut_word`.  When ","os.html#args_before","fn "],["os","","os.html#getenv","fn "],["os"," os.setenv sets the value of an environment variable with `name` to `value`. ","os.html#setenv","fn "],["os"," os.unsetenv clears an environment variable with `name`. ","os.html#unsetenv","fn "],["os","","os.html#environ","fn "],["os"," file descriptor based operations:  close filedescriptor ","os.html#fd_close","fn "],["os","","os.html#fd_write","fn "],["os"," read from filedescriptor, block until data ","os.html#fd_slurp","fn "],["os"," read from filedescriptor, don't block  return [bytestring,nrbytes] ","os.html#fd_read","fn "],["os","","os.html#File","struct "],["os","","os.html#File.close","fn (File)"],["os"," **************************** Utility  ops ***********************  flush writes","os.html#File.flush","fn (File)"],["os"," read implements the Reader interface. ","os.html#File.read","fn (File)"],["os"," read_bytes reads bytes from the beginning of the file.  Utility method, same as","os.html#File.read_bytes","fn (File)"],["os"," read_bytes_at reads `size` bytes at the given position in the file. ","os.html#File.read_bytes_at","fn (File)"],["os"," read_bytes_into fills `buf` with bytes at the given position in the file.  `buf","os.html#File.read_bytes_into","fn (File)"],["os"," read_bytes_into_newline reads from the beginning of the file into the provided ","os.html#File.read_bytes_into_newline","fn (File)"],["os"," read_from implements the RandomReader interface. ","os.html#File.read_from","fn (File)"],["os"," read_raw reads and returns a single instance of type `T` ","os.html#File.read_raw","fn (File)"],["os"," read_raw_at reads and returns a single instance of type `T` starting at file by","os.html#File.read_raw_at","fn (File)"],["os"," read_struct reads a single struct of type `T` ","os.html#File.read_struct","fn (File)"],["os"," read_struct_at reads a single struct of type `T` at position specified in file ","os.html#File.read_struct_at","fn (File)"],["os"," **************************** Write ops  ***************************  write impl","os.html#File.write","fn (File)"],["os"," write_full_buffer writes a whole buffer of data to the file, starting from the ","os.html#File.write_full_buffer","fn (File)"],["os"," write_ptr writes `size` bytes to the file, starting from the address in `data`.","os.html#File.write_ptr","fn (File)"],["os"," write_ptr_at writes `size` bytes to the file, starting from the address in `dat","os.html#File.write_ptr_at","fn (File)"],["os"," TODO `write_raw[_at]` implementations are copy-pasted from `write_struct[_at]` ","os.html#File.write_raw","fn (File)"],["os"," write_raw_at writes a single instance of type `T` starting at file byte offset ","os.html#File.write_raw_at","fn (File)"],["os"," write_string writes the string `s` into the file  It returns how many bytes wer","os.html#File.write_string","fn (File)"],["os"," write_struct writes a single struct of type `T` ","os.html#File.write_struct","fn (File)"],["os"," write_struct_at writes a single struct of type `T` at position specified in fil","os.html#File.write_struct_at","fn (File)"],["os"," write_to implements the RandomWriter interface.  It returns how many bytes were","os.html#File.write_to","fn (File)"],["os"," writeln writes the string `s` into the file, and appends a \n character.  It re","os.html#File.writeln","fn (File)"],["os","","os.html#open_file","fn "],["os"," open tries to open a file for reading and returns back a read-only `File` objec","os.html#open","fn "],["os"," create creates or opens a file at a specified location and returns a write-only","os.html#create","fn "],["os"," stdin - return an os.File for stdin, so that you can use .get_line on it too. ","os.html#stdin","fn "],["os"," stdout - return an os.File for stdout ","os.html#stdout","fn "],["os"," stderr - return an os.File for stderr ","os.html#stderr","fn "],["os","","os.html#ErrFileNotOpened","struct "],["os","","os.html#ErrSizeOfTypeIs0","struct "],["os"," inode returns the mode of the file/inode containing inode type and permission i","os.html#inode","fn "],["os","","os.html#Result","struct "],["os","","os.html#Result.free","fn (Result)"],["os"," cp_all will recursively copy `src` to `dst`,  optionally overwriting files or d","os.html#cp_all","fn "],["os"," mv_by_cp first copies the source file, and if it is copied successfully, delete","os.html#mv_by_cp","fn "],["os"," read_lines reads the file in `path` into an array of lines. ","os.html#read_lines","fn "],["os"," sigint_to_signal_name will translate `si` signal integer code to it's string co","os.html#sigint_to_signal_name","fn "],["os"," rmdir_all recursively removes the specified directory. ","os.html#rmdir_all","fn "],["os"," is_dir_empty will return a `bool` whether or not `path` is empty. ","os.html#is_dir_empty","fn "],["os"," file_ext will return the part after the last occurence of `.` in `path`.  The `","os.html#file_ext","fn "],["os"," dir returns all but the last element of path, typically the path's directory.  ","os.html#dir","fn "],["os"," base returns the last element of path.  Trailing path separators are removed be","os.html#base","fn "],["os"," file_name will return all characters found after the last occurence of `path_se","os.html#file_name","fn "],["os"," input_opt returns a one-line string from stdin, after printing a prompt.  In th","os.html#input_opt","fn "],["os"," input returns a one-line string from stdin, after printing a prompt.  In the ev","os.html#input","fn "],["os"," get_line returns a one-line string from stdin ","os.html#get_line","fn "],["os"," get_lines returns an array of strings read from from stdin.  reading is stopped","os.html#get_lines","fn "],["os"," get_lines_joined returns a string of the values read from from stdin.  reading ","os.html#get_lines_joined","fn "],["os"," get_raw_lines_joined reads *all* input lines from stdin.  It returns them as on","os.html#get_raw_lines_joined","fn "],["os"," user_os returns current user operating system name. ","os.html#user_os","fn "],["os"," home_dir returns path to the user's home directory. ","os.html#home_dir","fn "],["os"," write_file writes `text` data to a file in `path`. ","os.html#write_file","fn "],["os"," write_file_array writes the data in `buffer` to a file in `path`. ","os.html#write_file_array","fn "],["os"," find_exe_path walks the environment PATH, just like most shell do, it returns  ","os.html#find_abs_path_of_executable","fn "],["os"," exists_in_system_path returns `true` if `prog` exists in the system's PATH ","os.html#exists_in_system_path","fn "],["os"," is_file returns a `bool` indicating whether the given `path` is a file. ","os.html#is_file","fn "],["os"," is_abs_path returns `true` if `path` is absolute. ","os.html#is_abs_path","fn "],["os"," join_path returns a path as string from input string parameter(s). ","os.html#join_path","fn "],["os"," walk_ext returns a recursive list of all files in `path` ending with `ext`. ","os.html#walk_ext","fn "],["os"," walk recursively traverses the given directory `path`.  When a file is encountr","os.html#walk","fn "],["os"," log will print \"os.log: \"+`s` ... ","os.html#log","fn "],["os"," mkdir_all will create a valid full path of all directories given in `path`. ","os.html#mkdir_all","fn "],["os"," cache_dir returns the path to a *writable* user specific folder, suitable for w","os.html#cache_dir","fn "],["os"," temp_dir returns the path to a folder, that is suitable for storing temporary f","os.html#temp_dir","fn "],["os"," vmodules_dir returns the path to a folder, where v stores its global modules. ","os.html#vmodules_dir","fn "],["os"," vmodules_paths returns a list of paths, where v looks up for modules.  You can ","os.html#vmodules_paths","fn "],["os"," resource_abs_path returns an absolute path, for the given `path`.  (the path is","os.html#resource_abs_path","fn "],["os","","os.html#Uname","struct "],["os","","os.html#execute_or_panic","fn "],["os","","os.html#execute_or_exit","fn "],["os"," is_atty returns 1 if the `fd` file descriptor is open and refers to a terminal ","os.html#is_atty","fn "],["os","","os.html#glob","fn "],["os"," read_bytes returns all bytes read from file in `path`. ","os.html#read_bytes","fn "],["os"," read_file reads the file in `path` and returns the contents. ","os.html#read_file","fn "],["os"," ***************************** OS ops ************************   truncate change","os.html#truncate","fn "],["os"," file_size returns the size of the file located in `path`.  If an error occurs i","os.html#file_size","fn "],["os"," mv moves files or folders from `src` to `dst`. ","os.html#mv","fn "],["os"," cp copies files or folders from `src` to `dst`. ","os.html#cp","fn "],["os"," vfopen returns an opened C file, given its path and open mode.  NB: os.vfopen i","os.html#vfopen","fn "],["os"," fileno returns the file descriptor of an opened C file. ","os.html#fileno","fn "],["os"," posix_get_error_msg return error code representation in string. ","os.html#posix_get_error_msg","fn "],["os"," system works like `exec`, but only returns a return code. ","os.html#system","fn "],["os"," exists returns true if `path` (file or directory) exists. ","os.html#exists","fn "],["os"," is_executable returns `true` if `path` is executable. ","os.html#is_executable","fn "],["os"," is_writable returns `true` if `path` is writable. ","os.html#is_writable","fn "],["os"," is_readable returns `true` if `path` is readable. ","os.html#is_readable","fn "],["os"," rm removes file in `path`. ","os.html#rm","fn "],["os"," rmdir removes a specified directory. ","os.html#rmdir","fn "],["os"," get_raw_line returns a one-line string from stdin along with '\n' if there is a","os.html#get_raw_line","fn "],["os"," get_raw_stdin will get the raw input from stdin. ","os.html#get_raw_stdin","fn "],["os"," read_file_array reads an array of `T` values from file `path`. ","os.html#read_file_array","fn "],["os","","os.html#on_segfault","fn "],["os"," executable returns the path name of the executable that started the current  pr","os.html#executable","fn "],["os"," is_dir returns a `bool` indicating whether the given `path` is a directory. ","os.html#is_dir","fn "],["os"," is_link returns a boolean indicating whether `path` is a link. ","os.html#is_link","fn "],["os"," chdir changes the current working directory to the new directory in `path`. ","os.html#chdir","fn "],["os"," getwd returns the absolute path of the current directory. ","os.html#getwd","fn "],["os"," real_path returns the full absolute path for fpath, with all relative ../../, s","os.html#real_path","fn "],["os"," fork will fork the current system process and return the pid of the fork. ","os.html#fork","fn "],["os"," wait blocks the calling process until one of its child processes exits or a sig","os.html#wait","fn "],["os"," file_last_mod_unix returns the \"last modified\" time stamp of file in `path`. ","os.html#file_last_mod_unix","fn "],["os"," flush will flush the stdout buffer. ","os.html#flush","fn "],["os"," chmod change file access attributes of `path` to `mode`.  Octals like `0o600` c","os.html#chmod","fn "],["os"," chown changes the owner and group attributes of `path` to `owner` and `group`. ","os.html#chown","fn "],["os"," open_append opens `path` file for appending. ","os.html#open_append","fn "],["os"," execvp - loads and executes a new child process, *in place* of the current proc","os.html#execvp","fn "],["os"," execve - loads and executes a new child process, *in place* of the current proc","os.html#execve","fn "],["os"," Ref - https://docs.microsoft.com/en-us/windows/desktop/winprog/windows-data-typ","os.html#HANDLE","type "],["os","","os.html#HMODULE","type "],["os","","os.html#utime","fn "],["os","","os.html#ls","fn "],["os"," mkdir creates a new directory with the specified path. ","os.html#mkdir","fn "],["os"," Ref - https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/get-osfh","os.html#get_file_handle","fn "],["os"," Ref - https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloa","os.html#get_module_filename","fn "],["os"," get_error_msg return error code representation in string. ","os.html#get_error_msg","fn "],["os"," execute starts the specified command, waits for it to complete, and returns its","os.html#execute","fn "],["os","","os.html#symlink","fn "],["os","","os.html#link","fn "],["os","","os.html#ExceptionRecord","struct "],["os","","os.html#ContextRecord","struct "],["os","","os.html#ExceptionPointers","struct "],["os","","os.html#VectoredExceptionHandler","type "],["os"," This is defined in builtin because we use vectored exception handling  for our ","os.html#add_vectored_exception_handler","fn "],["os"," this is defined in builtin_windows.c.v in builtin  fn C.IsDebuggerPresent() boo","os.html#debugger_present","fn "],["os","","os.html#uname","fn "],["os","","os.html#hostname","fn "],["os","","os.html#loginname","fn "],["os"," `is_writable_folder` - `folder` exists and is writable to the process ","os.html#is_writable_folder","fn "],["os","","os.html#getpid","fn "],["os","","os.html#getppid","fn "],["os","","os.html#getuid","fn "],["os","","os.html#geteuid","fn "],["os","","os.html#getgid","fn "],["os","","os.html#getegid","fn "],["os","","os.html#posix_set_permission_bit","fn "],["os"," ProcessState.not_started - the process has not yet started  ProcessState.runnin","os.html#ProcessState","enum "],["os","","os.html#Process","struct "],["os"," set_args - set the arguments for the new process ","os.html#Process.set_args","fn (Process)"],["os"," set_environment - set a custom environment variable mapping for the new process","os.html#Process.set_environment","fn (Process)"],["os"," run - starts the new process ","os.html#Process.run","fn (Process)"],["os"," signal_kill - kills the process, after that it is no longer running ","os.html#Process.signal_kill","fn (Process)"],["os"," signal_pgkill - kills the whole process group ","os.html#Process.signal_pgkill","fn (Process)"],["os"," signal_stop - stops the process, you can resume it with p.signal_continue() ","os.html#Process.signal_stop","fn (Process)"],["os"," signal_continue - tell a stopped process to continue/resume its work ","os.html#Process.signal_continue","fn (Process)"],["os"," wait - wait for a process to finish.  NB: You have to call p.wait(), otherwise ","os.html#Process.wait","fn (Process)"],["os"," close - free the OS resources associated with the process.  Can be called multi","os.html#Process.close","fn (Process)"],["os","","os.html#Process.free","fn (Process)"],["os"," is_alive - query whether the process p.pid is still alive ","os.html#Process.is_alive","fn (Process)"],["os"," ","os.html#Process.set_redirect_stdio","fn (Process)"],["os","","os.html#Process.stdin_write","fn (Process)"],["os"," will read from stdout pipe, will only return when EOF (end of file) or data  me","os.html#Process.stdout_slurp","fn (Process)"],["os"," read from stderr pipe, wait for data or EOF ","os.html#Process.stderr_slurp","fn (Process)"],["os"," read from stdout, return if data or not ","os.html#Process.stdout_read","fn (Process)"],["os","","os.html#Process.stderr_read","fn (Process)"],["os"," new_process - create a new process descriptor  NB: new does NOT start the new p","os.html#new_process","fn "],["os","","os.html#WProcess","struct "],["os"," os.Signal - enumerate possible POSIX signals and  their integer codes.  NB: the","os.html#Signal","enum "],["os","","os.html#signal_opt","fn "],["os.cmdline"," Fetch multiple option by param, e.g.  args: ['v', '-d', 'aa', '-d', 'bb', '-d',","os.cmdline.html#options","fn "],["os.cmdline"," Fetch option by param, e.g.  args: ['v', '-d', 'aa']  param: '-d'  def: ''  ret","os.cmdline.html#option","fn "],["os.cmdline"," Fetch all options before what params, e.g.  args: ['-stat', 'test', 'aaa.v']  w","os.cmdline.html#options_before","fn "],["os.cmdline"," Fetch all options after what params, e.g.  args: ['-stat', 'test', 'aaa.v']  wh","os.cmdline.html#options_after","fn "],["os.cmdline"," Fetch all options not start with '-', e.g.  args: ['-d', 'aa', '--help', 'bb'] ","os.cmdline.html#only_non_options","fn "],["os.cmdline"," Fetch all options start with '-', e.g.  args: ['-d', 'aa', '--help', 'bb']  ret","os.cmdline.html#only_options","fn "],["os.notify"," Backends should provide a `new() ?FdNotifier` function ","os.notify.html#FdNotifier","interface "],["os.notify","","os.notify.html#FdEvent","interface "],["os.notify","","os.notify.html#FdEventType","enum "],["os.notify","","os.notify.html#FdConfigFlags","enum "],["os.notify"," Implement the API ","os.notify.html#new","fn "],["pg","","pg.html#DB","struct "],["pg"," close frees the underlying resource allocated by the database connection ","pg.html#DB.close","fn (DB)"],["pg"," q_int submit a command to the database server and  returns an the first field i","pg.html#DB.q_int","fn (DB)"],["pg"," q_string submit a command to the database server and  returns an the first fiel","pg.html#DB.q_string","fn (DB)"],["pg"," q_strings submit a command to the database server and  returns the resulting ro","pg.html#DB.q_strings","fn (DB)"],["pg"," exec submit a command to the database server and wait  for the result, returnin","pg.html#DB.exec","fn (DB)"],["pg","","pg.html#DB.exec_one","fn (DB)"],["pg"," exec_param_many executes a query with the provided parameters ","pg.html#DB.exec_param_many","fn (DB)"],["pg","","pg.html#DB.exec_param2","fn (DB)"],["pg","","pg.html#DB.exec_param","fn (DB)"],["pg"," copy_expert execute COPY commands  https://www.postgresql.org/docs/9.5/libpq-co","pg.html#DB.copy_expert","fn (DB)"],["pg","","pg.html#Row","struct "],["pg","","pg.html#Config","struct "],["pg","","pg.html#connect","fn "],["picoev","","picoev.html#Config","struct "],["picoev","","picoev.html#new","fn "],["picoev","","picoev.html#Picoev","type "],["picoev","","picoev.html#Picoev.serve","fn (Picoev)"],["picohttpparser","","picohttpparser.html#cmp","fn "],["picohttpparser","","picohttpparser.html#cmpn","fn "],["picohttpparser","","picohttpparser.html#Request","struct "],["picohttpparser","","picohttpparser.html#Request.parse_request","fn (Request)"],["picohttpparser","","picohttpparser.html#Request.parse_request_path","fn (Request)"],["picohttpparser","","picohttpparser.html#Request.parse_request_path_pipeline","fn (Request)"],["picohttpparser","","picohttpparser.html#Response","struct "],["picohttpparser","","picohttpparser.html#Response.write_string","fn (Response)"],["picohttpparser","","picohttpparser.html#Response.http_ok","fn (Response)"],["picohttpparser","","picohttpparser.html#Response.header","fn (Response)"],["picohttpparser","","picohttpparser.html#Response.header_date","fn (Response)"],["picohttpparser","","picohttpparser.html#Response.header_server","fn (Response)"],["picohttpparser","","picohttpparser.html#Response.content_type","fn (Response)"],["picohttpparser","","picohttpparser.html#Response.html","fn (Response)"],["picohttpparser","","picohttpparser.html#Response.plain","fn (Response)"],["picohttpparser","","picohttpparser.html#Response.json","fn (Response)"],["picohttpparser","","picohttpparser.html#Response.body","fn (Response)"],["picohttpparser","","picohttpparser.html#Response.http_404","fn (Response)"],["picohttpparser","","picohttpparser.html#Response.http_405","fn (Response)"],["picohttpparser","","picohttpparser.html#Response.http_500","fn (Response)"],["picohttpparser","","picohttpparser.html#Response.raw","fn (Response)"],["picohttpparser","","picohttpparser.html#Response.end","fn (Response)"],["rand"," PRNGConfigStruct is a configuration struct for creating a new instance of the d","rand.html#PRNGConfigStruct","struct "],["rand"," PRNG is a common interface for all PRNGs that can be used seamlessly with the r","rand.html#PRNG","interface "],["rand"," new_default returns a new instance of the default RNG. If the seed is not provi","rand.html#new_default","fn "],["rand"," get_current_rng returns the PRNG instance currently in use. If it is not change","rand.html#get_current_rng","fn "],["rand"," set_rng changes the default RNG from wyrand.WyRandRNG (or whatever the last RNG","rand.html#set_rng","fn "],["rand"," seed sets the given array of `u32` values as the seed for the `default_rng`. Th","rand.html#seed","fn "],["rand"," u32 returns a uniformly distributed `u32` in range `[0, 2³²)`. ","rand.html#u32","fn "],["rand"," u64 returns a uniformly distributed `u64` in range `[0, 2⁶⁴)`. ","rand.html#u64","fn "],["rand"," u32n returns a uniformly distributed pseudorandom 32-bit signed positive `u32` ","rand.html#u32n","fn "],["rand"," u64n returns a uniformly distributed pseudorandom 64-bit signed positive `u64` ","rand.html#u64n","fn "],["rand"," u32_in_range returns a uniformly distributed pseudorandom 32-bit unsigned `u32`","rand.html#u32_in_range","fn "],["rand"," u64_in_range returns a uniformly distributed pseudorandom 64-bit unsigned `u64`","rand.html#u64_in_range","fn "],["rand"," int returns a uniformly distributed pseudorandom 32-bit signed (possibly negati","rand.html#int","fn "],["rand"," intn returns a uniformly distributed pseudorandom 32-bit signed positive `int` ","rand.html#intn","fn "],["rand"," byte returns a uniformly distributed pseudorandom 8-bit unsigned positive `byte","rand.html#byte","fn "],["rand"," int_in_range returns a uniformly distributed pseudorandom  32-bit signed int in","rand.html#int_in_range","fn "],["rand"," int31 returns a uniformly distributed pseudorandom 31-bit signed positive `int`","rand.html#int31","fn "],["rand"," i64 returns a uniformly distributed pseudorandom 64-bit signed (possibly negati","rand.html#i64","fn "],["rand"," i64n returns a uniformly distributed pseudorandom 64-bit signed positive `i64` ","rand.html#i64n","fn "],["rand"," i64_in_range returns a uniformly distributed pseudorandom 64-bit signed `i64` i","rand.html#i64_in_range","fn "],["rand"," int63 returns a uniformly distributed pseudorandom 63-bit signed positive `i64`","rand.html#int63","fn "],["rand"," f32 returns a uniformly distributed 32-bit floating point in range `[0, 1)`. ","rand.html#f32","fn "],["rand"," f64 returns a uniformly distributed 64-bit floating point in range `[0, 1)`. ","rand.html#f64","fn "],["rand"," f32n returns a uniformly distributed 32-bit floating point in range `[0, max)`.","rand.html#f32n","fn "],["rand"," f64n returns a uniformly distributed 64-bit floating point in range `[0, max)`.","rand.html#f64n","fn "],["rand"," f32_in_range returns a uniformly distributed 32-bit floating point in range `[m","rand.html#f32_in_range","fn "],["rand"," f64_in_range returns a uniformly distributed 64-bit floating point in range `[m","rand.html#f64_in_range","fn "],["rand"," string_from_set returns a string of length `len` containing random characters s","rand.html#string_from_set","fn "],["rand"," string returns a string of length `len` containing random characters in range `","rand.html#string","fn "],["rand"," hex returns a hexadecimal number of length `len` containing random characters i","rand.html#hex","fn "],["rand"," ascii returns a random string of the printable ASCII characters with length `le","rand.html#ascii","fn "],["rand"," uuid_v4 generates a random (v4) UUID  See https://en.wikipedia.org/wiki/Univers","rand.html#uuid_v4","fn "],["rand"," ulid generates an Unique Lexicographically sortable IDentifier.  See https://gi","rand.html#ulid","fn "],["rand"," ulid_at_millisecond does the same as `ulid` but takes a custom Unix millisecond","rand.html#ulid_at_millisecond","fn "],["rand.dist"," bernoulli returns true with a probability p. Note that 0 <= p <= 1. ","rand.dist.html#bernoulli","fn "],["rand.dist"," binomial returns the number of successful trials out of n when the  probability","rand.dist.html#binomial","fn "],["rand.dist"," Configuration struct for the `normal_pair` function. The default value for  `mu","rand.dist.html#NormalConfigStruct","struct "],["rand.dist"," normal_pair returns a pair of normally distributed random numbers with the mean","rand.dist.html#normal_pair","fn "],["rand.dist"," normal returns a normally distributed random number with the mean mu and standa","rand.dist.html#normal","fn "],["rand.dist"," exponential returns an exponentially distributed random number with the rate pa","rand.dist.html#exponential","fn "],["rand.mt19937"," MT19937RNG is generator that uses the Mersenne Twister algorithm with period 2^","rand.mt19937.html#MT19937RNG","struct "],["rand.mt19937"," seed sets the current random state based on `seed_data`.  seed expects `seed_da","rand.mt19937.html#MT19937RNG.seed","fn (MT19937RNG)"],["rand.mt19937"," u32 returns a pseudorandom 32bit int in range `[0, 2³²)`. ","rand.mt19937.html#MT19937RNG.u32","fn (MT19937RNG)"],["rand.mt19937"," u64 returns a pseudorandom 64bit int in range `[0, 2⁶⁴)`. ","rand.mt19937.html#MT19937RNG.u64","fn (MT19937RNG)"],["rand.mt19937"," int returns a 32-bit signed (possibly negative) `int`. ","rand.mt19937.html#MT19937RNG.int","fn (MT19937RNG)"],["rand.mt19937"," i64 returns a 64-bit signed (possibly negative) `i64`. ","rand.mt19937.html#MT19937RNG.i64","fn (MT19937RNG)"],["rand.mt19937"," int31 returns a 31bit positive pseudorandom `int`. ","rand.mt19937.html#MT19937RNG.int31","fn (MT19937RNG)"],["rand.mt19937"," int63 returns a 63bit positive pseudorandom `i64`. ","rand.mt19937.html#MT19937RNG.int63","fn (MT19937RNG)"],["rand.mt19937"," u32n returns a 32bit `u32` in range `[0, max)`. ","rand.mt19937.html#MT19937RNG.u32n","fn (MT19937RNG)"],["rand.mt19937"," u64n returns a 64bit `u64` in range `[0, max)`. ","rand.mt19937.html#MT19937RNG.u64n","fn (MT19937RNG)"],["rand.mt19937"," u32n returns a pseudorandom `u32` value that is guaranteed to be in range `[min","rand.mt19937.html#MT19937RNG.u32_in_range","fn (MT19937RNG)"],["rand.mt19937"," u64n returns a pseudorandom `u64` value that is guaranteed to be in range `[min","rand.mt19937.html#MT19937RNG.u64_in_range","fn (MT19937RNG)"],["rand.mt19937"," intn returns a 32bit positive `int` in range `[0, max)`. ","rand.mt19937.html#MT19937RNG.intn","fn (MT19937RNG)"],["rand.mt19937"," i64n returns a 64bit positive `i64` in range `[0, max)`. ","rand.mt19937.html#MT19937RNG.i64n","fn (MT19937RNG)"],["rand.mt19937"," int_in_range returns a 32bit positive `int` in range `[min, max)`. ","rand.mt19937.html#MT19937RNG.int_in_range","fn (MT19937RNG)"],["rand.mt19937"," i64_in_range returns a 64bit positive `i64` in range `[min, max)`. ","rand.mt19937.html#MT19937RNG.i64_in_range","fn (MT19937RNG)"],["rand.mt19937"," f32 returns a 32bit real (`f32`) in range `[0, 1)`. ","rand.mt19937.html#MT19937RNG.f32","fn (MT19937RNG)"],["rand.mt19937"," f64 returns 64bit real (`f64`) in range `[0, 1)`. ","rand.mt19937.html#MT19937RNG.f64","fn (MT19937RNG)"],["rand.mt19937"," f32n returns a 32bit real (`f32`) in range [0, max)`. ","rand.mt19937.html#MT19937RNG.f32n","fn (MT19937RNG)"],["rand.mt19937"," f64n returns a 64bit real (`f64`) in range `[0, max)`. ","rand.mt19937.html#MT19937RNG.f64n","fn (MT19937RNG)"],["rand.mt19937"," f32_in_range returns a pseudorandom `f32` that lies in range `[min, max)`. ","rand.mt19937.html#MT19937RNG.f32_in_range","fn (MT19937RNG)"],["rand.mt19937"," i64_in_range returns a pseudorandom `i64` that lies in range `[min, max)`. ","rand.mt19937.html#MT19937RNG.f64_in_range","fn (MT19937RNG)"],["rand.musl"," MuslRNG ported from https://git.musl-libc.org/cgit/musl/tree/src/prng/rand_r.c ","rand.musl.html#MuslRNG","struct "],["rand.musl"," seed sets the current random state based on `seed_data`.  seed expects `seed_da","rand.musl.html#MuslRNG.seed","fn (MuslRNG)"],["rand.musl"," u32 returns a pseudorandom 32-bit unsigned integer (`u32`). ","rand.musl.html#MuslRNG.u32","fn (MuslRNG)"],["rand.musl"," u64 returns a pseudorandom 64-bit unsigned integer (`u64`). ","rand.musl.html#MuslRNG.u64","fn (MuslRNG)"],["rand.musl"," u32n returns a pseudorandom 32-bit unsigned integer `u32` in range `[0, max)`. ","rand.musl.html#MuslRNG.u32n","fn (MuslRNG)"],["rand.musl"," u64n returns a pseudorandom 64-bit unsigned integer (`u64`) in range `[0, max)`","rand.musl.html#MuslRNG.u64n","fn (MuslRNG)"],["rand.musl"," u32_in_range returns a pseudorandom 32-bit unsigned integer (`u32`) in range `[","rand.musl.html#MuslRNG.u32_in_range","fn (MuslRNG)"],["rand.musl"," u64_in_range returns a pseudorandom 64-bit unsigned integer (`u64`) in range `[","rand.musl.html#MuslRNG.u64_in_range","fn (MuslRNG)"],["rand.musl"," int returns a 32-bit signed (possibly negative) integer (`int`). ","rand.musl.html#MuslRNG.int","fn (MuslRNG)"],["rand.musl"," i64 returns a 64-bit signed (possibly negative) integer (`i64`). ","rand.musl.html#MuslRNG.i64","fn (MuslRNG)"],["rand.musl"," int31 returns a 31-bit positive pseudorandom integer (`int`). ","rand.musl.html#MuslRNG.int31","fn (MuslRNG)"],["rand.musl"," int63 returns a 63-bit positive pseudorandom integer (`i64`). ","rand.musl.html#MuslRNG.int63","fn (MuslRNG)"],["rand.musl"," intn returns a 32-bit positive int in range `[0, max)`. ","rand.musl.html#MuslRNG.intn","fn (MuslRNG)"],["rand.musl"," i64n returns a 64-bit positive integer `i64` in range `[0, max)`. ","rand.musl.html#MuslRNG.i64n","fn (MuslRNG)"],["rand.musl"," int_in_range returns a 32-bit positive integer `int` in range `[0, max)`. ","rand.musl.html#MuslRNG.int_in_range","fn (MuslRNG)"],["rand.musl"," i64_in_range returns a 64-bit positive integer `i64` in range `[0, max)`. ","rand.musl.html#MuslRNG.i64_in_range","fn (MuslRNG)"],["rand.musl"," f32 returns a pseudorandom `f32` value in range `[0, 1)`. ","rand.musl.html#MuslRNG.f32","fn (MuslRNG)"],["rand.musl"," f64 returns a pseudorandom `f64` value in range `[0, 1)`. ","rand.musl.html#MuslRNG.f64","fn (MuslRNG)"],["rand.musl"," f32n returns a pseudorandom `f32` value in range `[0, max)`. ","rand.musl.html#MuslRNG.f32n","fn (MuslRNG)"],["rand.musl"," f64n returns a pseudorandom `f64` value in range `[0, max)`. ","rand.musl.html#MuslRNG.f64n","fn (MuslRNG)"],["rand.musl"," f32_in_range returns a pseudorandom `f32` in range `[min, max)`. ","rand.musl.html#MuslRNG.f32_in_range","fn (MuslRNG)"],["rand.musl"," i64_in_range returns a pseudorandom `i64` in range `[min, max)`. ","rand.musl.html#MuslRNG.f64_in_range","fn (MuslRNG)"],["rand.pcg32"," PCG32RNG ported from http://www.pcg-random.org/download.html,  https://github.c","rand.pcg32.html#PCG32RNG","struct "],["rand.pcg32"," seed seeds the PCG32RNG with 4 `u32` values.  The first 2 represent the 64-bit ","rand.pcg32.html#PCG32RNG.seed","fn (PCG32RNG)"],["rand.pcg32"," u32 returns a pseudorandom unsigned `u32`. ","rand.pcg32.html#PCG32RNG.u32","fn (PCG32RNG)"],["rand.pcg32"," u64 returns a pseudorandom 64-bit unsigned `u64`. ","rand.pcg32.html#PCG32RNG.u64","fn (PCG32RNG)"],["rand.pcg32"," u32n returns a pseudorandom 32-bit unsigned `u32` in range `[0, max)`. ","rand.pcg32.html#PCG32RNG.u32n","fn (PCG32RNG)"],["rand.pcg32"," u64n returns a pseudorandom 64-bit unsigned `u64` in range `[0, max)`. ","rand.pcg32.html#PCG32RNG.u64n","fn (PCG32RNG)"],["rand.pcg32"," u32_in_range returns a pseudorandom 32-bit unsigned `u32` in range `[min, max)`","rand.pcg32.html#PCG32RNG.u32_in_range","fn (PCG32RNG)"],["rand.pcg32"," u64_in_range returns a pseudorandom 64-bit unsigned `u64` in range `[min, max)`","rand.pcg32.html#PCG32RNG.u64_in_range","fn (PCG32RNG)"],["rand.pcg32"," int returns a 32-bit signed (possibly negative) `int`. ","rand.pcg32.html#PCG32RNG.int","fn (PCG32RNG)"],["rand.pcg32"," i64 returns a 64-bit signed (possibly negative) `i64`. ","rand.pcg32.html#PCG32RNG.i64","fn (PCG32RNG)"],["rand.pcg32"," int31 returns a 31-bit positive pseudorandom `int`. ","rand.pcg32.html#PCG32RNG.int31","fn (PCG32RNG)"],["rand.pcg32"," int63 returns a 63-bit positive pseudorandom `i64`. ","rand.pcg32.html#PCG32RNG.int63","fn (PCG32RNG)"],["rand.pcg32"," intn returns a 32-bit positive `int` in range `[0, max)`. ","rand.pcg32.html#PCG32RNG.intn","fn (PCG32RNG)"],["rand.pcg32"," i64n returns a 64-bit positive `i64` in range `[0, max)`. ","rand.pcg32.html#PCG32RNG.i64n","fn (PCG32RNG)"],["rand.pcg32"," int_in_range returns a 32-bit positive `int` in range `[0, max)`. ","rand.pcg32.html#PCG32RNG.int_in_range","fn (PCG32RNG)"],["rand.pcg32"," i64_in_range returns a 64-bit positive `i64` in range `[0, max)`. ","rand.pcg32.html#PCG32RNG.i64_in_range","fn (PCG32RNG)"],["rand.pcg32"," f32 returns a pseudorandom `f32` value in range `[0, 1)`. ","rand.pcg32.html#PCG32RNG.f32","fn (PCG32RNG)"],["rand.pcg32"," f64 returns a pseudorandom `f64` value in range `[0, 1)`. ","rand.pcg32.html#PCG32RNG.f64","fn (PCG32RNG)"],["rand.pcg32"," f32n returns a pseudorandom `f32` value in range `[0, max)`. ","rand.pcg32.html#PCG32RNG.f32n","fn (PCG32RNG)"],["rand.pcg32"," f64n returns a pseudorandom `f64` value in range `[0, max)`. ","rand.pcg32.html#PCG32RNG.f64n","fn (PCG32RNG)"],["rand.pcg32"," f32_in_range returns a pseudorandom `f32` in range `[min, max)`. ","rand.pcg32.html#PCG32RNG.f32_in_range","fn (PCG32RNG)"],["rand.pcg32"," i64_in_range returns a pseudorandom `i64` in range `[min, max)`. ","rand.pcg32.html#PCG32RNG.f64_in_range","fn (PCG32RNG)"],["rand.seed"," time_seed_array returns the required number of u32s generated from system time.","rand.seed.html#time_seed_array","fn "],["rand.seed"," time_seed_32 returns a 32-bit seed generated from system time. ","rand.seed.html#time_seed_32","fn "],["rand.seed"," time_seed_64 returns a 64-bit seed generated from system time. ","rand.seed.html#time_seed_64","fn "],["rand.splitmix64"," SplitMix64RNG ported from http://xoshiro.di.unimi.it/splitmix64.c ","rand.splitmix64.html#SplitMix64RNG","struct "],["rand.splitmix64"," seed sets the seed of the accepting SplitMix64RNG to the given data  in little-","rand.splitmix64.html#SplitMix64RNG.seed","fn (SplitMix64RNG)"],["rand.splitmix64"," u32 updates the PRNG state and returns the next pseudorandom `u32`. ","rand.splitmix64.html#SplitMix64RNG.u32","fn (SplitMix64RNG)"],["rand.splitmix64"," u64 updates the PRNG state and returns the next pseudorandom `u64`. ","rand.splitmix64.html#SplitMix64RNG.u64","fn (SplitMix64RNG)"],["rand.splitmix64"," u32n returns a pseudorandom `u32` less than `bound`. ","rand.splitmix64.html#SplitMix64RNG.u32n","fn (SplitMix64RNG)"],["rand.splitmix64"," u64n returns a pseudorandom `u64` less than `bound`. ","rand.splitmix64.html#SplitMix64RNG.u64n","fn (SplitMix64RNG)"],["rand.splitmix64"," u32n returns a pseudorandom `u32` value that is guaranteed to be in range `[min","rand.splitmix64.html#SplitMix64RNG.u32_in_range","fn (SplitMix64RNG)"],["rand.splitmix64"," u64n returns a pseudorandom `u64` value that is guaranteed to be in range `[min","rand.splitmix64.html#SplitMix64RNG.u64_in_range","fn (SplitMix64RNG)"],["rand.splitmix64"," int returns a pseudorandom 32-bit (possibly negative) `int`. ","rand.splitmix64.html#SplitMix64RNG.int","fn (SplitMix64RNG)"],["rand.splitmix64"," i64 returns a pseudorandom 64-bit (possibly negative) `i64`. ","rand.splitmix64.html#SplitMix64RNG.i64","fn (SplitMix64RNG)"],["rand.splitmix64"," int31 returns a positive pseudorandom 31-bit `int`. ","rand.splitmix64.html#SplitMix64RNG.int31","fn (SplitMix64RNG)"],["rand.splitmix64"," int63 returns a positive pseudorandom 63-bit `i64`. ","rand.splitmix64.html#SplitMix64RNG.int63","fn (SplitMix64RNG)"],["rand.splitmix64"," intn returns a pseudorandom `int` in range `[0, max)`. ","rand.splitmix64.html#SplitMix64RNG.intn","fn (SplitMix64RNG)"],["rand.splitmix64"," i64n returns a pseudorandom `i64` in range `[0, max)`. ","rand.splitmix64.html#SplitMix64RNG.i64n","fn (SplitMix64RNG)"],["rand.splitmix64"," int_in_range returns a pseudorandom `int` in range `[min, max)`. ","rand.splitmix64.html#SplitMix64RNG.int_in_range","fn (SplitMix64RNG)"],["rand.splitmix64"," i64_in_range returns a pseudorandom `i64` in range `[min, max)`. ","rand.splitmix64.html#SplitMix64RNG.i64_in_range","fn (SplitMix64RNG)"],["rand.splitmix64"," f32 returns a pseudorandom `f32` value in range `[0, 1)`. ","rand.splitmix64.html#SplitMix64RNG.f32","fn (SplitMix64RNG)"],["rand.splitmix64"," f64 returns a pseudorandom `f64` value in range `[0, 1)`. ","rand.splitmix64.html#SplitMix64RNG.f64","fn (SplitMix64RNG)"],["rand.splitmix64"," f32n returns a pseudorandom `f32` value in range `[0, max)`. ","rand.splitmix64.html#SplitMix64RNG.f32n","fn (SplitMix64RNG)"],["rand.splitmix64"," f64n returns a pseudorandom `f64` value in range `[0, max)`. ","rand.splitmix64.html#SplitMix64RNG.f64n","fn (SplitMix64RNG)"],["rand.splitmix64"," f32_in_range returns a pseudorandom `f32` in range `[min, max)`. ","rand.splitmix64.html#SplitMix64RNG.f32_in_range","fn (SplitMix64RNG)"],["rand.splitmix64"," i64_in_range returns a pseudorandom `i64` in range `[min, max)`. ","rand.splitmix64.html#SplitMix64RNG.f64_in_range","fn (SplitMix64RNG)"],["rand.sys"," SysRNG is the PRNG provided by default in the libc implementiation that V uses.","rand.sys.html#SysRNG","struct "],["rand.sys"," r.seed() sets the seed of the accepting SysRNG to the given data. ","rand.sys.html#SysRNG.seed","fn (SysRNG)"],["rand.sys"," r.default_rand() exposes the default behavior of the system's RNG  (equivalent ","rand.sys.html#SysRNG.default_rand","fn (SysRNG)"],["rand.sys"," r.u32() returns a pseudorandom u32 value less than 2^32 ","rand.sys.html#SysRNG.u32","fn (SysRNG)"],["rand.sys"," r.u64() returns a pseudorandom u64 value less than 2^64 ","rand.sys.html#SysRNG.u64","fn (SysRNG)"],["rand.sys"," r.u32n(max) returns a pseudorandom u32 value that is guaranteed to be less than","rand.sys.html#SysRNG.u32n","fn (SysRNG)"],["rand.sys"," r.u64n(max) returns a pseudorandom u64 value that is guaranteed to be less than","rand.sys.html#SysRNG.u64n","fn (SysRNG)"],["rand.sys"," r.u32n(min, max) returns a pseudorandom u32 value that is guaranteed to be in [","rand.sys.html#SysRNG.u32_in_range","fn (SysRNG)"],["rand.sys"," r.u64n(min, max) returns a pseudorandom u64 value that is guaranteed to be in [","rand.sys.html#SysRNG.u64_in_range","fn (SysRNG)"],["rand.sys"," r.int() returns a pseudorandom 32-bit int (which may be negative) ","rand.sys.html#SysRNG.int","fn (SysRNG)"],["rand.sys"," r.i64() returns a pseudorandom 64-bit i64 (which may be negative) ","rand.sys.html#SysRNG.i64","fn (SysRNG)"],["rand.sys"," r.int31() returns a pseudorandom 31-bit int which is non-negative ","rand.sys.html#SysRNG.int31","fn (SysRNG)"],["rand.sys"," r.int63() returns a pseudorandom 63-bit int which is non-negative ","rand.sys.html#SysRNG.int63","fn (SysRNG)"],["rand.sys"," r.intn(max) returns a pseudorandom int that lies in [0, max) ","rand.sys.html#SysRNG.intn","fn (SysRNG)"],["rand.sys"," r.i64n(max) returns a pseudorandom i64 that lies in [0, max) ","rand.sys.html#SysRNG.i64n","fn (SysRNG)"],["rand.sys"," r.int_in_range(min, max) returns a pseudorandom int that lies in [min, max) ","rand.sys.html#SysRNG.int_in_range","fn (SysRNG)"],["rand.sys"," r.i64_in_range(min, max) returns a pseudorandom i64 that lies in [min, max) ","rand.sys.html#SysRNG.i64_in_range","fn (SysRNG)"],["rand.sys"," r.f32() returns a pseudorandom f32 value between 0.0 (inclusive) and 1.0 (exclu","rand.sys.html#SysRNG.f32","fn (SysRNG)"],["rand.sys"," r.f64() returns a pseudorandom f64 value between 0.0 (inclusive) and 1.0 (exclu","rand.sys.html#SysRNG.f64","fn (SysRNG)"],["rand.sys"," r.f32n() returns a pseudorandom f32 value in [0, max) ","rand.sys.html#SysRNG.f32n","fn (SysRNG)"],["rand.sys"," r.f64n() returns a pseudorandom f64 value in [0, max) ","rand.sys.html#SysRNG.f64n","fn (SysRNG)"],["rand.sys"," r.f32_in_range(min, max) returns a pseudorandom f32 that lies in [min, max) ","rand.sys.html#SysRNG.f32_in_range","fn (SysRNG)"],["rand.sys"," r.i64_in_range(min, max) returns a pseudorandom i64 that lies in [min, max) ","rand.sys.html#SysRNG.f64_in_range","fn (SysRNG)"],["rand.util"," sample_nr returns a sample of the array without replacement. This means the ind","rand.util.html#sample_nr","fn "],["rand.util"," sample_r returns a sample of the array with replacement. This means the element","rand.util.html#sample_r","fn "],["rand.util"," shuffle randomizes the first `n` items of an array in place (all if `n` is 0) ","rand.util.html#shuffle","fn "],["rand.wyrand"," WyRandRNG is a RNG based on the WyHash hashing algorithm. ","rand.wyrand.html#WyRandRNG","struct "],["rand.wyrand"," seed sets the seed, needs only two `u32`s in little-endian format as [lower, hi","rand.wyrand.html#WyRandRNG.seed","fn (WyRandRNG)"],["rand.wyrand"," u32 updates the PRNG state and returns the next pseudorandom `u32`. ","rand.wyrand.html#WyRandRNG.u32","fn (WyRandRNG)"],["rand.wyrand"," u64 updates the PRNG state and returns the next pseudorandom `u64`. ","rand.wyrand.html#WyRandRNG.u64","fn (WyRandRNG)"],["rand.wyrand"," u32n returns a pseudorandom `u32` less than `max`. ","rand.wyrand.html#WyRandRNG.u32n","fn (WyRandRNG)"],["rand.wyrand"," u64n returns a pseudorandom `u64` less than `max`. ","rand.wyrand.html#WyRandRNG.u64n","fn (WyRandRNG)"],["rand.wyrand"," u32n returns a pseudorandom `u32` value that is guaranteed to be in range `[min","rand.wyrand.html#WyRandRNG.u32_in_range","fn (WyRandRNG)"],["rand.wyrand"," u64n returns a pseudorandom `u64` value that is guaranteed to be in range `[min","rand.wyrand.html#WyRandRNG.u64_in_range","fn (WyRandRNG)"],["rand.wyrand"," int returns a (possibly negative) pseudorandom 32-bit `int`. ","rand.wyrand.html#WyRandRNG.int","fn (WyRandRNG)"],["rand.wyrand"," i64 returns a (possibly negative) pseudorandom 64-bit `i64`. ","rand.wyrand.html#WyRandRNG.i64","fn (WyRandRNG)"],["rand.wyrand"," int31 returns a positive pseudorandom 31-bit `int`. ","rand.wyrand.html#WyRandRNG.int31","fn (WyRandRNG)"],["rand.wyrand"," int63 returns a positive pseudorandom 63-bit `i64`. ","rand.wyrand.html#WyRandRNG.int63","fn (WyRandRNG)"],["rand.wyrand"," intn returns a pseudorandom `int` in range `[0, max)`. ","rand.wyrand.html#WyRandRNG.intn","fn (WyRandRNG)"],["rand.wyrand"," i64n returns a pseudorandom int that lies in `[0, max)`. ","rand.wyrand.html#WyRandRNG.i64n","fn (WyRandRNG)"],["rand.wyrand"," int_in_range returns a pseudorandom `int` in range `[min, max)`. ","rand.wyrand.html#WyRandRNG.int_in_range","fn (WyRandRNG)"],["rand.wyrand"," i64_in_range returns a pseudorandom `i64` in range `[min, max)`. ","rand.wyrand.html#WyRandRNG.i64_in_range","fn (WyRandRNG)"],["rand.wyrand"," f32 returns a pseudorandom `f32` value in range `[0, 1)`. ","rand.wyrand.html#WyRandRNG.f32","fn (WyRandRNG)"],["rand.wyrand"," f64 returns a pseudorandom `f64` value in range `[0, 1)`. ","rand.wyrand.html#WyRandRNG.f64","fn (WyRandRNG)"],["rand.wyrand"," f32n returns a pseudorandom `f32` value in range `[0, max)`. ","rand.wyrand.html#WyRandRNG.f32n","fn (WyRandRNG)"],["rand.wyrand"," f64n returns a pseudorandom `f64` value in range `[0, max)`. ","rand.wyrand.html#WyRandRNG.f64n","fn (WyRandRNG)"],["rand.wyrand"," f32_in_range returns a pseudorandom `f32` in range `[min, max)`. ","rand.wyrand.html#WyRandRNG.f32_in_range","fn (WyRandRNG)"],["rand.wyrand"," i64_in_range returns a pseudorandom `i64` in range `[min, max)`. ","rand.wyrand.html#WyRandRNG.f64_in_range","fn (WyRandRNG)"],["readline"," Readline is the key struct for reading and holding user input via a terminal.  ","readline.html#Readline","struct "],["readline"," Only use standard os.get_line  Need implementation for readline capabilities   ","readline.html#Readline.read_line_utf8","fn (Readline)"],["readline"," read_line does the same as `read_line_utf8` but returns user input as a `string","readline.html#Readline.read_line","fn (Readline)"],["readline"," read_line_utf8 blocks execution in a loop and awaits user input  characters fro","readline.html#read_line_utf8","fn "],["readline"," read_line does the same as `read_line_utf8` but returns user input as a `string","readline.html#read_line","fn "],["regex","","regex.html#RE","struct "],["regex"," compile_opt compile RE pattern string ","regex.html#RE.compile_opt","fn (RE)"],["regex"," find try to find the first match in the input string ","regex.html#RE.find","fn (RE)"],["regex"," find_all find all the non overlapping occurrences of the match pattern ","regex.html#RE.find_all","fn (RE)"],["regex"," find_all_str find all the non overlapping occurrences of the match pattern, ret","regex.html#RE.find_all_str","fn (RE)"],["regex"," find try to find the first match in the input string strarting from start index","regex.html#RE.find_from","fn (RE)"],["regex"," get_code return the compiled code as regex string, note: may be different from ","regex.html#RE.get_code","fn (RE)"],["regex"," get_group_by_id get a group boundaries by its id ","regex.html#RE.get_group_bounds_by_id","fn (RE)"],["regex"," get_group_bounds_by_name get a group boundaries by its name ","regex.html#RE.get_group_bounds_by_name","fn (RE)"],["regex"," get_group_by_id get a group string by its id ","regex.html#RE.get_group_by_id","fn (RE)"],["regex"," get_group_by_name get a group boundaries by its name ","regex.html#RE.get_group_by_name","fn (RE)"],["regex"," get_group_list return a list of Re_group for the found groups ","regex.html#RE.get_group_list","fn (RE)"],["regex"," get_query return a string with a reconstruction of the query starting from the ","regex.html#RE.get_query","fn (RE)"],["regex","","regex.html#RE.match_base","fn (RE)"],["regex"," match_string Match the pattern with the in_txt string ","regex.html#RE.match_string","fn (RE)"],["regex"," replace return a string where the matches are replaced with the repl_str string","regex.html#RE.replace","fn (RE)"],["regex"," replace_by_fn return a string where the matches are replaced with the string fr","regex.html#RE.replace_by_fn","fn (RE)"],["regex"," replace_simple return a string where the matches are replaced with the replace ","regex.html#RE.replace_simple","fn (RE)"],["regex","","regex.html#FnValidator","type "],["regex","","regex.html#FnLog","type "],["regex"," new_regex create a RE of small size, usually sufficient for ordinary use ","regex.html#new","fn "],["regex"," regex_opt create new RE object from RE pattern string ","regex.html#regex_opt","fn "],["regex"," regex create a regex object from the query string, retunr RE object and errors ","regex.html#regex_base","fn "],["regex","","regex.html#Re_group","struct "],["regex"," type of function used for custom replace  in_txt  source text  start   index of","regex.html#FnReplace","type "],["runtime"," nr_jobs returns the same as `nr_cpus` with the difference that if an  environme","runtime.html#nr_jobs","fn "],["runtime"," is_32bit returns true if the current executable is running on a 32 bit system. ","runtime.html#is_32bit","fn "],["runtime"," is_64bit returns true if the current executable is running on a 64 bit system. ","runtime.html#is_64bit","fn "],["runtime"," is_little_endian returns true if the current executable is running on a little-","runtime.html#is_little_endian","fn "],["runtime"," is_big_endian returns true if the current executable is running on a big-endian","runtime.html#is_big_endian","fn "],["runtime","","runtime.html#nr_cpus","fn "],["semver"," * Structures.  `Version` represents a semantic version in semver format. ","semver.html#Version","struct "],["semver"," * Transformation.  increment returns a `Version` structure with incremented val","semver.html#Version.increment","fn (Version)"],["semver"," * Comparison.  satisfies returns `true` if the `input` expression can be valida","semver.html#Version.satisfies","fn (Version)"],["semver"," eq returns `true` if `v1` is equal to `v2`. ","semver.html#Version.eq","fn (Version)"],["semver"," gt returns `true` if `v1` is greater than `v2`. ","semver.html#Version.gt","fn (Version)"],["semver"," lt returns `true` if `v1` is less than `v2`. ","semver.html#Version.lt","fn (Version)"],["semver"," ge returns `true` if `v1` is greater than or equal to `v2`. ","semver.html#Version.ge","fn (Version)"],["semver"," le returns `true` if `v1` is less than or equal to `v2`. ","semver.html#Version.le","fn (Version)"],["semver"," Increment represents the different types of version increments. ","semver.html#Increment","enum "],["semver"," * Constructor.  from returns a `Version` structure parsed from `input` `string`","semver.html#from","fn "],["semver"," build returns a `Version` structure with given `major`, `minor` and `patch` ver","semver.html#build","fn "],["semver"," * Utilites.  coerce converts the `input` version to a `Version` struct.  coerce","semver.html#coerce","fn "],["semver"," is_valid returns `true` if the `input` `string` can be converted to  a  (semant","semver.html#is_valid","fn "],["sokol.audio"," ","sokol.audio.html#FNStreamingCB","type "],["sokol.audio","","sokol.audio.html#FNStreamingCB.str","fn (FNStreamingCB)"],["sokol.audio","","sokol.audio.html#FnStreamingCBWithUserData","type "],["sokol.audio","","sokol.audio.html#FnStreamingCBWithUserData.str","fn (FnStreamingCBWithUserData)"],["sokol.audio"," ","sokol.audio.html#C.saudio_desc","struct "],["sokol.audio","","sokol.audio.html#setup","fn "],["sokol.audio"," audio.shutdown - shutdown sokol-audio ","sokol.audio.html#shutdown","fn "],["sokol.audio"," audio.is_valid - true after setup if audio backend was successfully initialized","sokol.audio.html#is_valid","fn "],["sokol.audio"," audio.userdata - return the saudio_desc.user_data pointer ","sokol.audio.html#user_data","fn "],["sokol.audio"," audio.query - return a copy of the original saudio_desc struct ","sokol.audio.html#query","fn "],["sokol.audio"," audio.sample_rate - actual sample rate ","sokol.audio.html#sample_rate","fn "],["sokol.audio"," audio.buffer_frames - return actual backend buffer size in number of frames ","sokol.audio.html#buffer_frames","fn "],["sokol.audio"," audio.channels - actual number of channels ","sokol.audio.html#channels","fn "],["sokol.audio"," audio.expect - get current number of frames to fill packet queue; use in combin","sokol.audio.html#expect","fn "],["sokol.audio"," audio.push - push sample frames from main thread, returns number of frames actu","sokol.audio.html#push","fn "],["sokol.audio"," ","sokol.audio.html#fclamp","fn "],["sokol.audio","","sokol.audio.html#min","fn "],["sokol.audio","","sokol.audio.html#max","fn "],["sokol.gfx","","sokol.gfx.html#Backend","enum "],["sokol.gfx","","sokol.gfx.html#PixelFormat","enum "],["sokol.gfx","","sokol.gfx.html#ResourceState","enum "],["sokol.gfx","","sokol.gfx.html#Usage","enum "],["sokol.gfx","","sokol.gfx.html#BufferType","enum "],["sokol.gfx","","sokol.gfx.html#IndexType","enum "],["sokol.gfx","","sokol.gfx.html#ImageType","enum "],["sokol.gfx","","sokol.gfx.html#CubeFace","enum "],["sokol.gfx","","sokol.gfx.html#ShaderStage","enum "],["sokol.gfx","","sokol.gfx.html#PrimitiveType","enum "],["sokol.gfx","","sokol.gfx.html#Filter","enum "],["sokol.gfx","","sokol.gfx.html#Wrap","enum "],["sokol.gfx","","sokol.gfx.html#BorderColor","enum "],["sokol.gfx","","sokol.gfx.html#VertexFormat","enum "],["sokol.gfx","","sokol.gfx.html#VertexStep","enum "],["sokol.gfx","","sokol.gfx.html#UniformType","enum "],["sokol.gfx","","sokol.gfx.html#CullMode","enum "],["sokol.gfx","","sokol.gfx.html#FaceWinding","enum "],["sokol.gfx","","sokol.gfx.html#CompareFunc","enum "],["sokol.gfx","","sokol.gfx.html#StencilOp","enum "],["sokol.gfx","","sokol.gfx.html#BlendFactor","enum "],["sokol.gfx","","sokol.gfx.html#BlendOp","enum "],["sokol.gfx","","sokol.gfx.html#ColorMask","enum "],["sokol.gfx","","sokol.gfx.html#Action","enum "],["sokol.gfx"," setup and misc functions ","sokol.gfx.html#setup","fn "],["sokol.gfx","","sokol.gfx.html#shutdown","fn "],["sokol.gfx","","sokol.gfx.html#reset_state_cache","fn "],["sokol.gfx"," resource creation, destruction and updating ","sokol.gfx.html#make_buffer","fn "],["sokol.gfx","","sokol.gfx.html#make_image","fn "],["sokol.gfx","","sokol.gfx.html#make_shader","fn "],["sokol.gfx","","sokol.gfx.html#make_pipeline","fn "],["sokol.gfx","","sokol.gfx.html#make_pass","fn "],["sokol.gfx","","sokol.gfx.html#destroy_buffer","fn "],["sokol.gfx","","sokol.gfx.html#destroy_image","fn "],["sokol.gfx","","sokol.gfx.html#destroy_shader","fn "],["sokol.gfx","","sokol.gfx.html#destroy_pipeline","fn "],["sokol.gfx","","sokol.gfx.html#destroy_pass","fn "],["sokol.gfx","","sokol.gfx.html#update_buffer","fn "],["sokol.gfx","","sokol.gfx.html#update_image","fn "],["sokol.gfx","","sokol.gfx.html#append_buffer","fn "],["sokol.gfx","","sokol.gfx.html#query_buffer_overflow","fn "],["sokol.gfx"," rendering functions ","sokol.gfx.html#begin_default_pass","fn "],["sokol.gfx","","sokol.gfx.html#begin_pass","fn "],["sokol.gfx","","sokol.gfx.html#apply_viewport","fn "],["sokol.gfx","","sokol.gfx.html#apply_scissor_rect","fn "],["sokol.gfx","","sokol.gfx.html#apply_pipeline","fn "],["sokol.gfx","","sokol.gfx.html#apply_bindings","fn "],["sokol.gfx","","sokol.gfx.html#apply_uniforms","fn "],["sokol.gfx","","sokol.gfx.html#draw","fn "],["sokol.gfx","","sokol.gfx.html#end_pass","fn "],["sokol.gfx","","sokol.gfx.html#commit","fn "],["sokol.gfx"," getting information ","sokol.gfx.html#query_desc","fn "],["sokol.gfx","","sokol.gfx.html#query_backend","fn "],["sokol.gfx","","sokol.gfx.html#query_features","fn "],["sokol.gfx","","sokol.gfx.html#query_limits","fn "],["sokol.gfx","","sokol.gfx.html#query_pixelformat","fn "],["sokol.gfx"," get current state of a resource (INITIAL, ALLOC, VALID, FAILED, INVALID) ","sokol.gfx.html#query_buffer_state","fn "],["sokol.gfx","","sokol.gfx.html#query_image_state","fn "],["sokol.gfx","","sokol.gfx.html#query_shader_state","fn "],["sokol.gfx","","sokol.gfx.html#query_pipeline_state","fn "],["sokol.gfx","","sokol.gfx.html#query_pass_state","fn "],["sokol.gfx"," get runtime information about a resource ","sokol.gfx.html#query_buffer_info","fn "],["sokol.gfx","","sokol.gfx.html#query_image_info","fn "],["sokol.gfx","","sokol.gfx.html#query_shader_info","fn "],["sokol.gfx","","sokol.gfx.html#query_pipeline_info","fn "],["sokol.gfx","","sokol.gfx.html#query_pass_info","fn "],["sokol.gfx"," get resource creation desc struct with their default values replaced ","sokol.gfx.html#query_buffer_defaults","fn "],["sokol.gfx","","sokol.gfx.html#query_image_defaults","fn "],["sokol.gfx","","sokol.gfx.html#query_shader_defaults","fn "],["sokol.gfx","","sokol.gfx.html#query_pipeline_defaults","fn "],["sokol.gfx","","sokol.gfx.html#query_pass_defaults","fn "],["sokol.gfx"," rendering contexts (optional) ","sokol.gfx.html#setup_context","fn "],["sokol.gfx","","sokol.gfx.html#activate_context","fn "],["sokol.gfx","","sokol.gfx.html#discard_context","fn "],["sokol.gfx","","sokol.gfx.html#C.sg_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_context_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_gl_context_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_metal_context_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_d3d11_context_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_color_state","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_pipeline_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_pipeline_info","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_pipeline","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_pipeline.free","fn (C.sg_pipeline)"],["sokol.gfx","","sokol.gfx.html#C.sg_bindings","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_bindings.set_vert_image","fn (C.sg_bindings)"],["sokol.gfx","","sokol.gfx.html#C.sg_bindings.set_frag_image","fn (C.sg_bindings)"],["sokol.gfx","","sokol.gfx.html#C.sg_bindings.update_vert_buffer","fn (C.sg_bindings)"],["sokol.gfx","","sokol.gfx.html#C.sg_bindings.append_vert_buffer","fn (C.sg_bindings)"],["sokol.gfx","","sokol.gfx.html#C.sg_bindings.update_index_buffer","fn (C.sg_bindings)"],["sokol.gfx","","sokol.gfx.html#C.sg_bindings.append_index_buffer","fn (C.sg_bindings)"],["sokol.gfx","","sokol.gfx.html#C.sg_shader_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_shader_desc.set_vert_src","fn (C.sg_shader_desc)"],["sokol.gfx","","sokol.gfx.html#C.sg_shader_desc.set_frag_src","fn (C.sg_shader_desc)"],["sokol.gfx","","sokol.gfx.html#C.sg_shader_desc.set_vert_image","fn (C.sg_shader_desc)"],["sokol.gfx","","sokol.gfx.html#C.sg_shader_desc.set_frag_image","fn (C.sg_shader_desc)"],["sokol.gfx","","sokol.gfx.html#C.sg_shader_desc.set_vert_uniform_block_size","fn (C.sg_shader_desc)"],["sokol.gfx","","sokol.gfx.html#C.sg_shader_desc.set_frag_uniform_block_size","fn (C.sg_shader_desc)"],["sokol.gfx","","sokol.gfx.html#C.sg_shader_desc.set_vert_uniform","fn (C.sg_shader_desc)"],["sokol.gfx","","sokol.gfx.html#C.sg_shader_desc.set_frag_uniform","fn (C.sg_shader_desc)"],["sokol.gfx","","sokol.gfx.html#C.sg_shader_desc.make_shader","fn (C.sg_shader_desc)"],["sokol.gfx","","sokol.gfx.html#C.sg_shader_attr_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_shader_stage_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_shader_stage_desc.set_image","fn (C.sg_shader_stage_desc)"],["sokol.gfx","","sokol.gfx.html#C.sg_shader_uniform_block_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_shader_uniform_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_shader_image_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_shader_info","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_context","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_range","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_color","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_shader","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_shader.free","fn (C.sg_shader)"],["sokol.gfx","","sokol.gfx.html#C.sg_pass_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_pass_info","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_pass_action","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_pass","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_pass.free","fn (C.sg_pass)"],["sokol.gfx","","sokol.gfx.html#C.sg_buffer_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_buffer_info","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_buffer","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_buffer.free","fn (C.sg_buffer)"],["sokol.gfx","","sokol.gfx.html#DepthLayers","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_image_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_image_info","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_image","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_image.free","fn (C.sg_image)"],["sokol.gfx","","sokol.gfx.html#C.sg_image_data","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_features","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_limits","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_layout_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_buffer_layout_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_vertex_attr_desc","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_stencil_state","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_depth_state","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_stencil_face_state","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_blend_state","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_color_attachment_action","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_depth_attachment_action","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_stencil_attachment_action","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_pixelformat_info","struct "],["sokol.gfx","","sokol.gfx.html#C.sg_pass_attachment_desc","struct "],["sokol.gfx","","sokol.gfx.html#create_clear_pass","fn "],["sokol.sapp","","sokol.sapp.html#EventType","enum "],["sokol.sapp","","sokol.sapp.html#MouseButton","enum "],["sokol.sapp","","sokol.sapp.html#Modifier","enum "],["sokol.sapp","","sokol.sapp.html#KeyCode","enum "],["sokol.sapp","","sokol.sapp.html#create_desc","fn "],["sokol.sapp"," returns true after sokol-app has been initialized ","sokol.sapp.html#isvalid","fn "],["sokol.sapp"," returns the current framebuffer width in pixels ","sokol.sapp.html#width","fn "],["sokol.sapp"," returns the current framebuffer height in pixels ","sokol.sapp.html#height","fn "],["sokol.sapp"," returns true when high_dpi was requested and actually running in a high-dpi sce","sokol.sapp.html#high_dpi","fn "],["sokol.sapp"," returns the dpi scaling factor (window pixels to framebuffer pixels) ","sokol.sapp.html#dpi_scale","fn "],["sokol.sapp"," show or hide the mobile device onscreen keyboard ","sokol.sapp.html#show_keyboard","fn "],["sokol.sapp"," return true if the mobile device onscreen keyboard is currently shown ","sokol.sapp.html#keyboard_shown","fn "],["sokol.sapp"," show or hide the mouse cursor ","sokol.sapp.html#show_mouse","fn "],["sokol.sapp"," show or hide the mouse cursor ","sokol.sapp.html#mouse_shown","fn "],["sokol.sapp","","sokol.sapp.html#lock_mouse","fn "],["sokol.sapp","","sokol.sapp.html#mouse_locked","fn "],["sokol.sapp"," return the userdata pointer optionally provided in sapp_desc ","sokol.sapp.html#userdata","fn "],["sokol.sapp"," return a copy of the sapp_desc structure ","sokol.sapp.html#query_desc","fn "],["sokol.sapp"," initiate a \"soft quit\" (sends SAPP_EVENTTYPE_QUIT_REQUESTED) ","sokol.sapp.html#request_quit","fn "],["sokol.sapp"," cancel a pending quit (when SAPP_EVENTTYPE_QUIT_REQUESTED has been received) ","sokol.sapp.html#cancel_quit","fn "],["sokol.sapp"," intiate a \"hard quit\" (quit application without sending SAPP_EVENTTYPE_QUIT_R","sokol.sapp.html#quit","fn "],["sokol.sapp"," call from inside event callback to consume the current event (don't forward to ","sokol.sapp.html#consume_event","fn "],["sokol.sapp"," get the current frame counter (for comparison with sapp_event.frame_count) ","sokol.sapp.html#frame_count","fn "],["sokol.sapp"," write string into clipboard ","sokol.sapp.html#set_clipboard_string","fn "],["sokol.sapp"," read string from clipboard (usually during SAPP_EVENTTYPE_CLIPBOARD_PASTED) ","sokol.sapp.html#get_clipboard_string","fn "],["sokol.sapp"," special run-function for SOKOL_NO_ENTRY (in standard mode this is an empty stub","sokol.sapp.html#run","fn "],["sokol.sapp"," GL: return true when GLES2 fallback is active (to detect fallback from GLES3) ","sokol.sapp.html#gles2","fn "],["sokol.sapp"," HTML5: enable or disable the hardwired \"Leave Site?\" dialog box ","sokol.sapp.html#html5_ask_leave_site","fn "],["sokol.sapp"," Metal: get ARC-bridged pointer to Metal device object ","sokol.sapp.html#metal_get_device","fn "],["sokol.sapp"," Metal: get ARC-bridged pointer to this frame's renderpass descriptor ","sokol.sapp.html#metal_get_renderpass_descriptor","fn "],["sokol.sapp"," Metal: get ARC-bridged pointer to current drawable ","sokol.sapp.html#metal_get_drawable","fn "],["sokol.sapp"," macOS: get ARC-bridged pointer to macOS NSWindow ","sokol.sapp.html#macos_get_window","fn "],["sokol.sapp"," iOS: get ARC-bridged pointer to iOS UIWindow ","sokol.sapp.html#ios_get_window","fn "],["sokol.sapp"," D3D11: get pointer to ID3D11Device object ","sokol.sapp.html#d3d11_get_device","fn "],["sokol.sapp"," D3D11: get pointer to ID3D11DeviceContext object ","sokol.sapp.html#d3d11_get_device_context","fn "],["sokol.sapp"," D3D11: get pointer to ID3D11RenderTargetView object ","sokol.sapp.html#d3d11_get_render_target_view","fn "],["sokol.sapp"," D3D11: get pointer to ID3D11DepthStencilView ","sokol.sapp.html#d3d11_get_depth_stencil_view","fn "],["sokol.sapp"," Win32: get the HWND window handle ","sokol.sapp.html#win32_get_hwnd","fn "],["sokol.sapp"," Android: get native activity handle ","sokol.sapp.html#android_get_native_activity","fn "],["sokol.sapp","","sokol.sapp.html#C.sapp_desc","struct "],["sokol.sapp","","sokol.sapp.html#Event","struct "],["sokol.sapp","","sokol.sapp.html#C.sapp_event","struct "],["sokol.sapp","","sokol.sapp.html#C.sapp_event.str","fn (C.sapp_event)"],["sokol.sapp","","sokol.sapp.html#C.sapp_touchpoint","struct "],["sokol.sfons","","sokol.sfons.html#create","fn "],["sokol.sfons","","sokol.sfons.html#destroy","fn "],["sokol.sfons","","sokol.sfons.html#rgba","fn "],["sokol.sfons","","sokol.sfons.html#flush","fn "],["sokol.sgl"," setup/shutdown/misc ","sokol.sgl.html#setup","fn "],["sokol.sgl","","sokol.sgl.html#shutdown","fn "],["sokol.sgl","","sokol.sgl.html#error","fn "],["sokol.sgl","","sokol.sgl.html#defaults","fn "],["sokol.sgl","","sokol.sgl.html#rad","fn "],["sokol.sgl","","sokol.sgl.html#deg","fn "],["sokol.sgl"," create and destroy pipeline objects ","sokol.sgl.html#make_pipeline","fn "],["sokol.sgl","","sokol.sgl.html#destroy_pipeline","fn "],["sokol.sgl"," render state functions ","sokol.sgl.html#viewport","fn "],["sokol.sgl","","sokol.sgl.html#scissor_rect","fn "],["sokol.sgl","","sokol.sgl.html#enable_texture","fn "],["sokol.sgl","","sokol.sgl.html#disable_texture","fn "],["sokol.sgl","","sokol.sgl.html#texture","fn "],["sokol.sgl"," pipeline stack functions ","sokol.sgl.html#default_pipeline","fn "],["sokol.sgl","","sokol.sgl.html#load_pipeline","fn "],["sokol.sgl","","sokol.sgl.html#push_pipeline","fn "],["sokol.sgl","","sokol.sgl.html#pop_pipeline","fn "],["sokol.sgl"," matrix stack functions ","sokol.sgl.html#matrix_mode_modelview","fn "],["sokol.sgl","","sokol.sgl.html#matrix_mode_projection","fn "],["sokol.sgl","","sokol.sgl.html#matrix_mode_texture","fn "],["sokol.sgl","","sokol.sgl.html#load_identity","fn "],["sokol.sgl","","sokol.sgl.html#load_matrix","fn "],["sokol.sgl","","sokol.sgl.html#load_transpose_matrix","fn "],["sokol.sgl","","sokol.sgl.html#mult_matrix","fn "],["sokol.sgl","","sokol.sgl.html#mult_transpose_matrix","fn "],["sokol.sgl","","sokol.sgl.html#rotate","fn "],["sokol.sgl","","sokol.sgl.html#scale","fn "],["sokol.sgl","","sokol.sgl.html#translate","fn "],["sokol.sgl","","sokol.sgl.html#frustum","fn "],["sokol.sgl","","sokol.sgl.html#ortho","fn "],["sokol.sgl","","sokol.sgl.html#perspective","fn "],["sokol.sgl","","sokol.sgl.html#lookat","fn "],["sokol.sgl","","sokol.sgl.html#push_matrix","fn "],["sokol.sgl","","sokol.sgl.html#pop_matrix","fn "],["sokol.sgl"," these functions only set the internal 'current texcoord / color' (valid inside ","sokol.sgl.html#t2f","fn "],["sokol.sgl","","sokol.sgl.html#c3f","fn "],["sokol.sgl","","sokol.sgl.html#c4f","fn "],["sokol.sgl","","sokol.sgl.html#c3b","fn "],["sokol.sgl","","sokol.sgl.html#c4b","fn "],["sokol.sgl","","sokol.sgl.html#c1i","fn "],["sokol.sgl"," define primitives, each begin/end is one draw command ","sokol.sgl.html#begin_points","fn "],["sokol.sgl","","sokol.sgl.html#begin_lines","fn "],["sokol.sgl","","sokol.sgl.html#begin_line_strip","fn "],["sokol.sgl","","sokol.sgl.html#begin_triangles","fn "],["sokol.sgl","","sokol.sgl.html#begin_triangle_strip","fn "],["sokol.sgl","","sokol.sgl.html#begin_quads","fn "],["sokol.sgl","","sokol.sgl.html#v2f","fn "],["sokol.sgl","","sokol.sgl.html#v3f","fn "],["sokol.sgl","","sokol.sgl.html#v2f_t2f","fn "],["sokol.sgl","","sokol.sgl.html#v3f_t2f","fn "],["sokol.sgl","","sokol.sgl.html#v2f_c3f","fn "],["sokol.sgl","","sokol.sgl.html#v2f_c3b","fn "],["sokol.sgl","","sokol.sgl.html#v2f_c4f","fn "],["sokol.sgl","","sokol.sgl.html#v2f_c4b","fn "],["sokol.sgl","","sokol.sgl.html#v2f_c1i","fn "],["sokol.sgl","","sokol.sgl.html#v3f_c3f","fn "],["sokol.sgl","","sokol.sgl.html#v3f_c3b","fn "],["sokol.sgl","","sokol.sgl.html#v3f_c4f","fn "],["sokol.sgl","","sokol.sgl.html#v3f_c4b","fn "],["sokol.sgl","","sokol.sgl.html#v3f_c1i","fn "],["sokol.sgl","","sokol.sgl.html#v2f_t2f_c3f","fn "],["sokol.sgl","","sokol.sgl.html#v2f_t2f_c3b","fn "],["sokol.sgl","","sokol.sgl.html#v2f_t2f_c4f","fn "],["sokol.sgl","","sokol.sgl.html#v2f_t2f_c4b","fn "],["sokol.sgl","","sokol.sgl.html#v2f_t2f_c1i","fn "],["sokol.sgl","","sokol.sgl.html#v3f_t2f_c3f","fn "],["sokol.sgl","","sokol.sgl.html#v3f_t2f_c3b","fn "],["sokol.sgl","","sokol.sgl.html#v3f_t2f_c4f","fn "],["sokol.sgl","","sokol.sgl.html#v3f_t2f_c4b","fn "],["sokol.sgl","","sokol.sgl.html#v3f_t2f_c1i","fn "],["sokol.sgl","","sokol.sgl.html#end","fn "],["sokol.sgl"," render everything ","sokol.sgl.html#draw","fn "],["sokol.sgl"," should be in a proper module ","sokol.sgl.html#SglError","enum "],["sokol.sgl","","sokol.sgl.html#C.sgl_pipeline","struct "],["sokol.sgl","","sokol.sgl.html#C.sgl_desc_t","struct "],["sqlite"," ","sqlite.html#DB","struct "],["sqlite","","sqlite.html#DB.str","fn (DB)"],["sqlite"," close Closes the DB.  TODO: For all functions, determine whether the connection","sqlite.html#DB.close","fn (DB)"],["sqlite"," Returns last insert rowid  https://www.sqlite.org/c3ref/last_insert_rowid.html ","sqlite.html#DB.last_insert_rowid","fn (DB)"],["sqlite"," Returns a single cell with value int. ","sqlite.html#DB.q_int","fn (DB)"],["sqlite"," Returns a single cell with value string. ","sqlite.html#DB.q_string","fn (DB)"],["sqlite"," Execute the query on db, return an array of all the results, alongside any resu","sqlite.html#DB.exec","fn (DB)"],["sqlite"," Execute a query, handle error code  Return the first row from the resulting tab","sqlite.html#DB.exec_one","fn (DB)"],["sqlite"," In case you don't expect any result, but still want an error code  e.g. INSERT ","sqlite.html#DB.exec_none","fn (DB)"],["sqlite","","sqlite.html#DB.insert","fn (DB)"],["sqlite","","sqlite.html#DB.create_table","fn (DB)"],["sqlite","","sqlite.html#Row","struct "],["sqlite","","sqlite.html#connect","fn "],["stbi","","stbi.html#Image","struct "],["stbi","","stbi.html#Image.free","fn (Image)"],["stbi","","stbi.html#load","fn "],["stbi","","stbi.html#load_from_memory","fn "],["stbi","","stbi.html#set_flip_vertically_on_load","fn "],["strconv"," atof64 return a f64 from a string doing a parsing operation ","strconv.html#atof64","fn "],["strconv"," atof_quick return a f64 number from a string in a quick way ","strconv.html#atof_quick","fn "],["strconv","","strconv.html#byte_to_lower","fn "],["strconv"," common_parse_uint is called by parse_uint and allows the parsing  to stop on no","strconv.html#common_parse_uint","fn "],["strconv"," the first returned value contains the parsed value,  the second returned value ","strconv.html#common_parse_uint2","fn "],["strconv"," parse_uint is like parse_int but for unsigned numbers. ","strconv.html#parse_uint","fn "],["strconv"," common_parse_int is called by parse int and allows the parsing  to stop on non ","strconv.html#common_parse_int","fn "],["strconv"," parse_int interprets a string s in the given base (0, 2 to 36) and  bit size (0","strconv.html#parse_int","fn "],["strconv"," atoi is equivalent to parse_int(s, 10, 0), converted to type int. ","strconv.html#atoi","fn "],["strconv","","strconv.html#Dec32","type "],["strconv"," max 46 char  -3.40282346638528859811704183484516925440e+38 ","strconv.html#Dec32.get_string_32","fn (Dec32)"],["strconv","=============================================================================  S","strconv.html#f32_to_str","fn "],["strconv"," f32_to_str return a string in scientific notation with max n_digit after the do","strconv.html#f32_to_str_pad","fn "],["strconv","=============================================================================  S","strconv.html#f64_to_str","fn "],["strconv"," f64_to_str return a string in scientific notation with max n_digit after the do","strconv.html#f64_to_str_pad","fn "],["strconv","","strconv.html#Align_text","enum "],["strconv"," max float 1.797693134862315708145274237317043567981e+308 ","strconv.html#BF_param","struct "],["strconv","","strconv.html#format_str","fn "],["strconv"," strings.Builder version of format_str ","strconv.html#format_str_sb","fn "],["strconv"," format_dec_sb format a u64 ","strconv.html#format_dec_sb","fn "],["strconv","","strconv.html#f64_to_str_lnd1","fn "],["strconv"," strings.Builder version of format_fl ","strconv.html#format_fl","fn "],["strconv","","strconv.html#format_es","fn "],["strconv","","strconv.html#remove_tail_zeros","fn "],["strconv","","strconv.html#ftoa_64","fn "],["strconv","","strconv.html#ftoa_long_64","fn "],["strconv","","strconv.html#ftoa_32","fn "],["strconv","","strconv.html#ftoa_long_32","fn "],["strconv","","strconv.html#format_int","fn "],["strconv"," format_uint returns the string representation of the number n in base `radix`  ","strconv.html#format_uint","fn "],["strconv"," The structure is filled by parser, then given to converter. ","strconv.html#PrepNumber","struct "],["strconv","","strconv.html#Float64u","struct "],["strconv","","strconv.html#Float32u","struct "],["strconv"," decimal_len_32 return the number of decimal digits of the input ","strconv.html#decimal_len_32","fn "],["strconv"," decimal_len_64 return the number of decimal digits of the input ","strconv.html#decimal_len_64","fn "],["strconv"," TODO: Investigate precision issues  f32_to_str_l return a string with the f32 c","strconv.html#f32_to_str_l","fn "],["strconv","","strconv.html#f32_to_str_l_no_dot","fn "],["strconv","","strconv.html#f64_to_str_l","fn "],["strconv","","strconv.html#f64_to_str_l_no_dot","fn "],["strconv"," f64_to_str_l return a string with the f64 converted in a string in decimal nota","strconv.html#fxx_to_str_l_parse","fn "],["strconv"," f64_to_str_l return a string with the f64 converted in a string in decimal nota","strconv.html#fxx_to_str_l_parse_no_dot","fn "],["strconv"," dec_digits return the number of decimal digit of an u64 ","strconv.html#dec_digits","fn "],["strconv","","strconv.html#v_printf","fn "],["strconv","","strconv.html#v_sprintf","fn "],["strconv"," strings.Builder version of format_fl ","strconv.html#format_fl_old","fn "],["strconv","","strconv.html#format_es_old","fn "],["strconv","","strconv.html#remove_tail_zeros_old","fn "],["strconv"," max int64 9223372036854775807 ","strconv.html#format_dec_old","fn "],["strings"," strings.Builder is used to efficiently append many strings to a large  dynamica","strings.html#Builder","type "],["strings"," write_ptr writes `len` bytes provided byteptr to the accumulated buffer ","strings.html#Builder.write_ptr","fn (Builder)"],["strings"," write_b appends a single `data` byte to the accumulated buffer ","strings.html#Builder.write_b","fn (Builder)"],["strings"," write implements the Writer interface ","strings.html#Builder.write","fn (Builder)"],["strings","","strings.html#Builder.byte_at","fn (Builder)"],["strings"," write appends the string `s` to the buffer ","strings.html#Builder.write_string","fn (Builder)"],["strings"," go_back discards the last `n` bytes from the buffer ","strings.html#Builder.go_back","fn (Builder)"],["strings"," cut_last cuts the last `n` bytes from the buffer and returns them ","strings.html#Builder.cut_last","fn (Builder)"],["strings"," cut_to cuts the string after `pos` and returns it.  if `pos` is superior to bui","strings.html#Builder.cut_to","fn (Builder)"],["strings"," go_back_to resets the buffer to the given position `pos`  NB: pos should be < t","strings.html#Builder.go_back_to","fn (Builder)"],["strings"," writeln appends the string `s`, and then a newline character. ","strings.html#Builder.writeln","fn (Builder)"],["strings"," buf == 'hello world'  last_n(5) returns 'world' ","strings.html#Builder.last_n","fn (Builder)"],["strings"," buf == 'hello world'  after(6) returns 'world' ","strings.html#Builder.after","fn (Builder)"],["strings"," str returns a copy of all of the accumulated buffer content.  NB: after a call ","strings.html#Builder.str","fn (Builder)"],["strings"," free - manually free the contents of the buffer ","strings.html#Builder.free","fn (Builder)"],["strings"," new_builder returns a new string builder, with an initial capacity of `initial_","strings.html#new_builder","fn "],["strings"," #-js  use levenshtein distance algorithm to calculate  the distance between bet","strings.html#levenshtein_distance","fn "],["strings"," use levenshtein distance algorithm to calculate  how similar two strings are as","strings.html#levenshtein_distance_percentage","fn "],["strings"," implementation of Sørensen–Dice coefficient.  find the similarity between tw","strings.html#dice_coefficient","fn "],["strings"," strings.repeat - fill a string with `n` repetitions of the character `c` ","strings.html#repeat","fn "],["strings"," strings.repeat_string - gives you `n` repetitions of the substring `s`  NB: str","strings.html#repeat_string","fn "],["strings.textscanner"," TextScanner simplifies writing small scanners/parsers  by providing safe method","strings.textscanner.html#TextScanner","struct "],["strings.textscanner"," free frees all allocated resources. ","strings.textscanner.html#TextScanner.free","fn (TextScanner)"],["strings.textscanner"," remaining returns how many characters remain from current position. ","strings.textscanner.html#TextScanner.remaining","fn (TextScanner)"],["strings.textscanner"," next returns the next character code from the input text.  next returns `-1` if","strings.textscanner.html#TextScanner.next","fn (TextScanner)"],["strings.textscanner"," skip skips one character ahead; `skip()` is slightly faster than `.next()`.  `s","strings.textscanner.html#TextScanner.skip","fn (TextScanner)"],["strings.textscanner"," skip_n skips ahead `n` characters, stopping at the end of the input. ","strings.textscanner.html#TextScanner.skip_n","fn (TextScanner)"],["strings.textscanner"," peek returns the *next* character code from the input text.  peek returns `-1` ","strings.textscanner.html#TextScanner.peek","fn (TextScanner)"],["strings.textscanner"," peek_n returns the character code from the input text at position + `n`.  peek_","strings.textscanner.html#TextScanner.peek_n","fn (TextScanner)"],["strings.textscanner"," back goes back one character from the current scanner position. ","strings.textscanner.html#TextScanner.back","fn (TextScanner)"],["strings.textscanner"," back_n goes back `n` characters from the current scanner position. ","strings.textscanner.html#TextScanner.back_n","fn (TextScanner)"],["strings.textscanner"," peek_back returns the *previous* character code from the input text.  peek_back","strings.textscanner.html#TextScanner.peek_back","fn (TextScanner)"],["strings.textscanner"," peek_back_n returns the character code from the input text at position - `n`.  ","strings.textscanner.html#TextScanner.peek_back_n","fn (TextScanner)"],["strings.textscanner"," current returns the current character code from the input text.  current return","strings.textscanner.html#TextScanner.current","fn (TextScanner)"],["strings.textscanner"," reset resets the internal state of the scanner  After calling .reset(), .next()","strings.textscanner.html#TextScanner.reset","fn (TextScanner)"],["strings.textscanner"," goto_end has the same effect as `for ts.next() != -1 {}`  i.e. after calling .g","strings.textscanner.html#TextScanner.goto_end","fn (TextScanner)"],["strings.textscanner"," new returns a stack allocated instance of TextScanner. ","strings.textscanner.html#new","fn "],["sync","","sync.html#new_channel","fn "],["sync","","sync.html#Channel","type "],["sync","","sync.html#Channel.auto_str","fn (Channel)"],["sync","","sync.html#Channel.close","fn (Channel)"],["sync","","sync.html#Channel.len","fn (Channel)"],["sync","","sync.html#Channel.closed","fn (Channel)"],["sync","","sync.html#Channel.push","fn (Channel)"],["sync","","sync.html#Channel.try_push","fn (Channel)"],["sync","","sync.html#Channel.pop","fn (Channel)"],["sync","","sync.html#Channel.try_pop","fn (Channel)"],["sync"," Wait `timeout` on any of `channels[i]` until one of them can push (`is_push[i] ","sync.html#channel_select","fn "],["sync","","sync.html#Mutex","struct "],["sync","","sync.html#Mutex.init","fn (Mutex)"],["sync","","sync.html#Mutex.@lock","fn (Mutex)"],["sync","","sync.html#Mutex.unlock","fn (Mutex)"],["sync","","sync.html#Mutex.destroy","fn (Mutex)"],["sync","","sync.html#RwMutex","struct "],["sync","","sync.html#RwMutex.init","fn (RwMutex)"],["sync"," RwMutex has separate read- and write locks ","sync.html#RwMutex.@rlock","fn (RwMutex)"],["sync","","sync.html#RwMutex.@lock","fn (RwMutex)"],["sync"," Windows SRWLocks have different function to unlock  So provide two functions he","sync.html#RwMutex.runlock","fn (RwMutex)"],["sync","","sync.html#RwMutex.unlock","fn (RwMutex)"],["sync","","sync.html#new_mutex","fn "],["sync","","sync.html#new_rwmutex","fn "],["sync","","sync.html#new_semaphore","fn "],["sync","","sync.html#new_semaphore_init","fn "],["sync","","sync.html#Semaphore","type "],["sync","","sync.html#Semaphore.init","fn (Semaphore)"],["sync","","sync.html#Semaphore.post","fn (Semaphore)"],["sync","","sync.html#Semaphore.wait","fn (Semaphore)"],["sync","","sync.html#Semaphore.try_wait","fn (Semaphore)"],["sync","","sync.html#Semaphore.timed_wait","fn (Semaphore)"],["sync","","sync.html#Semaphore.destroy","fn (Semaphore)"],["sync","","sync.html#new_waitgroup","fn "],["sync","","sync.html#WaitGroup","type "],["sync","","sync.html#WaitGroup.init","fn (WaitGroup)"],["sync"," add increments (+ve delta) or decrements (-ve delta) task count by delta  and u","sync.html#WaitGroup.add","fn (WaitGroup)"],["sync"," done is a convenience fn for add(-1) ","sync.html#WaitGroup.done","fn (WaitGroup)"],["sync"," wait blocks until all tasks are done (task count becomes zero) ","sync.html#WaitGroup.wait","fn (WaitGroup)"],["sync.atomic2"," add_u64 adds provided delta as an atomic operation ","sync.atomic2.html#add_u64","fn "],["sync.atomic2"," sub_u64 subtracts provided delta as an atomic operation ","sync.atomic2.html#sub_u64","fn "],["sync.atomic2"," add_i64 adds provided delta as an atomic operation ","sync.atomic2.html#add_i64","fn "],["sync.atomic2"," add_i64 subtracts provided delta as an atomic operation ","sync.atomic2.html#sub_i64","fn "],["sync.atomic2"," atomic store/load operations have to be used when there might be another concur","sync.atomic2.html#store_u64","fn "],["sync.atomic2"," atomicall get a value ","sync.atomic2.html#load_u64","fn "],["sync.atomic2"," atomicall set a value ","sync.atomic2.html#store_i64","fn "],["sync.atomic2"," atomicall get a value ","sync.atomic2.html#load_i64","fn "],["sync.pool","","sync.pool.html#PoolProcessor","struct "],["sync.pool"," set_max_jobs gives you the ability to override the number  of jobs *after* the ","sync.pool.html#PoolProcessor.set_max_jobs","fn (PoolProcessor)"],["sync.pool"," work_on_items receives a list of items of type T,  then starts a work pool of p","sync.pool.html#PoolProcessor.work_on_items","fn (PoolProcessor)"],["sync.pool","","sync.pool.html#PoolProcessor.work_on_pointers","fn (PoolProcessor)"],["sync.pool"," get_item - called by the worker callback.  Retrieves a type safe instance of th","sync.pool.html#PoolProcessor.get_item","fn (PoolProcessor)"],["sync.pool"," get_result - called by the main thread to get a specific result.  Retrieves a t","sync.pool.html#PoolProcessor.get_result","fn (PoolProcessor)"],["sync.pool"," get_results - get a list of type safe results in the main thread. ","sync.pool.html#PoolProcessor.get_results","fn (PoolProcessor)"],["sync.pool"," set_shared_context - can be called during the setup so that you can  provide a ","sync.pool.html#PoolProcessor.set_shared_context","fn (PoolProcessor)"],["sync.pool"," get_shared_context - can be called in each worker callback, to get  the context","sync.pool.html#PoolProcessor.get_shared_context","fn (PoolProcessor)"],["sync.pool"," set_thread_context - can be called during the setup at the start of  each worke","sync.pool.html#PoolProcessor.set_thread_context","fn (PoolProcessor)"],["sync.pool"," get_thread_context - returns a pointer, that was set with  pool.set_thread_cont","sync.pool.html#PoolProcessor.get_thread_context","fn (PoolProcessor)"],["sync.pool","","sync.pool.html#ThreadCB","type "],["sync.pool","","sync.pool.html#PoolProcessorConfig","struct "],["sync.pool"," new_pool_processor returns a new PoolProcessor instance.  The parameters of new","sync.pool.html#new_pool_processor","fn "],["szip","","szip.html#CompressionLevel","enum "],["szip"," OpenMode lists the opening modes  .write: opens a file for reading/extracting (","szip.html#OpenMode","enum "],["szip"," open opens zip archive with compression level using the given mode.  name: the ","szip.html#open","fn "],["szip","","szip.html#Zip","type "],["szip"," close closes the zip archive, releases resources - always finalize. ","szip.html#Zip.close","fn (Zip)"],["szip"," open_entry opens an entry by name in the zip archive.  For zip archive opened i","szip.html#Zip.open_entry","fn (Zip)"],["szip"," close_entry closes a zip entry, flushes buffer and releases resources. ","szip.html#Zip.close_entry","fn (Zip)"],["szip"," name returns a local name of the current zip entry.  The main difference betwee","szip.html#Zip.name","fn (Zip)"],["szip"," index returns an index of the current zip entry. ","szip.html#Zip.index","fn (Zip)"],["szip"," is_dir determines if the current zip entry is a directory entry. ","szip.html#Zip.is_dir","fn (Zip)"],["szip"," size returns an uncompressed size of the current zip entry. ","szip.html#Zip.size","fn (Zip)"],["szip"," crc32 returns CRC-32 checksum of the current zip entry. ","szip.html#Zip.crc32","fn (Zip)"],["szip"," write_entry compresses an input buffer for the current zip entry. ","szip.html#Zip.write_entry","fn (Zip)"],["szip"," create_entry compresses a file for the current zip entry. ","szip.html#Zip.create_entry","fn (Zip)"],["szip"," read_entry extracts the current zip entry into output buffer.  The function all","szip.html#Zip.read_entry","fn (Zip)"],["szip"," extract_entry extracts the current zip entry into output file. ","szip.html#Zip.extract_entry","fn (Zip)"],["szip"," total returns the number of all entries (files and directories) in the zip arch","szip.html#Zip.total","fn (Zip)"],["szip"," extract zip file to directory ","szip.html#extract_zip_to_dir","fn "],["szip"," zip files (full path) to zip file ","szip.html#zip_files","fn "],["term","","term.html#format","fn "],["term","","term.html#format_rgb","fn "],["term","","term.html#rgb","fn "],["term","","term.html#bg_rgb","fn "],["term","","term.html#hex","fn "],["term","","term.html#bg_hex","fn "],["term","","term.html#bg_black","fn "],["term","","term.html#bright_bg_black","fn "],["term","","term.html#bg_blue","fn "],["term","","term.html#bright_bg_blue","fn "],["term","","term.html#bg_cyan","fn "],["term","","term.html#bright_bg_cyan","fn "],["term","","term.html#bg_green","fn "],["term","","term.html#bright_bg_green","fn "],["term","","term.html#bg_magenta","fn "],["term","","term.html#bright_bg_magenta","fn "],["term","","term.html#bg_red","fn "],["term","","term.html#bright_bg_red","fn "],["term","","term.html#bg_white","fn "],["term","","term.html#bright_bg_white","fn "],["term","","term.html#bg_yellow","fn "],["term","","term.html#bright_bg_yellow","fn "],["term","","term.html#black","fn "],["term","","term.html#bright_black","fn "],["term","","term.html#blue","fn "],["term","","term.html#bright_blue","fn "],["term","","term.html#bold","fn "],["term","","term.html#cyan","fn "],["term","","term.html#bright_cyan","fn "],["term","","term.html#dim","fn "],["term","","term.html#green","fn "],["term","","term.html#bright_green","fn "],["term","","term.html#gray","fn "],["term","","term.html#hidden","fn "],["term","","term.html#italic","fn "],["term","","term.html#inverse","fn "],["term","","term.html#magenta","fn "],["term","","term.html#bright_magenta","fn "],["term","","term.html#reset","fn "],["term","","term.html#red","fn "],["term","","term.html#bright_red","fn "],["term","","term.html#strikethrough","fn "],["term","","term.html#underline","fn "],["term","","term.html#white","fn "],["term","","term.html#bright_white","fn "],["term","","term.html#yellow","fn "],["term","","term.html#bright_yellow","fn "],["term"," Sources for ANSI Control Sequences  https://github.com/RajeshPatkarInstitute/Pa","term.html#set_cursor_position","fn "],["term"," n is number of cells  direction: A is up / North  direction: B is down / South ","term.html#move","fn "],["term","","term.html#cursor_up","fn "],["term","","term.html#cursor_down","fn "],["term","","term.html#cursor_forward","fn "],["term","","term.html#cursor_back","fn "],["term"," type: 0 -> current cursor position to end of the screen  type: 1 -> current cur","term.html#erase_display","fn "],["term","","term.html#erase_toend","fn "],["term","","term.html#erase_tobeg","fn "],["term"," clears entire screen and returns cursor to top left-corner ","term.html#erase_clear","fn "],["term","","term.html#erase_del_clear","fn "],["term"," type: 0 -> current cursor position to end of the line  type: 1 -> current curso","term.html#erase_line","fn "],["term","","term.html#erase_line_toend","fn "],["term","","term.html#erase_line_tobeg","fn "],["term","","term.html#erase_line_clear","fn "],["term"," Will make cursor appear if not visible ","term.html#show_cursor","fn "],["term"," Will make cursor invisible ","term.html#hide_cursor","fn "],["term"," clear_previous_line - useful for progressbars.  It moves the cursor to start of","term.html#clear_previous_line","fn "],["term"," Coord - used by term.get_cursor_position and term.set_cursor_position ","term.html#Coord","struct "],["term"," can_show_color_on_stdout returns true if colors are allowed in stdout;  returns","term.html#can_show_color_on_stdout","fn "],["term"," can_show_color_on_stderr returns true if colors are allowed in stderr;  returns","term.html#can_show_color_on_stderr","fn "],["term"," failed returns a bold white on red version of the string `s`  If colors are not","term.html#failed","fn "],["term"," ok_message returns a colored string with green color.  If colors are not allowe","term.html#ok_message","fn "],["term"," fail_message returns a colored string with red color.  If colors are not allowe","term.html#fail_message","fn "],["term"," warn_message returns a colored string with yellow color.  If colors are not all","term.html#warn_message","fn "],["term"," colorize returns a colored string by running the specified `cfn` over  the mess","term.html#colorize","fn "],["term"," strip_ansi removes any ANSI sequences in the `text` ","term.html#strip_ansi","fn "],["term"," h_divider returns a horizontal divider line with a dynamic width,  that depends","term.html#h_divider","fn "],["term"," header_left returns a horizontal divider line with a title text on the left.  e","term.html#header_left","fn "],["term"," header returns a horizontal divider line with a centered text in the middle.  e","term.html#header","fn "],["term","","term.html#get_terminal_size","fn "],["term"," get_cursor_position returns a Coord containing the current cursor position ","term.html#get_cursor_position","fn "],["term"," set_terminal_title change the terminal title ","term.html#set_terminal_title","fn "],["term"," clear clears current terminal screen.  Implementation taken from https://docs.m","term.html#clear","fn "],["term.ui","","term.ui.html#KeyCode","enum "],["term.ui","","term.ui.html#Direction","enum "],["term.ui","","term.ui.html#MouseButton","enum "],["term.ui","","term.ui.html#EventType","enum "],["term.ui","","term.ui.html#Modifiers","enum "],["term.ui","","term.ui.html#Event","struct "],["term.ui","","term.ui.html#Context","struct "],["term.ui"," bold sets the character state to bold. ","term.ui.html#Context.bold","fn (Context)"],["term.ui","","term.ui.html#Context.clear","fn (Context)"],["term.ui"," draw_dashed_line draws a dashed line segment, starting at point `x`,`y`, and en","term.ui.html#Context.draw_dashed_line","fn (Context)"],["term.ui"," draw_empty_dashed_rect draws a rectangle with dashed lines, starting at top lef","term.ui.html#Context.draw_empty_dashed_rect","fn (Context)"],["term.ui"," draw_empty_rect draws a rectangle with no fill, starting at top left `x`,`y`, a","term.ui.html#Context.draw_empty_rect","fn (Context)"],["term.ui"," draw_line draws a line segment, starting at point `x`,`y`, and ending at point ","term.ui.html#Context.draw_line","fn (Context)"],["term.ui"," draw_point draws a point at position `x`,`y`. ","term.ui.html#Context.draw_point","fn (Context)"],["term.ui"," draw_rect draws a rectangle, starting at top left `x`,`y`, and ending at bottom","term.ui.html#Context.draw_rect","fn (Context)"],["term.ui"," draw_text draws the string `s`, starting from position `x`,`y`. ","term.ui.html#Context.draw_text","fn (Context)"],["term.ui"," flush displays the accumulated print buffer to the screen. ","term.ui.html#Context.flush","fn (Context)"],["term.ui"," hide_cursor will make the cursor invisible ","term.ui.html#Context.hide_cursor","fn (Context)"],["term.ui"," horizontal_separator draws a horizontal separator, spanning the width of the sc","term.ui.html#Context.horizontal_separator","fn (Context)"],["term.ui"," reset restores the state of all colors and text formats back to their default v","term.ui.html#Context.reset","fn (Context)"],["term.ui"," reset_bg_color sets the current background color back to it's default value. ","term.ui.html#Context.reset_bg_color","fn (Context)"],["term.ui"," reset_color sets the current foreground color back to it's default value. ","term.ui.html#Context.reset_color","fn (Context)"],["term.ui","","term.ui.html#Context.run","fn (Context)"],["term.ui"," set_color sets the current background color used by any succeeding `draw_*` cal","term.ui.html#Context.set_bg_color","fn (Context)"],["term.ui"," set_color sets the current foreground color used by any succeeding `draw_*` cal","term.ui.html#Context.set_color","fn (Context)"],["term.ui"," set_cursor_position positions the cusor at the given coordinates `x`,`y`. ","term.ui.html#Context.set_cursor_position","fn (Context)"],["term.ui"," set_window_title sets the string `s` as the window title. ","term.ui.html#Context.set_window_title","fn (Context)"],["term.ui"," show_cursor will make the cursor appear if it is not already visible ","term.ui.html#Context.show_cursor","fn (Context)"],["term.ui"," write puts the string `s` into the print buffer. ","term.ui.html#Context.write","fn (Context)"],["term.ui","","term.ui.html#Config","struct "],["term.ui","","term.ui.html#init","fn "],["term.ui","","term.ui.html#Color","struct "],["term.ui","","term.ui.html#Color.hex","fn (Color)"],["time"," Time contains various time units for a point in time. ","time.html#Time","struct "],["time"," Time subtract using operator overloading. ","time.html#Time.-","fn (Time)"],["time"," operator `<` returns true if provided time is less than time ","time.html#Time.<","fn (Time)"],["time"," operator `==` returns true if provided time is equal to time ","time.html#Time.==","fn (Time)"],["time"," add returns a new time that duration is added ","time.html#Time.add","fn (Time)"],["time"," add_days returns a new time struct with an added number of days. ","time.html#Time.add_days","fn (Time)"],["time"," add_seconds returns a new time struct with an added number of seconds. ","time.html#Time.add_seconds","fn (Time)"],["time"," clean returns a date string in a following format:  - a date string in \"HH:MM","time.html#Time.clean","fn (Time)"],["time"," clean12 returns a date string in a following format:  - a date string in \"HH:M","time.html#Time.clean12","fn (Time)"],["time"," day_of_week returns the current day as an integer. ","time.html#Time.day_of_week","fn (Time)"],["time"," ddmmy returns a date string in \"DD.MM.YYYY\" format. ","time.html#Time.ddmmy","fn (Time)"],["time"," format returns a date string in \"YYYY-MM-DD HH:MM\" format (24h). ","time.html#Time.format","fn (Time)"],["time"," format_ss returns a date string in \"YYYY-MM-DD HH:MM:SS\" format (24h). ","time.html#Time.format_ss","fn (Time)"],["time"," format_ss_micro returns a date string in \"YYYY-MM-DD HH:MM:SS.123456\" format ","time.html#Time.format_ss_micro","fn (Time)"],["time"," format_ss_milli returns a date string in \"YYYY-MM-DD HH:MM:SS.123\" format (24","time.html#Time.format_ss_milli","fn (Time)"],["time"," get_fmt_time_str returns a date string with specified  FormatDelimiter and Form","time.html#Time.get_fmt_date_str","fn (Time)"],["time"," get_fmt_str returns a date string with specified FormatDelimiter,  FormatTime t","time.html#Time.get_fmt_str","fn (Time)"],["time"," get_fmt_time_str returns a date string with specified FormatTime type. ","time.html#Time.get_fmt_time_str","fn (Time)"],["time"," hhmm returns a date string in \"HH:MM\" format (24h). ","time.html#Time.hhmm","fn (Time)"],["time"," hhmm12 returns a date string in \"HH:MM\" format (12h). ","time.html#Time.hhmm12","fn (Time)"],["time"," hhmmss returns a date string in \"HH:MM:SS\" format (24h). ","time.html#Time.hhmmss","fn (Time)"],["time"," local - return the time `t`, converted to the currently active local timezone ","time.html#Time.local","fn (Time)"],["time"," weekday_str returns the current day as a string. ","time.html#Time.long_weekday_str","fn (Time)"],["time"," md returns a date string in \"MMM D\" format. ","time.html#Time.md","fn (Time)"],["time"," relative returns a string representation of the difference between t  and the c","time.html#Time.relative","fn (Time)"],["time"," relative_short returns a string saying how long ago a time occured as follows: ","time.html#Time.relative_short","fn (Time)"],["time"," smonth returns month name. ","time.html#Time.smonth","fn (Time)"],["time"," str returns time in the same format as `parse` expects (\"YYYY-MM-DD HH:MM:SS\"","time.html#Time.str","fn (Time)"],["time"," unix_time returns Unix time. ","time.html#Time.unix_time","fn (Time)"],["time"," unix_time_milli returns Unix time with millisecond resolution. ","time.html#Time.unix_time_milli","fn (Time)"],["time"," This is just a TEMPORARY function for cookies and their expire dates ","time.html#Time.utc_string","fn (Time)"],["time"," weekday_str returns the current day as a string. ","time.html#Time.weekday_str","fn (Time)"],["time"," ymmdd returns a date string in \"YYYY-MM-DD\" format. ","time.html#Time.ymmdd","fn (Time)"],["time"," parse returns time from a date string in \"YYYY-MM-DD HH:MM:SS\" format. ","time.html#parse","fn "],["time"," parse_rfc2822 returns time from a date string in RFC 2822 datetime format. ","time.html#parse_rfc2822","fn "],["time"," parse_iso8601 parses rfc8601 time format yyyy-MM-ddTHH:mm:ss.dddddd+dd:dd as lo","time.html#parse_iso8601","fn "],["time","","time.html#StopWatchOptions","struct "],["time"," StopWatch is used to measure elapsed time. ","time.html#StopWatch","struct "],["time"," start starts the stopwatch. If the timer was paused, restarts counting. ","time.html#StopWatch.start","fn (StopWatch)"],["time"," restart restarts the stopwatch. If the timer was paused, restarts counting. ","time.html#StopWatch.restart","fn (StopWatch)"],["time"," stop stops the timer, by setting the end time to the current time. ","time.html#StopWatch.stop","fn (StopWatch)"],["time"," pause resets the `start` time and adds the current elapsed time to `elapsed`. ","time.html#StopWatch.pause","fn (StopWatch)"],["time"," elapsed returns the Duration since the last start call ","time.html#StopWatch.elapsed","fn (StopWatch)"],["time"," new_stopwatch initializes a new StopWatch with the current time as start. ","time.html#new_stopwatch","fn "],["time"," FormatDelimiter contains different time formats. ","time.html#FormatTime","enum "],["time"," FormatDelimiter contains different date formats. ","time.html#FormatDate","enum "],["time"," FormatDelimiter contains different time/date delimiters. ","time.html#FormatDelimiter","enum "],["time"," C.timeval represents a C time value. ","time.html#C.timeval","struct "],["time","","time.html#now","fn "],["time"," utc returns the current UTC time. ","time.html#utc","fn "],["time"," new_time returns a time struct with calculated Unix time. ","time.html#new_time","fn "],["time"," day_of_week returns the current day of a given year, month, and day,  as an int","time.html#day_of_week","fn "],["time"," ticks returns a number of milliseconds elapsed since system start. ","time.html#ticks","fn "],["time"," sleep_ms makes the calling thread sleep for a given number of milliseconds. ","time.html#sleep_ms","fn "],["time"," usleep makes the calling thread sleep for a given number of microseconds. ","time.html#usleep","fn "],["time"," is_leap_year checks if a given a year is a leap year. ","time.html#is_leap_year","fn "],["time"," days_in_month returns a number of days in a given month. ","time.html#days_in_month","fn "],["time"," A lot of these are taken from the Go library. ","time.html#Duration","type "],["time"," microseconds returns the duration as an integer number of microseconds. ","time.html#Duration.microseconds","fn (Duration)"],["time"," milliseconds returns the duration as an integer number of milliseconds. ","time.html#Duration.milliseconds","fn (Duration)"],["time"," minutes returns the duration as a floating point number of minutes. ","time.html#Duration.minutes","fn (Duration)"],["time"," nanoseconds returns the duration as an integer number of nanoseconds. ","time.html#Duration.nanoseconds","fn (Duration)"],["time"," The following functions return floating point numbers because it's common to  c","time.html#Duration.seconds","fn (Duration)"],["time"," some Windows system functions (e.g. `C.WaitForSingleObject()`) accept an `u32` ","time.html#Duration.sys_milliseconds","fn (Duration)"],["time"," hours returns the duration as a floating point number of hours. ","time.html#Duration.hours","fn (Duration)"],["time"," offset returns time zone UTC offset in seconds. ","time.html#offset","fn "],["time"," sys_mono_now returns a *monotonically increasing time*, NOT a time adjusted for","time.html#sys_mono_now","fn "],["time","","time.html#SystemTime","type "],["time"," unix_time returns Unix time. ","time.html#SystemTime.unix_time","fn (SystemTime)"],["time"," dummy to compile with all compilers ","time.html#darwin_now","fn "],["time"," dummy to compile with all compilers ","time.html#linux_now","fn "],["time"," dummy to compile with all compilers ","time.html#solaris_now","fn "],["time"," dummy to compile with all compilers ","time.html#darwin_utc","fn "],["time"," dummy to compile with all compilers ","time.html#linux_utc","fn "],["time"," dummy to compile with all compilers ","time.html#solaris_utc","fn "],["time"," wait makes the calling thread sleep for a given duration (in nanoseconds). ","time.html#wait","fn "],["time"," sleep makes the calling thread sleep for a given duration (in nanoseconds). ","time.html#sleep","fn "],["time"," unix returns a time struct from Unix time. ","time.html#unix","fn "],["time"," unix2 returns a time struct from Unix time and microsecond value ","time.html#unix2","fn "],["time.misc"," random returns a random time struct in *the past*. ","time.misc.html#random","fn "],["v.ast","","v.ast.html#TypeDecl","type "],["v.ast","","v.ast.html#Expr","type "],["v.ast","","v.ast.html#Expr.is_blank_ident","fn (Expr)"],["v.ast","","v.ast.html#Expr.is_expr","fn (Expr)"],["v.ast","","v.ast.html#Expr.is_lit","fn (Expr)"],["v.ast"," returns if an expression can be used in `lock x, y.z {` ","v.ast.html#Expr.is_lockable","fn (Expr)"],["v.ast","","v.ast.html#Expr.is_lvalue","fn (Expr)"],["v.ast","","v.ast.html#Expr.position","fn (Expr)"],["v.ast"," string representation of expr ","v.ast.html#Expr.str","fn (Expr)"],["v.ast","","v.ast.html#Expr.is_auto_deref_var","fn (Expr)"],["v.ast","","v.ast.html#Stmt","type "],["v.ast","","v.ast.html#Stmt.str","fn (Stmt)"],["v.ast"," check if stmt can be an expression in C ","v.ast.html#Stmt.check_c_expr","fn (Stmt)"],["v.ast"," NB: when you add a new Expr or Stmt type with a .pos field, remember to update ","v.ast.html#ScopeObject","type "],["v.ast","","v.ast.html#ScopeObject.is_simple_define_const","fn (ScopeObject)"],["v.ast"," TODO: replace Param ","v.ast.html#Node","type "],["v.ast","","v.ast.html#Node.position","fn (Node)"],["v.ast","","v.ast.html#Node.children","fn (Node)"],["v.ast","","v.ast.html#TypeNode","struct "],["v.ast","","v.ast.html#EmptyExpr","struct "],["v.ast","","v.ast.html#empty_expr","fn "],["v.ast","","v.ast.html#EmptyStmt","struct "],["v.ast","","v.ast.html#empty_stmt","fn "],["v.ast","","v.ast.html#EmptyNode","struct "],["v.ast","","v.ast.html#empty_node","fn "],["v.ast"," `{stmts}` or `unsafe {stmts}` ","v.ast.html#Block","struct "],["v.ast"," | IncDecStmt k  Stand-alone expression in a statement list. ","v.ast.html#ExprStmt","struct "],["v.ast","","v.ast.html#IntegerLiteral","struct "],["v.ast","","v.ast.html#FloatLiteral","struct "],["v.ast","","v.ast.html#StringLiteral","struct "],["v.ast"," 'name: $name' ","v.ast.html#StringInterLiteral","struct "],["v.ast"," Expressions in string interpolations may have to be put in braces if they  are ","v.ast.html#StringInterLiteral.get_fspec_braces","fn (StringInterLiteral)"],["v.ast","","v.ast.html#CharLiteral","struct "],["v.ast","","v.ast.html#BoolLiteral","struct "],["v.ast"," `foo.bar` ","v.ast.html#SelectorExpr","struct "],["v.ast"," root_ident returns the origin ident where the selector started. ","v.ast.html#SelectorExpr.root_ident","fn (SelectorExpr)"],["v.ast"," module declaration ","v.ast.html#Module","struct "],["v.ast","","v.ast.html#StructField","struct "],["v.ast","","v.ast.html#StructField.equals","fn (StructField)"],["v.ast"," const field in const declaration group ","v.ast.html#ConstField","struct "],["v.ast","","v.ast.html#ConstField.is_simple_define_const","fn (ConstField)"],["v.ast","","v.ast.html#ConstField.comptime_expr_value","fn (ConstField)"],["v.ast"," const declaration ","v.ast.html#ConstDecl","struct "],["v.ast","","v.ast.html#StructDecl","struct "],["v.ast","","v.ast.html#Embed","struct "],["v.ast","","v.ast.html#InterfaceEmbedding","struct "],["v.ast","","v.ast.html#InterfaceDecl","struct "],["v.ast","","v.ast.html#StructInitField","struct "],["v.ast","","v.ast.html#StructInitEmbed","struct "],["v.ast","","v.ast.html#StructInit","struct "],["v.ast"," import statement ","v.ast.html#Import","struct "],["v.ast"," import symbol,for import {symbol} syntax ","v.ast.html#ImportSymbol","struct "],["v.ast"," anonymous function ","v.ast.html#AnonFn","struct "],["v.ast"," function or method declaration ","v.ast.html#FnDecl","struct "],["v.ast","","v.ast.html#FnDecl.new_method_with_receiver_type","fn (FnDecl)"],["v.ast"," These methods are used only by vfmt, vdoc, and for debugging. ","v.ast.html#FnDecl.stringify","fn (FnDecl)"],["v.ast","","v.ast.html#FnDecl.modname","fn (FnDecl)"],["v.ast"," break, continue ","v.ast.html#BranchStmt","struct "],["v.ast","","v.ast.html#BranchStmt.str","fn (BranchStmt)"],["v.ast"," function or method call expr ","v.ast.html#CallExpr","struct "],["v.ast"," function call argument: `f(callarg)` ","v.ast.html#CallArg","struct "],["v.ast","","v.ast.html#CallArg.str","fn (CallArg)"],["v.ast"," function return statement ","v.ast.html#Return","struct "],["v.ast","","v.ast.html#Var","struct "],["v.ast"," used for smartcasting only  struct fields change type in scopes ","v.ast.html#ScopeStructField","struct "],["v.ast","","v.ast.html#GlobalField","struct "],["v.ast","","v.ast.html#GlobalDecl","struct "],["v.ast","","v.ast.html#EmbeddedFile","struct "],["v.ast"," Each V source file is represented by one File structure.  When the V compiler r","v.ast.html#File","struct "],["v.ast","","v.ast.html#File.free","fn (File)"],["v.ast","","v.ast.html#IdentFn","struct "],["v.ast"," TODO: (joe) remove completely, use ident.obj  instead which points to the scope","v.ast.html#IdentVar","struct "],["v.ast","","v.ast.html#IdentInfo","type "],["v.ast","","v.ast.html#IdentKind","enum "],["v.ast"," A single identifier ","v.ast.html#Ident","struct "],["v.ast","","v.ast.html#Ident.var_info","fn (Ident)"],["v.ast"," left op right  See: token.Kind.is_infix ","v.ast.html#InfixExpr","struct "],["v.ast"," ++, -- ","v.ast.html#PostfixExpr","struct "],["v.ast"," See: token.Kind.is_prefix ","v.ast.html#PrefixExpr","struct "],["v.ast","","v.ast.html#IndexExpr","struct "],["v.ast"," helper for dealing with `m[k1][k2][k3][k3] = value` ","v.ast.html#IndexExpr.recursive_mapset_is_setter","fn (IndexExpr)"],["v.ast","","v.ast.html#IfExpr","struct "],["v.ast","","v.ast.html#IfBranch","struct "],["v.ast","","v.ast.html#UnsafeExpr","struct "],["v.ast","","v.ast.html#LockExpr","struct "],["v.ast","","v.ast.html#MatchExpr","struct "],["v.ast","","v.ast.html#MatchBranch","struct "],["v.ast","","v.ast.html#SelectExpr","struct "],["v.ast","","v.ast.html#SelectBranch","struct "],["v.ast","","v.ast.html#CompForKind","enum "],["v.ast","","v.ast.html#CompForKind.str","fn (CompForKind)"],["v.ast","","v.ast.html#CompFor","struct "],["v.ast","","v.ast.html#ForStmt","struct "],["v.ast","","v.ast.html#ForInStmt","struct "],["v.ast","","v.ast.html#ForCStmt","struct "],["v.ast"," #include etc ","v.ast.html#HashStmt","struct "],["v.ast"," variable assign statement ","v.ast.html#AssignStmt","struct "],["v.ast"," `expr as Ident` ","v.ast.html#AsCast","struct "],["v.ast"," an enum value, like OS.macos or .macos ","v.ast.html#EnumVal","struct "],["v.ast"," enum field in enum declaration ","v.ast.html#EnumField","struct "],["v.ast"," enum declaration ","v.ast.html#EnumDecl","struct "],["v.ast","","v.ast.html#AliasTypeDecl","struct "],["v.ast"," New implementation of sum types ","v.ast.html#SumTypeDecl","struct "],["v.ast","","v.ast.html#FnTypeDecl","struct "],["v.ast"," TODO: handle this differently  v1 excludes non current os ifdefs so  the defer'","v.ast.html#DeferStmt","struct "],["v.ast"," `(3+4)` ","v.ast.html#ParExpr","struct "],["v.ast","","v.ast.html#GoExpr","struct "],["v.ast","","v.ast.html#GotoLabel","struct "],["v.ast","","v.ast.html#GotoStmt","struct "],["v.ast","","v.ast.html#ArrayInit","struct "],["v.ast","","v.ast.html#ArrayDecompose","struct "],["v.ast","","v.ast.html#ChanInit","struct "],["v.ast","","v.ast.html#MapInit","struct "],["v.ast"," s[10..20] ","v.ast.html#RangeExpr","struct "],["v.ast"," NB: &string(x) gets parsed as PrefixExpr{ right: CastExpr{...} }  TODO: that is","v.ast.html#CastExpr","struct "],["v.ast","","v.ast.html#AsmStmt","struct "],["v.ast","","v.ast.html#AsmTemplate","struct "],["v.ast"," [eax+5] | j | displacement literal (e.g. 123 in [rax + 123] ) | eax | true | `a","v.ast.html#AsmArg","type "],["v.ast","","v.ast.html#AsmRegister","struct "],["v.ast","","v.ast.html#AsmDisp","struct "],["v.ast","","v.ast.html#AsmAlias","struct "],["v.ast","","v.ast.html#AsmAddressing","struct "],["v.ast"," adressing modes: ","v.ast.html#AddressingMode","enum "],["v.ast","","v.ast.html#AsmClobbered","struct "],["v.ast"," : [alias_a] '=r' (a) // this is a comment ","v.ast.html#AsmIO","struct "],["v.ast","","v.ast.html#AssertStmt","struct "],["v.ast"," `if [x := opt()] {` ","v.ast.html#IfGuardExpr","struct "],["v.ast","","v.ast.html#OrKind","enum "],["v.ast"," `or { ... }` ","v.ast.html#OrExpr","struct "],["v.ast"," deprecated ","v.ast.html#Assoc","struct "],["v.ast","","v.ast.html#SizeOf","struct "],["v.ast","","v.ast.html#IsRefType","struct "],["v.ast","","v.ast.html#OffsetOf","struct "],["v.ast","","v.ast.html#Likely","struct "],["v.ast","","v.ast.html#TypeOf","struct "],["v.ast","","v.ast.html#DumpExpr","struct "],["v.ast","","v.ast.html#Comment","struct "],["v.ast","","v.ast.html#ConcatExpr","struct "],["v.ast"," @FN, @STRUCT, @MOD etc. See full list in token.valid_at_tokens ","v.ast.html#AtExpr","struct "],["v.ast","","v.ast.html#ComptimeSelector","struct "],["v.ast","","v.ast.html#ComptimeCall","struct "],["v.ast","","v.ast.html#None","struct "],["v.ast","","v.ast.html#SqlStmtKind","enum "],["v.ast","","v.ast.html#SqlStmt","struct "],["v.ast","","v.ast.html#SqlStmtLine","struct "],["v.ast","","v.ast.html#SqlExpr","struct "],["v.ast","","v.ast.html#NodeError","struct "],["v.ast"," CTempVar is used in cgen only, to hold nodes for temporary variables ","v.ast.html#CTempVar","struct "],["v.ast"," return all the registers for a give architecture ","v.ast.html#all_registers","fn "],["v.ast","","v.ast.html#AttrKind","enum "],["v.ast"," e.g. `[unsafe]` ","v.ast.html#Attr","struct "],["v.ast","","v.ast.html#Attr.debug","fn (Attr)"],["v.ast"," str returns the string representation without square brackets ","v.ast.html#Attr.str","fn (Attr)"],["v.ast","","v.ast.html#[]Attr","type "],["v.ast","","v.ast.html#[]Attr.contains","fn ([]Attr)"],["v.ast","","v.ast.html#[]Attr.find_comptime_define","fn ([]Attr)"],["v.ast","","v.ast.html#Table","struct "],["v.ast","","v.ast.html#Table.add_placeholder_type","fn (Table)"],["v.ast","","v.ast.html#Table.array_cname","fn (Table)"],["v.ast","","v.ast.html#Table.array_fixed_cname","fn (Table)"],["v.ast"," array_fixed_source_name generates the original name for the v source.  e. g. [1","v.ast.html#Table.array_fixed_name","fn (Table)"],["v.ast"," array_source_name generates the original name for the v source.  e. g. []int ","v.ast.html#Table.array_name","fn (Table)"],["v.ast"," bitsize_to_type returns a type corresponding to the bit_size  Examples:   `8 > ","v.ast.html#Table.bitsize_to_type","fn (Table)"],["v.ast","","v.ast.html#Table.chan_cname","fn (Table)"],["v.ast","","v.ast.html#Table.chan_name","fn (Table)"],["v.ast"," complete_interface_check does a MxN check for all M interfaces vs all N types, ","v.ast.html#Table.complete_interface_check","fn (Table)"],["v.ast","","v.ast.html#Table.does_type_implement_interface","fn (Table)"],["v.ast"," search from current type up through each parent looking for field ","v.ast.html#Table.find_field","fn (Table)"],["v.ast"," find_field_with_embeds searches for a given field, also looking through embedde","v.ast.html#Table.find_field_with_embeds","fn (Table)"],["v.ast","","v.ast.html#Table.find_fn","fn (Table)"],["v.ast","","v.ast.html#Table.find_or_register_array","fn (Table)"],["v.ast","","v.ast.html#Table.find_or_register_array_fixed","fn (Table)"],["v.ast","","v.ast.html#Table.find_or_register_array_with_dims","fn (Table)"],["v.ast","","v.ast.html#Table.find_or_register_chan","fn (Table)"],["v.ast","","v.ast.html#Table.find_or_register_fn_type","fn (Table)"],["v.ast","","v.ast.html#Table.find_or_register_map","fn (Table)"],["v.ast","","v.ast.html#Table.find_or_register_multi_return","fn (Table)"],["v.ast","","v.ast.html#Table.find_or_register_thread","fn (Table)"],["v.ast","","v.ast.html#Table.find_type","fn (Table)"],["v.ast","","v.ast.html#Table.find_type_idx","fn (Table)"],["v.ast","","v.ast.html#Table.fn_signature","fn (Table)"],["v.ast","","v.ast.html#Table.fn_signature_using_aliases","fn (Table)"],["v.ast"," used to compare fn's & for naming anon fn's ","v.ast.html#Table.fn_type_signature","fn (Table)"],["v.ast"," source_signature generates the signature of a function which looks like in the ","v.ast.html#Table.fn_type_source_signature","fn (Table)"],["v.ast","","v.ast.html#Table.free","fn (Table)"],["v.ast"," get_final_type_symbol follows aliases until it gets to a \"real\" Type ","v.ast.html#Table.get_final_type_symbol","fn (Table)"],["v.ast","","v.ast.html#Table.get_type_name","fn (Table)"],["v.ast","","v.ast.html#Table.get_type_symbol","fn (Table)"],["v.ast"," has_deep_child_no_ref returns true if type is struct and has any child or neste","v.ast.html#Table.has_deep_child_no_ref","fn (Table)"],["v.ast","","v.ast.html#Table.is_same_method","fn (Table)"],["v.ast","","v.ast.html#Table.known_fn","fn (Table)"],["v.ast","","v.ast.html#Table.known_type","fn (Table)"],["v.ast","","v.ast.html#Table.known_type_idx","fn (Table)"],["v.ast"," only used for debugging V compiler type bugs ","v.ast.html#Table.known_type_names","fn (Table)"],["v.ast","","v.ast.html#Table.map_cname","fn (Table)"],["v.ast"," map_source_name generates the original name for the v source.  e. g. map[string","v.ast.html#Table.map_name","fn (Table)"],["v.ast","","v.ast.html#Table.mktyp","fn (Table)"],["v.ast","","v.ast.html#Table.panic","fn (Table)"],["v.ast"," parse the flags to (ast.cflags) []CFlag  Note: clean up big time (joe-c) ","v.ast.html#Table.parse_cflag","fn (Table)"],["v.ast","","v.ast.html#Table.register_aggregate_method","fn (Table)"],["v.ast","","v.ast.html#Table.register_builtin_type_symbols","fn (Table)"],["v.ast","","v.ast.html#Table.register_fn","fn (Table)"],["v.ast","","v.ast.html#Table.register_fn_concrete_types","fn (Table)"],["v.ast","","v.ast.html#Table.register_interface","fn (Table)"],["v.ast","","v.ast.html#Table.register_type_symbol","fn (Table)"],["v.ast","","v.ast.html#Table.resolve_common_sumtype_fields","fn (Table)"],["v.ast"," resolve_generic_to_concrete resolves generics to real types T => int.  Even map","v.ast.html#Table.resolve_generic_to_concrete","fn (Table)"],["v.ast","","v.ast.html#Table.struct_has_field","fn (Table)"],["v.ast"," TODO: there is a bug when casting sumtype the other way if its pointer  so unti","v.ast.html#Table.sumtype_has_variant","fn (Table)"],["v.ast","","v.ast.html#Table.thread_cname","fn (Table)"],["v.ast","","v.ast.html#Table.thread_name","fn (Table)"],["v.ast"," search from current type up through each parent looking for method ","v.ast.html#Table.type_find_method","fn (Table)"],["v.ast","","v.ast.html#Table.type_has_method","fn (Table)"],["v.ast"," returns TypeSymbol kind only if there are no type modifiers ","v.ast.html#Table.type_kind","fn (Table)"],["v.ast"," type name in code (for builtin) ","v.ast.html#Table.type_to_code","fn (Table)"],["v.ast"," human readable type name ","v.ast.html#Table.type_to_str","fn (Table)"],["v.ast"," import_aliases is a map of imported symbol aliases 'module.Type' => 'Type' ","v.ast.html#Table.type_to_str_using_aliases","fn (Table)"],["v.ast","","v.ast.html#Table.unalias_num_type","fn (Table)"],["v.ast","","v.ast.html#Table.value_type","fn (Table)"],["v.ast","","v.ast.html#ComptTimeConstValue","type "],["v.ast","","v.ast.html#ComptTimeConstValue.i64","fn (ComptTimeConstValue)"],["v.ast","","v.ast.html#ComptTimeConstValue.int","fn (ComptTimeConstValue)"],["v.ast","","v.ast.html#ComptTimeConstValue.string","fn (ComptTimeConstValue)"],["v.ast","","v.ast.html#ComptTimeConstValue.f64","fn (ComptTimeConstValue)"],["v.ast","","v.ast.html#ComptTimeConstValue.u64","fn (ComptTimeConstValue)"],["v.ast","","v.ast.html#ComptTimeConstValue.byte","fn (ComptTimeConstValue)"],["v.ast","","v.ast.html#empty_comptime_const_expr","fn "],["v.ast","","v.ast.html#resolve_init","fn "],["v.ast","","v.ast.html#Scope","struct "],["v.ast","","v.ast.html#Scope.free","fn (Scope)"],["v.ast","","v.ast.html#Scope.find_with_scope","fn (Scope)"],["v.ast","","v.ast.html#Scope.find","fn (Scope)"],["v.ast"," selector_expr:  name.field_name ","v.ast.html#Scope.find_struct_field","fn (Scope)"],["v.ast","","v.ast.html#Scope.is_known","fn (Scope)"],["v.ast","","v.ast.html#Scope.find_var","fn (Scope)"],["v.ast","","v.ast.html#Scope.find_const","fn (Scope)"],["v.ast","","v.ast.html#Scope.known_var","fn (Scope)"],["v.ast","","v.ast.html#Scope.update_var_type","fn (Scope)"],["v.ast"," selector_expr:  name.field_name ","v.ast.html#Scope.register_struct_field","fn (Scope)"],["v.ast","","v.ast.html#Scope.register","fn (Scope)"],["v.ast","","v.ast.html#Scope.outermost","fn (Scope)"],["v.ast"," returns the innermost scope containing pos  pub fn (s &Scope) innermost(pos int","v.ast.html#Scope.innermost","fn (Scope)"],["v.ast","","v.ast.html#Scope.contains","fn (Scope)"],["v.ast","","v.ast.html#Scope.show","fn (Scope)"],["v.ast","","v.ast.html#Scope.str","fn (Scope)"],["v.ast","","v.ast.html#args2str","fn "],["v.ast","","v.ast.html#FnPanicHandler","type "],["v.ast","","v.ast.html#Fn","struct "],["v.ast","","v.ast.html#Fn.new_method_with_receiver_type","fn (Fn)"],["v.ast","","v.ast.html#Param","struct "],["v.ast","","v.ast.html#new_table","fn "],["v.ast","","v.ast.html#set_global_table","fn "],["v.ast"," Represents a type that only needs an identifier, e.g. int, array_int.  A pointe","v.ast.html#TypeSymbol","struct "],["v.ast","","v.ast.html#TypeSymbol.array_fixed_info","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.array_info","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.chan_info","fn (TypeSymbol)"],["v.ast"," same as .debug(), but without the verbose .info and .methods fields ","v.ast.html#TypeSymbol.dbg","fn (TypeSymbol)"],["v.ast"," debug returns a verbose representation of the information in ts, useful for tra","v.ast.html#TypeSymbol.debug","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.embed_name","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.enum_info","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.find_field","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.find_method","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.find_method_with_generic_parent","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.has_method","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.is_builtin","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.is_float","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.is_heap","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.is_int","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.is_number","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.is_pointer","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.is_primitive","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.is_string","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.map_info","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.mr_info","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.register_method","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.str","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.str_method_info","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.struct_info","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.sumtype_info","fn (TypeSymbol)"],["v.ast","","v.ast.html#TypeSymbol.thread_info","fn (TypeSymbol)"],["v.ast","","v.ast.html#Type","type "],["v.ast"," <atomic.h> defines special typenames ","v.ast.html#Type.atomic_typename","fn (Type)"],["v.ast","","v.ast.html#Type.share","fn (Type)"],["v.ast"," return TypeSymbol idx for `t` ","v.ast.html#Type.idx","fn (Type)"],["v.ast","","v.ast.html#Type.is_void","fn (Type)"],["v.ast","","v.ast.html#Type.is_full","fn (Type)"],["v.ast"," return nr_muls for `t` ","v.ast.html#Type.nr_muls","fn (Type)"],["v.ast"," return true if `t` is a pointer (nr_muls>0) ","v.ast.html#Type.is_ptr","fn (Type)"],["v.ast","","v.ast.html#Type.is_any_kind_of_pointer","fn (Type)"],["v.ast"," set nr_muls on `t` and return it ","v.ast.html#Type.set_nr_muls","fn (Type)"],["v.ast"," increments nr_nuls on `t` and return it ","v.ast.html#Type.to_ptr","fn (Type)"],["v.ast"," decrement nr_muls on `t` and return it ","v.ast.html#Type.deref","fn (Type)"],["v.ast"," set `flag` on `t` and return `t` ","v.ast.html#Type.set_flag","fn (Type)"],["v.ast"," clear `flag` on `t` and return `t` ","v.ast.html#Type.clear_flag","fn (Type)"],["v.ast"," clear all flags ","v.ast.html#Type.clear_flags","fn (Type)"],["v.ast"," return true if `flag` is set on `t` ","v.ast.html#Type.has_flag","fn (Type)"],["v.ast","","v.ast.html#Type.str","fn (Type)"],["v.ast"," debug returns a verbose representation of the information in the type `t`, usef","v.ast.html#Type.debug","fn (Type)"],["v.ast"," copy flags & nr_muls from `t_from` to `t` and return `t` ","v.ast.html#Type.derive","fn (Type)"],["v.ast"," copy flags from `t_from` to `t` and return `t` ","v.ast.html#Type.derive_add_muls","fn (Type)"],["v.ast","","v.ast.html#Type.is_pointer","fn (Type)"],["v.ast","","v.ast.html#Type.is_float","fn (Type)"],["v.ast","","v.ast.html#Type.is_int","fn (Type)"],["v.ast","","v.ast.html#Type.is_int_valptr","fn (Type)"],["v.ast","","v.ast.html#Type.is_float_valptr","fn (Type)"],["v.ast","","v.ast.html#Type.is_pure_int","fn (Type)"],["v.ast","","v.ast.html#Type.is_pure_float","fn (Type)"],["v.ast","","v.ast.html#Type.is_signed","fn (Type)"],["v.ast","","v.ast.html#Type.is_unsigned","fn (Type)"],["v.ast","","v.ast.html#Type.is_int_literal","fn (Type)"],["v.ast","","v.ast.html#Type.is_number","fn (Type)"],["v.ast","","v.ast.html#Type.is_string","fn (Type)"],["v.ast","","v.ast.html#Type.is_bool","fn (Type)"],["v.ast","","v.ast.html#TypeInfo","type "],["v.ast","","v.ast.html#Language","enum "],["v.ast","","v.ast.html#pref_arch_to_table_language","fn "],["v.ast"," max of 8 ","v.ast.html#TypeFlag","enum "],["v.ast","","v.ast.html#ShareType","enum "],["v.ast","","v.ast.html#ShareType.str","fn (ShareType)"],["v.ast","","v.ast.html#sharetype_from_flags","fn "],["v.ast"," return new type with TypeSymbol idx set to `idx` ","v.ast.html#new_type","fn "],["v.ast"," return new type with TypeSymbol idx set to `idx` & nr_muls set to `nr_muls` ","v.ast.html#new_type_ptr","fn "],["v.ast","","v.ast.html#merge_types","fn "],["v.ast","","v.ast.html#MultiReturn","struct "],["v.ast","","v.ast.html#FnType","struct "],["v.ast","","v.ast.html#Kind","enum "],["v.ast"," for debugging/errors only, perf is not an issue ","v.ast.html#Kind.str","fn (Kind)"],["v.ast","","v.ast.html#[]Kind","type "],["v.ast","","v.ast.html#[]Kind.str","fn ([]Kind)"],["v.ast","","v.ast.html#Struct","struct "],["v.ast","","v.ast.html#Struct.find_field","fn (Struct)"],["v.ast","","v.ast.html#Struct.get_field","fn (Struct)"],["v.ast"," instantiation of a generic struct ","v.ast.html#GenericStructInst","struct "],["v.ast","","v.ast.html#Interface","struct "],["v.ast","","v.ast.html#Interface.find_field","fn (Interface)"],["v.ast","","v.ast.html#Interface.find_method","fn (Interface)"],["v.ast","","v.ast.html#Interface.has_method","fn (Interface)"],["v.ast","","v.ast.html#Interface.defines_method","fn (Interface)"],["v.ast","","v.ast.html#Enum","struct "],["v.ast","","v.ast.html#Alias","struct "],["v.ast","","v.ast.html#Aggregate","struct "],["v.ast","","v.ast.html#Array","struct "],["v.ast","","v.ast.html#ArrayFixed","struct "],["v.ast","","v.ast.html#Chan","struct "],["v.ast","","v.ast.html#Thread","struct "],["v.ast","","v.ast.html#Map","struct "],["v.ast","","v.ast.html#SumType","struct "],["v.ast","","v.ast.html#SumType.find_field","fn (SumType)"],["v.ast","","v.ast.html#FnSignatureOpts","struct "],["v.ast.walker"," Visitor defines a visit method which is invoked by the walker in each node it e","v.ast.walker.html#Visitor","interface "],["v.ast.walker","","v.ast.walker.html#InspectorFn","type "],["v.ast.walker","","v.ast.walker.html#Inspector","type "],["v.ast.walker","","v.ast.walker.html#Inspector.visit","fn (Inspector)"],["v.ast.walker"," inspect traverses and checks the AST node on a depth-first order and based on t","v.ast.walker.html#inspect","fn "],["v.ast.walker"," walk traverses the AST using the given visitor ","v.ast.walker.html#walk","fn "],["v.builder","","v.builder.html#Builder","struct "],["v.builder","","v.builder.html#Builder.build_c","fn (Builder)"],["v.builder","","v.builder.html#Builder.build_js","fn (Builder)"],["v.builder","","v.builder.html#Builder.build_native","fn (Builder)"],["v.builder","","v.builder.html#Builder.cc_msvc","fn (Builder)"],["v.builder","","v.builder.html#Builder.compile_c","fn (Builder)"],["v.builder","","v.builder.html#Builder.compile_js","fn (Builder)"],["v.builder","","v.builder.html#Builder.compile_native","fn (Builder)"],["v.builder"," TODO: try to merge this & util.module functions to create a  reliable multi use","v.builder.html#Builder.find_module_path","fn (Builder)"],["v.builder","","v.builder.html#Builder.front_and_middle_stages","fn (Builder)"],["v.builder","","v.builder.html#Builder.front_stages","fn (Builder)"],["v.builder","","v.builder.html#Builder.gen_c","fn (Builder)"],["v.builder","","v.builder.html#Builder.gen_js","fn (Builder)"],["v.builder","","v.builder.html#Builder.get_builtin_files","fn (Builder)"],["v.builder","","v.builder.html#Builder.get_user_files","fn (Builder)"],["v.builder"," graph of all imported modules ","v.builder.html#Builder.import_graph","fn (Builder)"],["v.builder","","v.builder.html#Builder.info","fn (Builder)"],["v.builder","","v.builder.html#Builder.log","fn (Builder)"],["v.builder","","v.builder.html#Builder.middle_stages","fn (Builder)"],["v.builder"," parse all deps from already parsed files ","v.builder.html#Builder.parse_imports","fn (Builder)"],["v.builder","","v.builder.html#Builder.resolve_deps","fn (Builder)"],["v.builder","","v.builder.html#Builder.v_files_from_dir","fn (Builder)"],["v.builder","","v.builder.html#new_builder","fn "],["v.builder","","v.builder.html#compile","fn "],["v.builder"," pub fn (cflags []CFlag) msvc_string_flags() MsvcStringFlags { ","v.builder.html#msvc_string_flags","fn "],["v.cflag"," parsed cflag ","v.cflag.html#CFlag","struct "],["v.cflag","","v.cflag.html#CFlag.str","fn (CFlag)"],["v.cflag","","v.cflag.html#CFlag.eval","fn (CFlag)"],["v.cflag"," format flag ","v.cflag.html#CFlag.format","fn (CFlag)"],["v.cflag","","v.cflag.html#[]CFlag","type "],["v.cflag"," TODO: implement msvc specific c_options_before_target and c_options_after_targe","v.cflag.html#[]CFlag.c_options_before_target_msvc","fn ([]CFlag)"],["v.cflag","","v.cflag.html#[]CFlag.c_options_after_target_msvc","fn ([]CFlag)"],["v.cflag","","v.cflag.html#[]CFlag.c_options_before_target","fn ([]CFlag)"],["v.cflag","","v.cflag.html#[]CFlag.c_options_after_target","fn ([]CFlag)"],["v.cflag","","v.cflag.html#[]CFlag.c_options_without_object_files","fn ([]CFlag)"],["v.cflag","","v.cflag.html#[]CFlag.c_options_only_object_files","fn ([]CFlag)"],["v.cflag","","v.cflag.html#[]CFlag.defines_others_libs","fn ([]CFlag)"],["v.checker","","v.checker.html#Checker","struct "],["v.checker"," call this *before* calling error or warn ","v.checker.html#Checker.add_error_detail","fn (Checker)"],["v.checker","","v.checker.html#Checker.alias_type_decl","fn (Checker)"],["v.checker","","v.checker.html#Checker.array_init","fn (Checker)"],["v.checker","","v.checker.html#Checker.assign_stmt","fn (Checker)"],["v.checker","","v.checker.html#Checker.call_expr","fn (Checker)"],["v.checker"," pub fn (mut c Checker) asm_reg(mut node ast.AsmRegister) ast.Type {  	name := n","v.checker.html#Checker.cast_expr","fn (Checker)"],["v.checker","","v.checker.html#Checker.chan_init","fn (Checker)"],["v.checker","","v.checker.html#Checker.change_current_file","fn (Checker)"],["v.checker","","v.checker.html#Checker.check","fn (Checker)"],["v.checker"," not used right now ","v.checker.html#Checker.check2","fn (Checker)"],["v.checker","","v.checker.html#Checker.check_basic","fn (Checker)"],["v.checker","","v.checker.html#Checker.check_dup_keys","fn (Checker)"],["v.checker","","v.checker.html#Checker.check_expected","fn (Checker)"],["v.checker","","v.checker.html#Checker.check_expected_arg_count","fn (Checker)"],["v.checker","","v.checker.html#Checker.check_expected_call_arg","fn (Checker)"],["v.checker"," return the actual type of the expression, once the optional is handled ","v.checker.html#Checker.check_expr_opt_call","fn (Checker)"],["v.checker","","v.checker.html#Checker.check_files","fn (Checker)"],["v.checker","","v.checker.html#Checker.check_matching_function_symbols","fn (Checker)"],["v.checker","","v.checker.html#Checker.check_or_expr","fn (Checker)"],["v.checker","","v.checker.html#Checker.check_scope_vars","fn (Checker)"],["v.checker"," TODO: promote(), check_types(), symmetric_check() and check() overlap - should ","v.checker.html#Checker.check_types","fn (Checker)"],["v.checker","","v.checker.html#Checker.concat_expr","fn (Checker)"],["v.checker","","v.checker.html#Checker.const_decl","fn (Checker)"],["v.checker","","v.checker.html#Checker.ensure_sumtype_array_has_default_value","fn (Checker)"],["v.checker","","v.checker.html#Checker.enum_decl","fn (Checker)"],["v.checker"," `.green` or `Color.green`  If a short form is used, `expected_type` needs to be","v.checker.html#Checker.enum_val","fn (Checker)"],["v.checker","","v.checker.html#Checker.error","fn (Checker)"],["v.checker","","v.checker.html#Checker.expand_iface_embeds","fn (Checker)"],["v.checker"," TODO node must be mut ","v.checker.html#Checker.expr","fn (Checker)"],["v.checker","","v.checker.html#Checker.fail_if_unreadable","fn (Checker)"],["v.checker","","v.checker.html#Checker.find_unreachable_statements_after_noreturn_calls","fn (Checker)"],["v.checker","","v.checker.html#Checker.fn_call","fn (Checker)"],["v.checker","","v.checker.html#Checker.fn_type_decl","fn (Checker)"],["v.checker"," generic struct instantiations to concrete types ","v.checker.html#Checker.generic_insts_to_concrete","fn (Checker)"],["v.checker","","v.checker.html#Checker.get_base_name","fn (Checker)"],["v.checker","","v.checker.html#Checker.get_default_fmt","fn (Checker)"],["v.checker","","v.checker.html#Checker.ident","fn (Checker)"],["v.checker","","v.checker.html#Checker.if_expr","fn (Checker)"],["v.checker","","v.checker.html#Checker.index_expr","fn (Checker)"],["v.checker","","v.checker.html#Checker.infer_fn_generic_types","fn (Checker)"],["v.checker","","v.checker.html#Checker.infix_expr","fn (Checker)"],["v.checker","","v.checker.html#Checker.int_lit","fn (Checker)"],["v.checker","","v.checker.html#Checker.interface_decl","fn (Checker)"],["v.checker","","v.checker.html#Checker.lock_expr","fn (Checker)"],["v.checker","","v.checker.html#Checker.map_init","fn (Checker)"],["v.checker","","v.checker.html#Checker.mark_as_referenced","fn (Checker)"],["v.checker","","v.checker.html#Checker.match_expr","fn (Checker)"],["v.checker","","v.checker.html#Checker.method_call","fn (Checker)"],["v.checker","","v.checker.html#Checker.note","fn (Checker)"],["v.checker","","v.checker.html#Checker.offset_of","fn (Checker)"],["v.checker","","v.checker.html#Checker.postfix_expr","fn (Checker)"],["v.checker","","v.checker.html#Checker.prefix_expr","fn (Checker)"],["v.checker","","v.checker.html#Checker.promote","fn (Checker)"],["v.checker"," TODO: non deferred ","v.checker.html#Checker.return_stmt","fn (Checker)"],["v.checker","","v.checker.html#Checker.select_expr","fn (Checker)"],["v.checker","","v.checker.html#Checker.selector_expr","fn (Checker)"],["v.checker","","v.checker.html#Checker.string_inter_lit","fn (Checker)"],["v.checker","","v.checker.html#Checker.string_lit","fn (Checker)"],["v.checker","","v.checker.html#Checker.struct_decl","fn (Checker)"],["v.checker","","v.checker.html#Checker.struct_init","fn (Checker)"],["v.checker","","v.checker.html#Checker.sum_type_decl","fn (Checker)"],["v.checker","","v.checker.html#Checker.symmetric_check","fn (Checker)"],["v.checker","","v.checker.html#Checker.type_decl","fn (Checker)"],["v.checker","","v.checker.html#Checker.unsafe_expr","fn (Checker)"],["v.checker","","v.checker.html#Checker.unwrap_generic","fn (Checker)"],["v.checker","","v.checker.html#Checker.warn","fn (Checker)"],["v.checker","","v.checker.html#new_checker","fn "],["v.depgraph","","v.depgraph.html#OrderedDepMap","type "],["v.depgraph","","v.depgraph.html#OrderedDepMap.set","fn (OrderedDepMap)"],["v.depgraph","","v.depgraph.html#OrderedDepMap.add","fn (OrderedDepMap)"],["v.depgraph","","v.depgraph.html#OrderedDepMap.get","fn (OrderedDepMap)"],["v.depgraph","","v.depgraph.html#OrderedDepMap.delete","fn (OrderedDepMap)"],["v.depgraph","","v.depgraph.html#OrderedDepMap.apply_diff","fn (OrderedDepMap)"],["v.depgraph","","v.depgraph.html#OrderedDepMap.size","fn (OrderedDepMap)"],["v.depgraph","","v.depgraph.html#new_dep_graph","fn "],["v.depgraph","","v.depgraph.html#DepGraph","type "],["v.depgraph","","v.depgraph.html#DepGraph.add","fn (DepGraph)"],["v.depgraph","","v.depgraph.html#DepGraph.resolve","fn (DepGraph)"],["v.depgraph","","v.depgraph.html#DepGraph.last_node","fn (DepGraph)"],["v.depgraph","","v.depgraph.html#DepGraph.display","fn (DepGraph)"],["v.depgraph","","v.depgraph.html#DepGraph.display_cycles","fn (DepGraph)"],["v.doc","","v.doc.html#DocComment","struct "],["v.doc"," is_example returns true if the contents of this comment is a doc example.  The ","v.doc.html#DocComment.is_example","fn (DocComment)"],["v.doc"," example returns the content of the example body ","v.doc.html#DocComment.example","fn (DocComment)"],["v.doc"," SymbolKind categorizes the symbols it documents.  The names are intentionally n","v.doc.html#SymbolKind","enum "],["v.doc","","v.doc.html#SymbolKind.str","fn (SymbolKind)"],["v.doc","","v.doc.html#Platform","enum "],["v.doc"," copy of pref.os_from_string ","v.doc.html#platform_from_string","fn "],["v.doc","","v.doc.html#platform_from_filename","fn "],["v.doc","","v.doc.html#Doc","struct "],["v.doc"," expr_typ_to_string has the same function as `Doc.typ_to_str`  but for `ast.Expr","v.doc.html#Doc.expr_typ_to_string","fn (Doc)"],["v.doc"," file_ast reads the contents of `ast.File` and returns a map of `DocNode`s. ","v.doc.html#Doc.file_ast","fn (Doc)"],["v.doc"," file_ast_with_pos has the same function as the `file_ast` but  instead returns ","v.doc.html#Doc.file_ast_with_pos","fn (Doc)"],["v.doc"," file_asts has the same function as the `file_ast` function but  accepts an arra","v.doc.html#Doc.file_asts","fn (Doc)"],["v.doc"," generate is a `Doc` method that will start documentation  process based on a fi","v.doc.html#Doc.generate","fn (Doc)"],["v.doc"," stmt reads the data of an `ast.Stmt` node and returns a `DocNode`.  An option e","v.doc.html#Doc.stmt","fn (Doc)"],["v.doc"," stmt_name returns the name of a given `ast.Stmt` node. ","v.doc.html#Doc.stmt_name","fn (Doc)"],["v.doc"," stmt_pub returns a boolean if a given `ast.Stmt` node  is exposed to the public","v.doc.html#Doc.stmt_pub","fn (Doc)"],["v.doc"," stmt_signature returns the signature of a given `ast.Stmt` node. ","v.doc.html#Doc.stmt_signature","fn (Doc)"],["v.doc"," type_to_str is a wrapper function around `fmt.ast.type_to_str`. ","v.doc.html#Doc.type_to_str","fn (Doc)"],["v.doc","","v.doc.html#DocNode","struct "],["v.doc"," merge_comments returns a `string` with the combined contents of `DocNode.commen","v.doc.html#DocNode.merge_comments","fn (DocNode)"],["v.doc"," merge_comments_without_examples returns a `string` with the  combined contents ","v.doc.html#DocNode.merge_comments_without_examples","fn (DocNode)"],["v.doc"," examples returns a `[]string` containing examples parsed from `DocNode.comments","v.doc.html#DocNode.examples","fn (DocNode)"],["v.doc"," new_vdoc_preferences creates a new instance of pref.Preferences tailored for v.","v.doc.html#new_vdoc_preferences","fn "],["v.doc"," new creates a new instance of a `Doc` struct. ","v.doc.html#new","fn "],["v.doc"," generate documents a certain file directory and returns an  instance of `Doc` i","v.doc.html#generate","fn "],["v.doc"," generate_with_pos has the same function as the `generate` function but  accepts","v.doc.html#generate_with_pos","fn "],["v.doc"," lookup_module_with_path looks up the path of a given module name.  Throws an er","v.doc.html#lookup_module_with_path","fn "],["v.doc"," lookup_module returns the result of the `lookup_module_with_path`  but with the","v.doc.html#lookup_module","fn "],["v.doc"," generate_from_mod generates a documentation from a specific module. ","v.doc.html#generate_from_mod","fn "],["v.doc","","v.doc.html#[]DocNode","type "],["v.doc","","v.doc.html#[]DocNode.find","fn ([]DocNode)"],["v.doc"," sort_by_name sorts the array based on the symbol names. ","v.doc.html#[]DocNode.sort_by_name","fn ([]DocNode)"],["v.doc"," sort_by_kind sorts the array based on the symbol kind. ","v.doc.html#[]DocNode.sort_by_kind","fn ([]DocNode)"],["v.doc","","v.doc.html#map[string]DocNode","type "],["v.doc"," arr() converts the map into an array of `DocNode`. ","v.doc.html#map[string]DocNode.arr","fn (map[string]DocNode)"],["v.doc"," merge_comments merges all the comment contents into a single text. ","v.doc.html#merge_comments","fn "],["v.doc"," ast_comment_to_doc_comment converts an `ast.Comment` node type to a `DocComment","v.doc.html#ast_comment_to_doc_comment","fn "],["v.doc"," ast_comments_to_doc_comments converts an array of `ast.Comment` nodes to  an ar","v.doc.html#ast_comments_to_doc_comments","fn "],["v.doc"," merge_doc_comments merges all the comments starting from  the last up to the fi","v.doc.html#merge_doc_comments","fn "],["v.embed_file"," https://github.com/vlang/rfcs/blob/master/embedding_resources.md  EmbedFileData","v.embed_file.html#EmbedFileData","struct "],["v.embed_file","","v.embed_file.html#EmbedFileData.str","fn (EmbedFileData)"],["v.embed_file","","v.embed_file.html#EmbedFileData.free","fn (EmbedFileData)"],["v.embed_file","","v.embed_file.html#EmbedFileData.to_string","fn (EmbedFileData)"],["v.embed_file","","v.embed_file.html#EmbedFileData.to_bytes","fn (EmbedFileData)"],["v.embed_file","","v.embed_file.html#EmbedFileData.data","fn (EmbedFileData)"],["v.embed_file","////////////////////////////////////////////////////////////////////////////  Em","v.embed_file.html#EmbedFileIndexEntry","struct "],["v.embed_file"," find_index_entry_by_path is used internally by the V compiler: ","v.embed_file.html#find_index_entry_by_path","fn "],["v.errors","","v.errors.html#Reporter","enum "],["v.errors","","v.errors.html#Error","struct "],["v.errors","","v.errors.html#Warning","struct "],["v.errors","","v.errors.html#Notice","struct "],["v.eval","","v.eval.html#Object","type "],["v.eval","","v.eval.html#Object.str","fn (Object)"],["v.eval","","v.eval.html#Eval","struct "],["v.eval","","v.eval.html#Eval.eval","fn (Eval)"],["v.eval","","v.eval.html#Var","struct "],["v.fmt","","v.fmt.html#Fmt","struct "],["v.fmt","","v.fmt.html#Fmt.alias_type_decl","fn (Fmt)"],["v.fmt","=== Specific Expr methods ===// ","v.fmt.html#Fmt.array_decompose","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.array_init","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.as_cast","fn (Fmt)"],["v.fmt","=== Specific Stmt methods ===// ","v.fmt.html#Fmt.assert_stmt","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.assign_stmt","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.assoc","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.at_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.attrs","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.block","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.branch_stmt","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.call_args","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.call_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.cast_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.chan_init","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.comment","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.comments","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.comments_after_last_field","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.comments_before_field","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.comp_for","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.comptime_call","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.comptime_selector","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.concat_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.const_decl","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.defer_stmt","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.dump_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.enum_decl","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.enum_val","fn (Fmt)"],["v.fmt","=== General Expr-related methods and helpers ===// ","v.fmt.html#Fmt.expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.expr_stmt","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.fn_decl","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.fn_type_decl","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.for_c_stmt","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.for_in_stmt","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.for_stmt","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.global_decl","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.go_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.goto_label","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.goto_stmt","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.hash_stmt","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.ident","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.if_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.if_guard_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.imp_stmt_str","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.import_comments","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.imports","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.index_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.infix_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.interface_decl","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.is_ref_type","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.likely","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.lock_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.map_init","fn (Fmt)"],["v.fmt"," `name` is a function (`foo.bar()`) or type (`foo.Bar{}`) ","v.fmt.html#Fmt.mark_import_as_used","fn (Fmt)"],["v.fmt","=== Import-related methods ===// ","v.fmt.html#Fmt.mark_types_import_as_used","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.match_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.mod","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.no_cur_mod","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.node_str","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.offset_of","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.or_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.par_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.postfix_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.prefix_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.prefix_expr_cast_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.process_file_imports","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.range_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.remove_new_line","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.return_stmt","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.select_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.selector_expr","fn (Fmt)"],["v.fmt","=== Module handling helper methods ===// ","v.fmt.html#Fmt.set_current_module_name","fn (Fmt)"],["v.fmt"," foo.bar.fn() => bar.fn() ","v.fmt.html#Fmt.short_module","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.single_line_attrs","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.size_of","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.sql_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.sql_stmt","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.sql_stmt_line","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.stmt","fn (Fmt)"],["v.fmt","=== General Stmt-related methods and helpers ===// ","v.fmt.html#Fmt.stmts","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.string_inter_literal","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.string_literal","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.struct_decl","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.struct_init","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.sum_type_decl","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.type_decl","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.type_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.type_of","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.unsafe_expr","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.wrap_infix","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.wrap_long_line","fn (Fmt)"],["v.fmt","=== Basic buffer write operations ===// ","v.fmt.html#Fmt.write","fn (Fmt)"],["v.fmt","","v.fmt.html#Fmt.writeln","fn (Fmt)"],["v.fmt","","v.fmt.html#AttrsOptions","struct "],["v.fmt","","v.fmt.html#CommentsLevel","enum "],["v.fmt"," CommentsOptions defines the way comments are going to be written  - has_nl: add","v.fmt.html#CommentsOptions","struct "],["v.fmt","","v.fmt.html#fmt","fn "],["v.fmt","","v.fmt.html#RemoveNewLineConfig","struct "],["v.gen.c","","v.gen.c.html#StrIntpType","enum "],["v.gen.c","","v.gen.c.html#type_to_str","fn "],["v.gen.c","","v.gen.c.html#data_str","fn "],["v.gen.c","","v.gen.c.html#gen","fn "],["v.gen.c","","v.gen.c.html#Gen","type "],["v.gen.c"," returns true if `t` includes any pointer(s) - during garbage collection heap re","v.gen.c.html#Gen.contains_ptr","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.current_tmp_var","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.finish","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.gen_c_android_sokol_main","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.gen_c_main","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.gen_c_main_footer","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.gen_c_main_for_tests","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.gen_failing_error_propagation_for_test_fn","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.gen_failing_return_error_for_test_fn","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.gen_vprint_profile_stats","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.get_array_depth","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.hashes","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.init","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.new_tmp_declaration_name","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.new_tmp_var","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.reset_tmp_count","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.write","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.write_alias_typesymbol_declaration","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.write_fn_typesymbol_declaration","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.write_interface_typedef","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.write_interface_typesymbol_declaration","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.write_multi_return_types","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.write_tests_definitions","fn (Gen)"],["v.gen.c"," ","v.gen.c.html#Gen.write_typedef_types","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.write_typeof_functions","fn (Gen)"],["v.gen.c","","v.gen.c.html#Gen.writeln","fn (Gen)"],["v.gen.c","","v.gen.c.html#get_guarded_include_text","fn "],["v.gen.c","","v.gen.c.html#ProfileCounterMeta","struct "],["v.gen.js","","v.gen.js.html#JsGen","type "],["v.gen.js","","v.gen.js.html#JsGen.dec_indent","fn (JsGen)"],["v.gen.js","","v.gen.js.html#JsGen.enter_namespace","fn (JsGen)"],["v.gen.js","","v.gen.js.html#JsGen.escape_namespace","fn (JsGen)"],["v.gen.js","","v.gen.js.html#JsGen.find_class_methods","fn (JsGen)"],["v.gen.js","","v.gen.js.html#JsGen.gen_indent","fn (JsGen)"],["v.gen.js","","v.gen.js.html#JsGen.hashes","fn (JsGen)"],["v.gen.js","","v.gen.js.html#JsGen.inc_indent","fn (JsGen)"],["v.gen.js","","v.gen.js.html#JsGen.init","fn (JsGen)"],["v.gen.js","","v.gen.js.html#JsGen.new_tmp_var","fn (JsGen)"],["v.gen.js","","v.gen.js.html#JsGen.push_pub_var","fn (JsGen)"],["v.gen.js"," V type to JS type ","v.gen.js.html#JsGen.typ","fn (JsGen)"],["v.gen.js","","v.gen.js.html#JsGen.write","fn (JsGen)"],["v.gen.js","","v.gen.js.html#JsGen.writeln","fn (JsGen)"],["v.gen.js","","v.gen.js.html#gen","fn "],["v.gen.js.sourcemap","","v.gen.js.sourcemap.html#SourcePosition","struct "],["v.gen.js.sourcemap","","v.gen.js.sourcemap.html#new_sourcemap","fn "],["v.gen.js.sourcemap","","v.gen.js.sourcemap.html#SourceMap","type "],["v.gen.js.sourcemap"," Add a single mapping from original source line and column to the generated sour","v.gen.js.sourcemap.html#SourceMap.add_mapping","fn (SourceMap)"],["v.gen.js.sourcemap"," Add multiple mappings from the same source ","v.gen.js.sourcemap.html#SourceMap.add_mapping_list","fn (SourceMap)"],["v.gen.js.sourcemap"," Set the source content for a source file. ","v.gen.js.sourcemap.html#SourceMap.set_source_content","fn (SourceMap)"],["v.gen.js.sourcemap"," create a JSON representing the sourcemap  Sourcemap Specs http://sourcemaps.inf","v.gen.js.sourcemap.html#SourceMap.to_json","fn (SourceMap)"],["v.gen.js.sourcemap","","v.gen.js.sourcemap.html#generate_empty_map","fn "],["v.gen.js.sourcemap","","v.gen.js.sourcemap.html#Generator","type "],["v.gen.js.sourcemap","","v.gen.js.sourcemap.html#Generator.add_map","fn (Generator)"],["v.gen.js.sourcemap.vlq"," Decode a single VLQ value from the input stream, returning the value.   # Range","v.gen.js.sourcemap.vlq.html#decode","fn "],["v.gen.js.sourcemap.vlq"," Encode a value as Base64 VLQ, sending it to the writer ","v.gen.js.sourcemap.vlq.html#encode","fn "],["v.gen.native","","v.gen.native.html#Amd64","struct "],["v.gen.native","","v.gen.native.html#Amd64.gen_exit","fn (Amd64)"],["v.gen.native","","v.gen.native.html#Amd64.allocate_var","fn (Amd64)"],["v.gen.native","","v.gen.native.html#Gen","struct "],["v.gen.native","","v.gen.native.html#Gen.add","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.add8","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.allocate_array","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.allocate_string","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.allocate_var","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.call_fn","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.call_fn_arm64","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.cld_repne_scasb","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.create_executable","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.error_with_pos","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.fn_decl_arm64","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.gen_amd64_exit","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.gen_arm64_exit","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.gen_exit","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.gen_loop_end","fn (Gen)"],["v.gen.native"," returns label's relative address ","v.gen.native.html#Gen.gen_loop_start","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.gen_print","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.gen_print_from_expr","fn (Gen)"],["v.gen.native"," TODO: strlen of string at runtime ","v.gen.native.html#Gen.gen_print_reg","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.generate_elf_footer","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.generate_elf_header","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.generate_footer","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.generate_header","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.generate_macho_footer","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.generate_macho_header","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.generate_macho_object_header","fn (Gen)"],["v.gen.native"," return length in .rax of string pointed by given register ","v.gen.native.html#Gen.inline_strlen","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.pop","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.pos","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.push","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.register_function_address","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.ret","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.save_main_fn_addr","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.stmts","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.sub","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.sub32","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.sub8","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.xor","fn (Gen)"],["v.gen.native","","v.gen.native.html#Gen.zeroes","fn (Gen)"],["v.gen.native","","v.gen.native.html#Arm64","struct "],["v.gen.native","","v.gen.native.html#Arm64.allocate_var","fn (Arm64)"],["v.gen.native","","v.gen.native.html#Arm64.gen_exit","fn (Arm64)"],["v.gen.native","","v.gen.native.html#gen","fn "],["v.live","","v.live.html#FNLinkLiveSymbols","type "],["v.live","","v.live.html#FNLiveReloadCB","type "],["v.live","","v.live.html#LiveReloadInfo","struct "],["v.live"," LiveReloadInfo.live_linkfn should be called by the reloader  to dlsym all live ","v.live.html#info","fn "],["v.live.executable"," The live reloader code is implemented here.  NB: new_live_reload_info will be c","v.live.executable.html#new_live_reload_info","fn "],["v.live.executable"," NB: start_reloader will be called by generated code inside main(), to start  th","v.live.executable.html#start_reloader","fn "],["v.markused"," mark_used walks the AST, starting at main() and marks all used fns transitively","v.markused.html#mark_used","fn "],["v.markused","","v.markused.html#Walker","struct "],["v.markused","","v.markused.html#Walker.mark_fn_as_used","fn (Walker)"],["v.markused","","v.markused.html#Walker.mark_const_as_used","fn (Walker)"],["v.markused","","v.markused.html#Walker.mark_root_fns","fn (Walker)"],["v.markused","","v.markused.html#Walker.mark_exported_fns","fn (Walker)"],["v.markused","","v.markused.html#Walker.stmt","fn (Walker)"],["v.markused","","v.markused.html#Walker.fn_decl","fn (Walker)"],["v.markused","","v.markused.html#Walker.call_expr","fn (Walker)"],["v.markused","","v.markused.html#Walker.fn_by_name","fn (Walker)"],["v.markused","","v.markused.html#Walker.struct_fields","fn (Walker)"],["v.markused","","v.markused.html#Walker.const_fields","fn (Walker)"],["v.markused","","v.markused.html#Walker.or_block","fn (Walker)"],["v.parser","","v.parser.html#Parser","struct "],["v.parser","","v.parser.html#Parser.call_args","fn (Parser)"],["v.parser","","v.parser.html#Parser.call_expr","fn (Parser)"],["v.parser"," TODO [if vfmt] ","v.parser.html#Parser.check_comment","fn (Parser)"],["v.parser","","v.parser.html#Parser.check_expr","fn (Parser)"],["v.parser","","v.parser.html#Parser.check_for_impure_v","fn (Parser)"],["v.parser","","v.parser.html#Parser.close_scope","fn (Parser)"],["v.parser","","v.parser.html#Parser.comment","fn (Parser)"],["v.parser","","v.parser.html#Parser.comment_stmt","fn (Parser)"],["v.parser"," compile_file compiles the content of a file by the given path as a template ","v.parser.html#Parser.compile_template_file","fn (Parser)"],["v.parser","","v.parser.html#Parser.eat_comments","fn (Parser)"],["v.parser","","v.parser.html#Parser.error","fn (Parser)"],["v.parser","","v.parser.html#Parser.error_with_error","fn (Parser)"],["v.parser","","v.parser.html#Parser.error_with_pos","fn (Parser)"],["v.parser","","v.parser.html#Parser.expr","fn (Parser)"],["v.parser","","v.parser.html#Parser.expr_with_left","fn (Parser)"],["v.parser","","v.parser.html#Parser.free","fn (Parser)"],["v.parser","","v.parser.html#Parser.init_parse_fns","fn (Parser)"],["v.parser"," return true if file being parsed imports `mod` ","v.parser.html#Parser.known_import","fn (Parser)"],["v.parser","","v.parser.html#Parser.mark_var_as_used","fn (Parser)"],["v.parser","","v.parser.html#Parser.name_expr","fn (Parser)"],["v.parser","","v.parser.html#Parser.note","fn (Parser)"],["v.parser","","v.parser.html#Parser.note_with_pos","fn (Parser)"],["v.parser","","v.parser.html#Parser.open_scope","fn (Parser)"],["v.parser","","v.parser.html#Parser.parse","fn (Parser)"],["v.parser","","v.parser.html#Parser.parse_any_type","fn (Parser)"],["v.parser","","v.parser.html#Parser.parse_array_type","fn (Parser)"],["v.parser","","v.parser.html#Parser.parse_block","fn (Parser)"],["v.parser","","v.parser.html#Parser.parse_block_no_scope","fn (Parser)"],["v.parser","","v.parser.html#Parser.parse_chan_type","fn (Parser)"],["v.parser","","v.parser.html#Parser.parse_enum_or_struct_type","fn (Parser)"],["v.parser"," given anon name based off signature when `name` is blank ","v.parser.html#Parser.parse_fn_type","fn (Parser)"],["v.parser","","v.parser.html#Parser.parse_generic_struct_inst_type","fn (Parser)"],["v.parser","","v.parser.html#Parser.parse_generic_template_type","fn (Parser)"],["v.parser","","v.parser.html#Parser.parse_ident","fn (Parser)"],["v.parser"," Parses any language indicators on a type. ","v.parser.html#Parser.parse_language","fn (Parser)"],["v.parser","","v.parser.html#Parser.parse_map_type","fn (Parser)"],["v.parser","","v.parser.html#Parser.parse_multi_return_type","fn (Parser)"],["v.parser","","v.parser.html#Parser.parse_thread_type","fn (Parser)"],["v.parser","","v.parser.html#Parser.parse_type","fn (Parser)"],["v.parser","","v.parser.html#Parser.parse_type_with_mut","fn (Parser)"],["v.parser","","v.parser.html#Parser.peek_token","fn (Parser)"],["v.parser","","v.parser.html#Parser.read_first_token","fn (Parser)"],["v.parser","","v.parser.html#Parser.set_path","fn (Parser)"],["v.parser","","v.parser.html#Parser.stmt","fn (Parser)"],["v.parser","","v.parser.html#Parser.top_stmt","fn (Parser)"],["v.parser","","v.parser.html#Parser.vet_error","fn (Parser)"],["v.parser","","v.parser.html#Parser.warn","fn (Parser)"],["v.parser","","v.parser.html#Parser.warn_with_pos","fn (Parser)"],["v.parser"," for tests ","v.parser.html#parse_stmt","fn "],["v.parser","","v.parser.html#parse_comptime","fn "],["v.parser","","v.parser.html#parse_text","fn "],["v.parser","","v.parser.html#parse_file","fn "],["v.parser","","v.parser.html#parse_vet_file","fn "],["v.parser","","v.parser.html#parse_files","fn "],["v.pkgconfig","","v.pkgconfig.html#main","fn "],["v.pkgconfig","","v.pkgconfig.html#Main","type "],["v.pkgconfig","","v.pkgconfig.html#Main.run","fn (Main)"],["v.pkgconfig","","v.pkgconfig.html#Options","struct "],["v.pkgconfig","","v.pkgconfig.html#PkgConfig","struct "],["v.pkgconfig","","v.pkgconfig.html#PkgConfig.atleast","fn (PkgConfig)"],["v.pkgconfig","","v.pkgconfig.html#PkgConfig.extend","fn (PkgConfig)"],["v.pkgconfig","","v.pkgconfig.html#atleast","fn "],["v.pkgconfig","","v.pkgconfig.html#load","fn "],["v.pkgconfig","","v.pkgconfig.html#list","fn "],["v.pref","","v.pref.html#new_preferences","fn "],["v.pref","","v.pref.html#Preferences","struct "],["v.pref","","v.pref.html#Preferences.should_compile_asm","fn (Preferences)"],["v.pref","","v.pref.html#Preferences.should_compile_c","fn (Preferences)"],["v.pref","","v.pref.html#Preferences.should_compile_filtered_files","fn (Preferences)"],["v.pref","","v.pref.html#Preferences.should_compile_js","fn (Preferences)"],["v.pref","","v.pref.html#Preferences.should_compile_native","fn (Preferences)"],["v.pref","","v.pref.html#Preferences.vrun_elog","fn (Preferences)"],["v.pref","","v.pref.html#Preferences.fill_with_defaults","fn (Preferences)"],["v.pref","","v.pref.html#default_tcc_compiler","fn "],["v.pref","","v.pref.html#default_c_compiler","fn "],["v.pref","","v.pref.html#vexe_path","fn "],["v.pref","","v.pref.html#OS","enum "],["v.pref","","v.pref.html#OS.str","fn (OS)"],["v.pref"," Helper function to convert string names to OS enum ","v.pref.html#os_from_string","fn "],["v.pref","","v.pref.html#get_host_os","fn "],["v.pref","","v.pref.html#BuildMode","enum "],["v.pref","","v.pref.html#AssertFailureMode","enum "],["v.pref","","v.pref.html#GarbageCollectionMode","enum "],["v.pref","","v.pref.html#OutputMode","enum "],["v.pref","","v.pref.html#ColorOutput","enum "],["v.pref","","v.pref.html#Backend","enum "],["v.pref","","v.pref.html#Backend.is_js","fn (Backend)"],["v.pref","","v.pref.html#CompilerType","enum "],["v.pref","","v.pref.html#Arch","enum "],["v.pref","","v.pref.html#parse_args","fn "],["v.pref","","v.pref.html#arch_from_string","fn "],["v.pref","","v.pref.html#backend_from_string","fn "],["v.pref"," Helper function to convert string names to CC enum ","v.pref.html#cc_from_string","fn "],["v.pref","","v.pref.html#get_host_arch","fn "],["v.scanner","","v.scanner.html#Scanner","struct "],["v.scanner","","v.scanner.html#Scanner.free","fn (Scanner)"],["v.scanner"," NB: this is called by v's parser ","v.scanner.html#Scanner.set_is_inside_toplevel_statement","fn (Scanner)"],["v.scanner","","v.scanner.html#Scanner.set_current_tidx","fn (Scanner)"],["v.scanner","","v.scanner.html#Scanner.scan_all_tokens_in_buffer","fn (Scanner)"],["v.scanner","","v.scanner.html#Scanner.scan_remaining_text","fn (Scanner)"],["v.scanner","","v.scanner.html#Scanner.scan","fn (Scanner)"],["v.scanner","","v.scanner.html#Scanner.buffer_scan","fn (Scanner)"],["v.scanner","","v.scanner.html#Scanner.peek_token","fn (Scanner)"],["v.scanner","","v.scanner.html#Scanner.note","fn (Scanner)"],["v.scanner","","v.scanner.html#Scanner.warn","fn (Scanner)"],["v.scanner","","v.scanner.html#Scanner.error","fn (Scanner)"],["v.scanner","","v.scanner.html#Scanner.codegen","fn (Scanner)"],["v.scanner"," The different kinds of scanner modes:   .skip_comments - simplest/fastest, just","v.scanner.html#CommentsMode","enum "],["v.scanner"," new scanner from file. ","v.scanner.html#new_scanner_file","fn "],["v.scanner"," new scanner from string. ","v.scanner.html#new_scanner","fn "],["v.scanner","","v.scanner.html#verror","fn "],["v.token","","v.token.html#Position","struct "],["v.token","","v.token.html#Position.str","fn (Position)"],["v.token","","v.token.html#Position.extend","fn (Position)"],["v.token","","v.token.html#Position.extend_with_last_line","fn (Position)"],["v.token","","v.token.html#Position.update_last_line","fn (Position)"],["v.token","","v.token.html#Token","struct "],["v.token"," is_scalar returns true if the token is a scalar ","v.token.html#Token.is_scalar","fn (Token)"],["v.token"," is_unary returns true if the token can be in a unary expression ","v.token.html#Token.is_unary","fn (Token)"],["v.token","","v.token.html#Token.position","fn (Token)"],["v.token"," precedence returns a tokens precedence if defined, otherwise lowest_prec ","v.token.html#Token.precedence","fn (Token)"],["v.token","","v.token.html#Token.str","fn (Token)"],["v.token"," Pass ast.builtin_type_names  Note: can't import table here due to circular modu","v.token.html#Token.can_start_type","fn (Token)"],["v.token","","v.token.html#Kind","enum "],["v.token","","v.token.html#Kind.is_assign","fn (Kind)"],["v.token"," note: used for some code generation, so no quoting ","v.token.html#Kind.str","fn (Kind)"],["v.token","","v.token.html#Kind.is_relational","fn (Kind)"],["v.token","","v.token.html#Kind.is_start_of_type","fn (Kind)"],["v.token","","v.token.html#Kind.is_prefix","fn (Kind)"],["v.token","","v.token.html#Kind.is_infix","fn (Kind)"],["v.token"," @FN => will be substituted with the name of the current V function  @METHOD => ","v.token.html#AtKind","enum "],["v.token","","v.token.html#is_key","fn "],["v.token","","v.token.html#is_decl","fn "],["v.token"," Representation of highest and lowest precedence ","v.token.html#Precedence","enum "],["v.token","","v.token.html#build_precedences","fn "],["v.util"," iterates through a list of known diff cli commands  and returns it with basic o","v.util.html#find_working_diff_command","fn "],["v.util","","v.util.html#color_compare_files","fn "],["v.util","","v.util.html#color_compare_strings","fn "],["v.util","","v.util.html#EManager","struct "],["v.util","","v.util.html#EManager.set_support_color","fn (EManager)"],["v.util","","v.util.html#new_error_manager","fn "],["v.util","","v.util.html#bold","fn "],["v.util"," formatted_error - `kind` may be 'error' or 'warn' ","v.util.html#formatted_error","fn "],["v.util","","v.util.html#source_context","fn "],["v.util","","v.util.html#verror","fn "],["v.util","","v.util.html#vlines_escape_path","fn "],["v.util","","v.util.html#qualify_import","fn "],["v.util","","v.util.html#qualify_module","fn "],["v.util"," TODO:  * properly define module location / v.mod rules  * if possible split thi","v.util.html#mod_path_to_full_name","fn "],["v.util","","v.util.html#smart_quote","fn "],["v.util","","v.util.html#is_name_char","fn "],["v.util","","v.util.html#is_func_char","fn "],["v.util","","v.util.html#contains_capital","fn "],["v.util"," HTTPRequest  bad  HttpRequest  good ","v.util.html#good_type_name","fn "],["v.util"," is_generic_type_name returns true if the current token is a generic type name. ","v.util.html#is_generic_type_name","fn "],["v.util","","v.util.html#cescaped_path","fn "],["v.util","","v.util.html#new_suggestion","fn "],["v.util","","v.util.html#Suggestion","type "],["v.util","","v.util.html#Suggestion.add","fn (Suggestion)"],["v.util","","v.util.html#Suggestion.add_many","fn (Suggestion)"],["v.util","","v.util.html#Suggestion.sort","fn (Suggestion)"],["v.util","","v.util.html#Suggestion.say","fn (Suggestion)"],["v.util","","v.util.html#short_module_name","fn "],["v.util","","v.util.html#Timers","struct "],["v.util","","v.util.html#Timers.start","fn (Timers)"],["v.util","","v.util.html#Timers.measure","fn (Timers)"],["v.util","","v.util.html#Timers.measure_cumulative","fn (Timers)"],["v.util","","v.util.html#Timers.measure_pause","fn (Timers)"],["v.util","","v.util.html#Timers.measure_resume","fn (Timers)"],["v.util","","v.util.html#Timers.message","fn (Timers)"],["v.util","","v.util.html#Timers.show","fn (Timers)"],["v.util","","v.util.html#Timers.show_if_exists","fn (Timers)"],["v.util","","v.util.html#Timers.show_remaining","fn (Timers)"],["v.util","","v.util.html#Timers.dump_all","fn (Timers)"],["v.util","","v.util.html#new_timers","fn "],["v.util","","v.util.html#get_timers","fn "],["v.util","","v.util.html#timing_start","fn "],["v.util","","v.util.html#timing_measure","fn "],["v.util","","v.util.html#timing_measure_cumulative","fn "],["v.util","","v.util.html#timing_set_should_print","fn "],["v.util","","v.util.html#tabs","fn "],["v.util"," vhash() returns the build string C.V_COMMIT_HASH . See cmd/tools/gen_vc.v . ","v.util.html#vhash","fn "],["v.util","","v.util.html#full_hash","fn "],["v.util"," full_v_version() returns the full version of the V compiler ","v.util.html#full_v_version","fn "],["v.util"," githash(x) returns the current git commit hash.  When x is false, it is very fa","v.util.html#githash","fn "],["v.util"," ","v.util.html#set_vroot_folder","fn "],["v.util","","v.util.html#resolve_vmodroot","fn "],["v.util"," resolve_env_value replaces all occurrences of `$env('ENV_VAR_NAME')`  in `str` ","v.util.html#resolve_env_value","fn "],["v.util"," launch_tool - starts a V tool in a separate process, passing it the `args`.  Al","v.util.html#launch_tool","fn "],["v.util"," NB: should_recompile_tool/4 compares unix timestamps that have 1 second resolut","v.util.html#should_recompile_tool","fn "],["v.util","","v.util.html#quote_path","fn "],["v.util","","v.util.html#args_quote_paths","fn "],["v.util","","v.util.html#path_of_executable","fn "],["v.util","","v.util.html#read_file","fn "],["v.util","","v.util.html#skip_bom","fn "],["v.util","","v.util.html#replace_op","fn "],["v.util","","v.util.html#join_env_vflags_and_os_args","fn "],["v.util","","v.util.html#check_module_is_installed","fn "],["v.util","","v.util.html#ensure_modules_for_all_tools_are_installed","fn "],["v.util","","v.util.html#strip_mod_name","fn "],["v.util","","v.util.html#strip_main_name","fn "],["v.util","","v.util.html#no_dots","fn "],["v.util"," no_cur_mod - removes cur_mod. prefix from typename,  but *only* when it is at t","v.util.html#no_cur_mod","fn "],["v.util","","v.util.html#prepare_tool_when_needed","fn "],["v.util","","v.util.html#recompile_file","fn "],["v.util","","v.util.html#get_vtmp_folder","fn "],["v.util","","v.util.html#should_bundle_module","fn "],["v.util"," find_all_v_files - given a list of files/folders, finds all .v/.vsh files  if s","v.util.html#find_all_v_files","fn "],["v.util"," Highlight a command with an on-brand background to make CLI  commands immediate","v.util.html#pretty_print","fn "],["v.util.diff"," iterates through a list of known diff cli commands  and returns it with basic o","v.util.diff.html#find_working_diff_command","fn "],["v.util.diff","","v.util.diff.html#color_compare_files","fn "],["v.util.diff","","v.util.diff.html#color_compare_strings","fn "],["v.util.recompilation"," disabling_file returns the path to a file, which if present, will disable the a","v.util.recompilation.html#disabling_file","fn "],["v.util.recompilation"," must_be_enabled is intended to be used by tools like `v self` and `v up`, to ab","v.util.recompilation.html#must_be_enabled","fn "],["v.util.vtest","","v.util.vtest.html#FilterVTestConfig","struct "],["v.util.vtest"," if VTEST_ONLY env var is set, returns tests that match the query ","v.util.vtest.html#filter_vtest_only","fn "],["v.vcache"," Using a 2 level cache, ensures a more even distribution of cache entries,  so t","v.vcache.html#CacheManager","struct "],["v.vcache"," set_temporary_options can be used to add temporary options to the hash salt  NB","v.vcache.html#CacheManager.set_temporary_options","fn (CacheManager)"],["v.vcache","","v.vcache.html#CacheManager.key2cpath","fn (CacheManager)"],["v.vcache","","v.vcache.html#CacheManager.postfix_with_key2cpath","fn (CacheManager)"],["v.vcache","","v.vcache.html#CacheManager.exists","fn (CacheManager)"],["v.vcache","","v.vcache.html#CacheManager.save","fn (CacheManager)"],["v.vcache","","v.vcache.html#CacheManager.load","fn (CacheManager)"],["v.vcache","","v.vcache.html#new_cache_manager","fn "],["v.vcache","","v.vcache.html#dlog","fn "],["v.vet","","v.vet.html#ErrorKind","enum "],["v.vet","","v.vet.html#FixKind","enum "],["v.vet"," ErrorType is used to filter out false positive errors under specific conditions","v.vet.html#ErrorType","enum "],["v.vet","","v.vet.html#Error","struct "],["v.vmod","","v.vmod.html#Manifest","struct "],["v.vmod","","v.vmod.html#from_file","fn "],["v.vmod","","v.vmod.html#decode","fn "],["v.vmod"," This file provides a caching mechanism for seeking quickly whether a  given fol","v.vmod.html#ModFileAndFolder","struct "],["v.vmod","","v.vmod.html#ModFileCacher","struct "],["v.vmod","","v.vmod.html#ModFileCacher.debug","fn (ModFileCacher)"],["v.vmod","","v.vmod.html#ModFileCacher.get_by_file","fn (ModFileCacher)"],["v.vmod","","v.vmod.html#ModFileCacher.get_by_folder","fn (ModFileCacher)"],["v.vmod","","v.vmod.html#new_mod_file_cacher","fn "],["v.vmod","","v.vmod.html#get_cache","fn "],["vweb","","vweb.html#Context","struct "],["vweb"," declaring init_server in your App struct is optional ","vweb.html#Context.init_server","fn (Context)"],["vweb"," declaring before_request in your App struct is optional ","vweb.html#Context.before_request","fn (Context)"],["vweb"," vweb intern function ","vweb.html#Context.send_response_to_client","fn (Context)"],["vweb"," Response HTTP_OK with s as payload with content-type `text/html` ","vweb.html#Context.html","fn (Context)"],["vweb"," Response HTTP_OK with s as payload with content-type `text/plain` ","vweb.html#Context.text","fn (Context)"],["vweb"," Response HTTP_OK with s as payload with content-type `application/json` ","vweb.html#Context.json","fn (Context)"],["vweb"," Response HTTP_OK with s as payload ","vweb.html#Context.ok","fn (Context)"],["vweb"," Response a server error ","vweb.html#Context.server_error","fn (Context)"],["vweb"," Redirect to an url ","vweb.html#Context.redirect","fn (Context)"],["vweb"," Send an not_found response ","vweb.html#Context.not_found","fn (Context)"],["vweb"," Sets a cookie ","vweb.html#Context.set_cookie","fn (Context)"],["vweb"," Old function ","vweb.html#Context.set_cookie_old","fn (Context)"],["vweb"," Sets the response content type ","vweb.html#Context.set_content_type","fn (Context)"],["vweb"," Sets a cookie with a `expire_data` ","vweb.html#Context.set_cookie_with_expire_date","fn (Context)"],["vweb"," Gets a cookie by a key ","vweb.html#Context.get_cookie","fn (Context)"],["vweb"," Sets the response status ","vweb.html#Context.set_status","fn (Context)"],["vweb"," Adds an header to the response with key and val ","vweb.html#Context.add_header","fn (Context)"],["vweb"," Returns the header data from the key ","vweb.html#Context.get_header","fn (Context)"],["vweb"," Handles a directory static  If `root` is set the mount path for the dir will be","vweb.html#Context.handle_static","fn (Context)"],["vweb"," mount_static_folder_at - makes all static files in `directory_path` and inside ","vweb.html#Context.mount_static_folder_at","fn (Context)"],["vweb"," Serves a file static  `url` is the access path on the site, `file_path` is the ","vweb.html#Context.serve_static","fn (Context)"],["vweb"," Returns the ip address from the current user ","vweb.html#Context.ip","fn (Context)"],["vweb"," Set s to the form error ","vweb.html#Context.error","fn (Context)"],["vweb","","vweb.html#Cookie","struct "],["vweb","","vweb.html#Result","struct "],["vweb"," run_app ","vweb.html#run","fn "],["vweb"," Returns an empty result ","vweb.html#not_found","fn "],["vweb"," A type which don't get filtered inside templates ","vweb.html#RawHtml","type "],["vweb.assets"," new_manager returns a new AssetManager ","vweb.assets.html#new_manager","fn "],["vweb.assets","","vweb.assets.html#AssetManager","type "],["vweb.assets"," add_css adds a css asset ","vweb.assets.html#AssetManager.add_css","fn (AssetManager)"],["vweb.assets"," add_js adds a js asset ","vweb.assets.html#AssetManager.add_js","fn (AssetManager)"],["vweb.assets"," combine_css returns the combined css as a string when to_file is false  when to","vweb.assets.html#AssetManager.combine_css","fn (AssetManager)"],["vweb.assets"," combine_js returns the combined js as a string when to_file is false  when to_f","vweb.assets.html#AssetManager.combine_js","fn (AssetManager)"],["vweb.assets"," include_css returns the html <link> tag(s) for including the css files in a pag","vweb.assets.html#AssetManager.include_css","fn (AssetManager)"],["vweb.assets"," include_js returns the html <script> tag(s) for including the js files in a pag","vweb.assets.html#AssetManager.include_js","fn (AssetManager)"],["vweb.assets"," todo: implement proper minification ","vweb.assets.html#minify_css","fn "],["vweb.assets"," todo: implement proper minification ","vweb.assets.html#minify_js","fn "],["vweb.sse"," This module implements the server side of `Server Sent Events`.  See https://de","vweb.sse.html#SSEConnection","struct "],["vweb.sse"," sse_start is used to send the start of a Server Side Event response. ","vweb.sse.html#SSEConnection.start","fn (SSEConnection)"],["vweb.sse"," send_message sends a single message to the http client that listens for SSE.  I","vweb.sse.html#SSEConnection.send_message","fn (SSEConnection)"],["vweb.sse","","vweb.sse.html#SSEMessage","struct "],["vweb.sse","","vweb.sse.html#new_connection","fn "],["x.json2"," `Any` is a sum type that lists the possible types to be decoded and used. ","x.json2.html#Any","type "],["x.json2"," arr uses `Any` as an array. ","x.json2.html#Any.arr","fn (Any)"],["x.json2"," as_map uses `Any` as a map. ","x.json2.html#Any.as_map","fn (Any)"],["x.json2"," bool uses `Any` as a bool ","x.json2.html#Any.bool","fn (Any)"],["x.json2"," f32 uses `Any` as a 32-bit float. ","x.json2.html#Any.f32","fn (Any)"],["x.json2"," f64 uses `Any` as a float. ","x.json2.html#Any.f64","fn (Any)"],["x.json2"," i64 uses `Any` as a 64-bit integer. ","x.json2.html#Any.i64","fn (Any)"],["x.json2"," int uses `Any` as an integer. ","x.json2.html#Any.int","fn (Any)"],["x.json2"," json_str returns the JSON string representation of the `Any` type. ","x.json2.html#Any.json_str","fn (Any)"],["x.json2"," str returns the string representation of the `Any` type. Use the `json_str` met","x.json2.html#Any.str","fn (Any)"],["x.json2"," u64 uses `Any` as a 64-bit unsigned integer. ","x.json2.html#Any.u64","fn (Any)"],["x.json2"," `Null` struct is a simple representation of the `null` value in JSON. ","x.json2.html#Null","struct "],["x.json2","","x.json2.html#map[string]Any","type "],["x.json2"," str returns the string representation of the `map[string]Any`. ","x.json2.html#map[string]Any.str","fn (map[string]Any)"],["x.json2","","x.json2.html#[]Any","type "],["x.json2"," str returns the string representation of the `[]Any`. ","x.json2.html#[]Any.str","fn ([]Any)"],["x.json2","","x.json2.html#Serializable","interface "],["x.json2"," Decodes a JSON string into an `Any` type. Returns an option. ","x.json2.html#raw_decode","fn "],["x.json2"," Same with `raw_decode`, but skips the type conversion for certain types when de","x.json2.html#fast_raw_decode","fn "],["x.json2"," decode is a generic function that decodes a JSON string into the target type. ","x.json2.html#decode","fn "],["x.json2"," encode is a generic function that encodes a type into a JSON string. ","x.json2.html#encode","fn "],["x.ttf"," text align ","x.ttf.html#Text_align","enum "],["x.ttf"," draw style ","x.ttf.html#Style","enum "],["x.ttf","","x.ttf.html#BitMap","struct "],["x.ttf"," aline draw an aliased line on the bitmap ","x.ttf.html#BitMap.aline","fn (BitMap)"],["x.ttf","","x.ttf.html#BitMap.box","fn (BitMap)"],["x.ttf"," clear clear the bitmap with 0 bytes ","x.ttf.html#BitMap.clear","fn (BitMap)"],["x.ttf","","x.ttf.html#BitMap.clear_filler","fn (BitMap)"],["x.ttf","","x.ttf.html#BitMap.draw_glyph","fn (BitMap)"],["x.ttf","","x.ttf.html#BitMap.draw_text","fn (BitMap)"],["x.ttf"," write out a text ","x.ttf.html#BitMap.draw_text_block","fn (BitMap)"],["x.ttf","","x.ttf.html#BitMap.exec_filler","fn (BitMap)"],["x.ttf","","x.ttf.html#BitMap.fline","fn (BitMap)"],["x.ttf","","x.ttf.html#BitMap.get_bbox","fn (BitMap)"],["x.ttf","","x.ttf.html#BitMap.get_chars_bbox","fn (BitMap)"],["x.ttf","","x.ttf.html#BitMap.get_raw_bytes","fn (BitMap)"],["x.ttf","","x.ttf.html#BitMap.init_filler","fn (BitMap)"],["x.ttf","","x.ttf.html#BitMap.line","fn (BitMap)"],["x.ttf","","x.ttf.html#BitMap.plot","fn (BitMap)"],["x.ttf","","x.ttf.html#BitMap.quadratic","fn (BitMap)"],["x.ttf"," write out a .ppm file ","x.ttf.html#BitMap.save_as_ppm","fn (BitMap)"],["x.ttf","","x.ttf.html#BitMap.save_raw_data","fn (BitMap)"],["x.ttf"," set draw postion in the buffer ","x.ttf.html#BitMap.set_pos","fn (BitMap)"],["x.ttf"," set the rotation angle in radiants ","x.ttf.html#BitMap.set_rotation","fn (BitMap)"],["x.ttf","","x.ttf.html#color_multiply_alpha","fn "],["x.ttf","","x.ttf.html#color_multiply","fn "],["x.ttf","","x.ttf.html#TTF_render_Sokol","struct "],["x.ttf","","x.ttf.html#TTF_render_Sokol.format_texture","fn (TTF_render_Sokol)"],["x.ttf","","x.ttf.html#TTF_render_Sokol.create_text","fn (TTF_render_Sokol)"],["x.ttf","","x.ttf.html#TTF_render_Sokol.create_text_block","fn (TTF_render_Sokol)"],["x.ttf","","x.ttf.html#TTF_render_Sokol.create_texture","fn (TTF_render_Sokol)"],["x.ttf","","x.ttf.html#TTF_render_Sokol.destroy_texture","fn (TTF_render_Sokol)"],["x.ttf"," Use only if usage: .dynamic ","x.ttf.html#TTF_render_Sokol.update_text_texture","fn (TTF_render_Sokol)"],["x.ttf","","x.ttf.html#TTF_render_Sokol.draw_text_bmp","fn (TTF_render_Sokol)"],["x.ttf","","x.ttf.html#Text_block","struct "],["x.ttf","","x.ttf.html#TTF_File","struct "],["x.ttf","","x.ttf.html#TTF_File.init","fn (TTF_File)"],["x.ttf","","x.ttf.html#TTF_File.get_horizontal_metrics","fn (TTF_File)"],["x.ttf","","x.ttf.html#TTF_File.read_glyph_dim","fn (TTF_File)"],["x.ttf","","x.ttf.html#TTF_File.read_glyph","fn (TTF_File)"],["x.ttf","","x.ttf.html#TTF_File.get_info_string","fn (TTF_File)"],["x.ttf","","x.ttf.html#Point","struct "],["x.ttf","","x.ttf.html#Glyph","struct "],["x.websocket","","x.websocket.html#AcceptClientFn","type "],["x.websocket","","x.websocket.html#SocketMessageFn","type "],["x.websocket","","x.websocket.html#SocketMessageFn2","type "],["x.websocket","","x.websocket.html#SocketErrorFn","type "],["x.websocket","","x.websocket.html#SocketErrorFn2","type "],["x.websocket","","x.websocket.html#SocketOpenFn","type "],["x.websocket","","x.websocket.html#SocketOpenFn2","type "],["x.websocket","","x.websocket.html#SocketCloseFn","type "],["x.websocket","","x.websocket.html#SocketCloseFn2","type "],["x.websocket"," Server represents a websocket server connection ","x.websocket.html#Server","struct "],["x.websocket"," listen start listen and process to incoming connections from websocket clients ","x.websocket.html#Server.listen","fn (Server)"],["x.websocket"," on_close registers a callback on closed socket ","x.websocket.html#Server.on_close","fn (Server)"],["x.websocket"," on_close_ref registers a callback on closed socket and provides a reference obj","x.websocket.html#Server.on_close_ref","fn (Server)"],["x.websocket"," on_connect registers a callback when client connects to the server ","x.websocket.html#Server.on_connect","fn (Server)"],["x.websocket"," on_message registers a callback on new messages ","x.websocket.html#Server.on_message","fn (Server)"],["x.websocket"," on_message_ref registers a callback on new messages and provides a reference ob","x.websocket.html#Server.on_message_ref","fn (Server)"],["x.websocket"," set_ping_interval sets the interval that the server will send ping messages to ","x.websocket.html#Server.set_ping_interval","fn (Server)"],["x.websocket"," free manages manual free of memory for Server instance ","x.websocket.html#Server.free","fn (Server)"],["x.websocket"," Client represents websocket client ","x.websocket.html#Client","struct "],["x.websocket"," close closes the websocket connection ","x.websocket.html#Client.close","fn (Client)"],["x.websocket"," connect connects to remote websocket server ","x.websocket.html#Client.connect","fn (Client)"],["x.websocket"," free handles manual free memory of Client struct ","x.websocket.html#Client.free","fn (Client)"],["x.websocket"," listen listens and processes incoming messages ","x.websocket.html#Client.listen","fn (Client)"],["x.websocket"," on_close registers a callback on closed socket ","x.websocket.html#Client.on_close","fn (Client)"],["x.websocket"," on_close_ref registers a callback on closed socket and provides a reference obj","x.websocket.html#Client.on_close_ref","fn (Client)"],["x.websocket"," on_error registers a callback on errors ","x.websocket.html#Client.on_error","fn (Client)"],["x.websocket"," on_error_ref registers a callback on errors and provides a reference object ","x.websocket.html#Client.on_error_ref","fn (Client)"],["x.websocket"," on_message registers a callback on new messages ","x.websocket.html#Client.on_message","fn (Client)"],["x.websocket"," on_message_ref registers a callback on new messages and provides a reference ob","x.websocket.html#Client.on_message_ref","fn (Client)"],["x.websocket"," on_open registers a callback on successful opening the websocket ","x.websocket.html#Client.on_open","fn (Client)"],["x.websocket"," on_open_ref registers a callback on successful opening the websocket  and provi","x.websocket.html#Client.on_open_ref","fn (Client)"],["x.websocket"," parse_frame_header parses next message by decoding the incoming frames ","x.websocket.html#Client.parse_frame_header","fn (Client)"],["x.websocket"," ping sends ping message to server ","x.websocket.html#Client.ping","fn (Client)"],["x.websocket"," pong sends pong message to server, ","x.websocket.html#Client.pong","fn (Client)"],["x.websocket"," read_next_message reads 1 to n frames to compose a message ","x.websocket.html#Client.read_next_message","fn (Client)"],["x.websocket"," validate_client validates client frame rules from RFC6455 ","x.websocket.html#Client.validate_frame","fn (Client)"],["x.websocket"," write writes a byte array with a websocket messagetype to socket ","x.websocket.html#Client.write","fn (Client)"],["x.websocket"," write_ptr writes len bytes provided a byteptr with a websocket messagetype ","x.websocket.html#Client.write_ptr","fn (Client)"],["x.websocket"," write_string, writes a string with a websocket texttype to socket ","x.websocket.html#Client.write_str","fn (Client)"],["x.websocket"," write_str, writes a string with a websocket texttype to socket ","x.websocket.html#Client.write_string","fn (Client)"],["x.websocket","","x.websocket.html#Uri","type "],["x.websocket"," str returns the string representation of the Uri ","x.websocket.html#Uri.str","fn (Uri)"],["x.websocket"," State represents the state of the websocket connection. ","x.websocket.html#State","enum "],["x.websocket"," Message represents a whole message combined from 1 to n frames ","x.websocket.html#Message","struct "],["x.websocket"," free handles manual free memory of Message struct ","x.websocket.html#Message.free","fn (Message)"],["x.websocket"," OPCode represents the supported websocket frame types ","x.websocket.html#OPCode","enum "],["x.websocket"," new_client instance a new websocket client ","x.websocket.html#new_client","fn "],["x.websocket"," new_server instance a new websocket server on provided port and route ","x.websocket.html#new_server","fn "],];
