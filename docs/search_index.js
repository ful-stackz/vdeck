var searchModuleIndex = ["",];
var searchIndex = ["create_deck","create_standard_deck","Suit","Card","Deck","Deck<T>","shuffle","peek","peekn","peek_middle","peek_bottom","peek_bottomn","peek_random","peek_randomn","peek_at","draw","drawn","draw_middle","draw_bottom","draw_bottomn","draw_random","draw_randomn","draw_at","add","add_middle","add_bottom","add_at","add_random","get_cards","count_cards","has_cards","contains","index_of","create_uno_deck","UnoColor","UnoAction","UnoWildAction","UnoNumberCard","UnoActionCard","UnoWildCard","UnoCard",];
var searchModuleData = [["",".html"],];
var searchData = [[""," Creates a deck from the provided set of cards. ",".html#create_deck","fn "],[""," Creates a deck of 52 cards (2 through 10, Jock, Queen, King and Ace)  of the 4 ",".html#create_standard_deck","fn "],["","",".html#Suit","enum "],[""," Represents a standard playing card with a rank and a suit. ",".html#Card","struct "],[""," Represents a deck of cards. ",".html#Deck","struct "],["","",".html#Deck<T>","type "],[""," Shuffles the deck. Optionally specify how many times to shuffle it.  `deck.shuf",".html#Deck<T>.shuffle","fn (Deck<T>)"],[""," Peeks the card at the top of the deck.  Does not draw/remove the card from the ",".html#Deck<T>.peek","fn (Deck<T>)"],[""," Peeks a specified amount of cards from the top of the deck.  Does not draw/remo",".html#Deck<T>.peekn","fn (Deck<T>)"],[""," Peeks the card at the middle of the deck.  Does not draw/remove the card from t",".html#Deck<T>.peek_middle","fn (Deck<T>)"],[""," Peeks the card at the bottom of the deck.  Does not draw/remove the card from t",".html#Deck<T>.peek_bottom","fn (Deck<T>)"],[""," Peeks a specified amount of cards from the bottom of the deck.  Does not draw/r",".html#Deck<T>.peek_bottomn","fn (Deck<T>)"],[""," Peeks a card from a random position in the deck.  Does not draw/remove the card",".html#Deck<T>.peek_random","fn (Deck<T>)"],[""," Peeks a specified amount of cards from random, non-repeating positions in the d",".html#Deck<T>.peek_randomn","fn (Deck<T>)"],[""," Peeks the card at the specified position in the deck.  Does not draw/remove the",".html#Deck<T>.peek_at","fn (Deck<T>)"],[""," Draws a card from the top of the deck.  The card is then removed from the deck.",".html#Deck<T>.draw","fn (Deck<T>)"],[""," Draws a specified amount of cards from the top of the deck.  The cards are then",".html#Deck<T>.drawn","fn (Deck<T>)"],[""," Draws the card at the middle of the deck.  The card is then removed from the de",".html#Deck<T>.draw_middle","fn (Deck<T>)"],[""," Draws a single cards from the bottom of the deck.  The card is then removed fro",".html#Deck<T>.draw_bottom","fn (Deck<T>)"],[""," Draws a specified amount of cards from the bottom of the deck.  The cards are t",".html#Deck<T>.draw_bottomn","fn (Deck<T>)"],[""," Draws a card from a random position in the deck.  The card is then removed from",".html#Deck<T>.draw_random","fn (Deck<T>)"],[""," Draws a specified amount of cards from random positions in the deck.  The cards",".html#Deck<T>.draw_randomn","fn (Deck<T>)"],[""," Draws the card from the specified position in the deck.  The card is then remov",".html#Deck<T>.draw_at","fn (Deck<T>)"],[""," Adds the specified card to the top of the deck. ",".html#Deck<T>.add","fn (Deck<T>)"],[""," Adds the specified card to the middle of the deck. ",".html#Deck<T>.add_middle","fn (Deck<T>)"],[""," Adds the specified card to the bottom of the deck. ",".html#Deck<T>.add_bottom","fn (Deck<T>)"],[""," Adds the specified card at the specified position in the deck. ",".html#Deck<T>.add_at","fn (Deck<T>)"],[""," Adds the specified card at a random position in the deck. ",".html#Deck<T>.add_random","fn (Deck<T>)"],[""," Returns the cards currently in the deck. ",".html#Deck<T>.get_cards","fn (Deck<T>)"],[""," Returns the current amount of cards in the deck. ",".html#Deck<T>.count_cards","fn (Deck<T>)"],[""," Returns a boolean indicating whether there is atleast 1 card in the deck. ",".html#Deck<T>.has_cards","fn (Deck<T>)"],[""," Checks whether the specified card is contained in the deck. ",".html#Deck<T>.contains","fn (Deck<T>)"],[""," Returns the index of the specified card in the deck.  Returns `-1` if the card ",".html#Deck<T>.index_of","fn (Deck<T>)"],[""," Creates a standard deck of 108 Uno cards, including  one `0` of each color, fou",".html#create_uno_deck","fn "],["","",".html#UnoColor","enum "],["","",".html#UnoAction","enum "],["","",".html#UnoWildAction","enum "],["","",".html#UnoNumberCard","struct "],["","",".html#UnoActionCard","struct "],["","",".html#UnoWildCard","struct "],["","",".html#UnoCard","type "],];
